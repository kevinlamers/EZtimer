ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_12.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_12_initVar
  18              		.bss
  19              		.type	PWM_12_initVar, %object
  20              		.size	PWM_12_initVar, 1
  21              	PWM_12_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_12_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_12_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_12_Start, %function
  29              	PWM_12_Start:
  30              	.LFB2:
  31              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_12.c"
   1:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_12.c **** * File Name: PWM_12.c
   3:.\Generated_Source\PSoC4/PWM_12.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_12.c **** *
   5:.\Generated_Source\PSoC4/PWM_12.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_12.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_12.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_12.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_12.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_12.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_12.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_12.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_12.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_12.c **** *
  15:.\Generated_Source\PSoC4/PWM_12.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_12.c **** *
  17:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_12.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_12.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_12.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_12.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_12.c **** 
  24:.\Generated_Source\PSoC4/PWM_12.c **** #include "PWM_12.h"
  25:.\Generated_Source\PSoC4/PWM_12.c **** 
  26:.\Generated_Source\PSoC4/PWM_12.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 2


  27:.\Generated_Source\PSoC4/PWM_12.c **** #ifdef PWM_12_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_12.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_12.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* PWM_12_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_12.c **** 
  32:.\Generated_Source\PSoC4/PWM_12.c **** uint8 PWM_12_initVar = 0u;
  33:.\Generated_Source\PSoC4/PWM_12.c **** 
  34:.\Generated_Source\PSoC4/PWM_12.c **** 
  35:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_Start
  37:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_12.c **** *
  39:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_12.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_12.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_12.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_12.c **** *
  44:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_12.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_12.c **** *
  47:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_12.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_12.c **** *
  50:.\Generated_Source\PSoC4/PWM_12.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_12.c **** *  PWM_12_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_12.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_12.c **** *
  54:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_12.c **** void PWM_12_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_12.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:.\Generated_Source\PSoC4/PWM_12.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_12.c ****     if(PWM_12_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:.\Generated_Source\PSoC4/PWM_12.c ****     {
  60:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_12_Init
  61:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:.\Generated_Source\PSoC4/PWM_12.c ****     }
  63:.\Generated_Source\PSoC4/PWM_12.c ****     PWM_12_Enable();
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_12_Enable
  64:.\Generated_Source\PSoC4/PWM_12.c **** 
  65:.\Generated_Source\PSoC4/PWM_12.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_12_initVar
  62              		.cfi_endproc
  63              	.LFE2:
  64              		.size	PWM_12_Start, .-PWM_12_Start
  65              		.section	.text.PWM_12_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_12_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_12_Init, %function
  71              	PWM_12_Init:
  72              	.LFB3:
  66:.\Generated_Source\PSoC4/PWM_12.c **** 
  67:.\Generated_Source\PSoC4/PWM_12.c **** 
  68:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_Init
  70:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_12.c **** *
  72:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_12.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_12.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_12.c **** *  PWM_12_Start().
  76:.\Generated_Source\PSoC4/PWM_12.c **** *
  77:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_12.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_12.c **** *
  80:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_12.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_12.c **** *
  83:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_12.c **** void PWM_12_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_12.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UsingFixedFunction || PWM_12_UseControl)
  87:.\Generated_Source\PSoC4/PWM_12.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction || PWM_12_UseControl) */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 4


  89:.\Generated_Source\PSoC4/PWM_12.c **** 
  90:.\Generated_Source\PSoC4/PWM_12.c ****     #if(!PWM_12_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_12.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_12.c ****             uint8 PWM_12_interruptState;
  94:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (!PWM_12_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_12.c **** 
  97:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_12.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL |= PWM_12_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_CONTROL |= PWM_12_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_12.c **** 
 104:.\Generated_Source\PSoC4/PWM_12.c ****         ctrl = PWM_12_CONTROL3 & ((uint8 )(~PWM_12_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL3 = ctrl | PWM_12_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_12.c **** 
 107:.\Generated_Source\PSoC4/PWM_12.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_RT1 &= ((uint8)(~PWM_12_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_RT1 |= PWM_12_SYNC;
 110:.\Generated_Source\PSoC4/PWM_12.c **** 
 111:.\Generated_Source\PSoC4/PWM_12.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_RT1 &= ((uint8)(~PWM_12_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_RT1 |= PWM_12_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_12.c **** 
 115:.\Generated_Source\PSoC4/PWM_12.c ****     #elif (PWM_12_UseControl)
 116:.\Generated_Source\PSoC4/PWM_12.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_12.c ****         ctrl = PWM_12_CONTROL & ((uint8)(~PWM_12_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 244B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:.\Generated_Source\PSoC4/PWM_12.c ****                 ((uint8)(~PWM_12_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL = ctrl | PWM_12_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 204A     		ldr	r2, .L6
  94 0016 FB1D     		add	r3, r7, #7
  95 0018 1B78     		ldrb	r3, [r3]
  96 001a 0921     		mov	r1, #9
  97 001c 0B43     		orr	r3, r1
  98 001e DBB2     		uxtb	r3, r3
  99 0020 1370     		strb	r3, [r2]
 120:.\Generated_Source\PSoC4/PWM_12.c ****                                    PWM_12_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_12.c **** 
 123:.\Generated_Source\PSoC4/PWM_12.c ****     #if (!PWM_12_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_12.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_AUX_CONTROLDP0 |= (PWM_12_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_12.c ****         #else /* (PWM_12_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_12.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_AUX_CONTROLDP0 |= (PWM_12_AUX_CTRL_FIFO0_CLR);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 5


 100              		.loc 1 129 0
 101 0022 1E4A     		ldr	r2, .L6+4
 102 0024 1D4B     		ldr	r3, .L6+4
 103 0026 1B78     		ldrb	r3, [r3]
 104 0028 DBB2     		uxtb	r3, r3
 105 002a 0121     		mov	r1, #1
 106 002c 0B43     		orr	r3, r1
 107 002e DBB2     		uxtb	r3, r3
 108 0030 1370     		strb	r3, [r2]
 130:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_AUX_CONTROLDP1 |= (PWM_12_AUX_CTRL_FIFO0_CLR);
 109              		.loc 1 130 0
 110 0032 1B4A     		ldr	r2, .L6+8
 111 0034 1A4B     		ldr	r3, .L6+8
 112 0036 1B78     		ldrb	r3, [r3]
 113 0038 DBB2     		uxtb	r3, r3
 114 003a 0121     		mov	r1, #1
 115 003c 0B43     		orr	r3, r1
 116 003e DBB2     		uxtb	r3, r3
 117 0040 1370     		strb	r3, [r2]
 131:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_12.c **** 
 133:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_WriteCounter(PWM_12_INIT_PERIOD_VALUE);
 118              		.loc 1 133 0
 119 0042 184B     		ldr	r3, .L6+12
 120 0044 181C     		mov	r0, r3
 121 0046 FFF7FEFF 		bl	PWM_12_WriteCounter
 134:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (!PWM_12_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_12.c **** 
 136:.\Generated_Source\PSoC4/PWM_12.c ****     PWM_12_WritePeriod(PWM_12_INIT_PERIOD_VALUE);
 122              		.loc 1 136 0
 123 004a 164B     		ldr	r3, .L6+12
 124 004c 181C     		mov	r0, r3
 125 004e FFF7FEFF 		bl	PWM_12_WritePeriod
 137:.\Generated_Source\PSoC4/PWM_12.c **** 
 138:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_WriteCompare(PWM_12_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_WriteCompare1(PWM_12_INIT_COMPARE_VALUE1);
 126              		.loc 1 141 0
 127 0052 154B     		ldr	r3, .L6+16
 128 0054 181C     		mov	r0, r3
 129 0056 FFF7FEFF 		bl	PWM_12_WriteCompare1
 142:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_WriteCompare2(PWM_12_INIT_COMPARE_VALUE2);
 130              		.loc 1 142 0
 131 005a 134B     		ldr	r3, .L6+16
 132 005c 181C     		mov	r0, r3
 133 005e FFF7FEFF 		bl	PWM_12_WriteCompare2
 143:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_12.c **** 
 145:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_WriteKillTime(PWM_12_MinimumKillTime);
 147:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_12.c **** 
 149:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_WriteDeadTime(PWM_12_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_12.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 6


 153:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UseStatus || PWM_12_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_SetInterruptMode(PWM_12_INIT_INTERRUPTS_MODE);
 134              		.loc 1 154 0
 135 0062 0020     		mov	r0, #0
 136 0064 FFF7FEFF 		bl	PWM_12_SetInterruptMode
 155:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UseStatus || PWM_12_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_12.c **** 
 157:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_12.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_GLOBAL_ENABLE |= PWM_12_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_12.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL2 |= PWM_12_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_12.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_12.c **** 
 165:.\Generated_Source\PSoC4/PWM_12.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_12.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_interruptState = CyEnterCriticalSection();
 137              		.loc 1 167 0
 138 0068 BC1D     		add	r4, r7, #6
 139 006a FFF7FEFF 		bl	CyEnterCriticalSection
 140 006e 031C     		mov	r3, r0
 141 0070 2370     		strb	r3, [r4]
 168:.\Generated_Source\PSoC4/PWM_12.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_STATUS_AUX_CTRL |= PWM_12_STATUS_ACTL_INT_EN_MASK;
 142              		.loc 1 169 0
 143 0072 0B4A     		ldr	r2, .L6+8
 144 0074 0A4B     		ldr	r3, .L6+8
 145 0076 1B78     		ldrb	r3, [r3]
 146 0078 DBB2     		uxtb	r3, r3
 147 007a 1021     		mov	r1, #16
 148 007c 0B43     		orr	r3, r1
 149 007e DBB2     		uxtb	r3, r3
 150 0080 1370     		strb	r3, [r2]
 170:.\Generated_Source\PSoC4/PWM_12.c **** 
 171:.\Generated_Source\PSoC4/PWM_12.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_12.c ****             CyExitCriticalSection(PWM_12_interruptState);
 151              		.loc 1 172 0
 152 0082 BB1D     		add	r3, r7, #6
 153 0084 1B78     		ldrb	r3, [r3]
 154 0086 181C     		mov	r0, r3
 155 0088 FFF7FEFF 		bl	CyExitCriticalSection
 173:.\Generated_Source\PSoC4/PWM_12.c **** 
 174:.\Generated_Source\PSoC4/PWM_12.c ****             /* Clear the FIFO to enable the PWM_12_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_12.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_ClearFIFO();
 156              		.loc 1 176 0
 157 008c FFF7FEFF 		bl	PWM_12_ClearFIFO
 177:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_12.c **** }
 158              		.loc 1 179 0
 159 0090 BD46     		mov	sp, r7
 160 0092 03B0     		add	sp, sp, #12
 161              		@ sp needed
 162 0094 90BD     		pop	{r4, r7, pc}
 163              	.L7:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 7


 164 0096 C046     		.align	2
 165              	.L6:
 166 0098 73000F40 		.word	1074724979
 167 009c 92000F40 		.word	1074725010
 168 00a0 93000F40 		.word	1074725011
 169 00a4 0F270000 		.word	9999
 170 00a8 DC050000 		.word	1500
 171              		.cfi_endproc
 172              	.LFE3:
 173              		.size	PWM_12_Init, .-PWM_12_Init
 174              		.section	.text.PWM_12_Enable,"ax",%progbits
 175              		.align	2
 176              		.global	PWM_12_Enable
 177              		.code	16
 178              		.thumb_func
 179              		.type	PWM_12_Enable, %function
 180              	PWM_12_Enable:
 181              	.LFB4:
 180:.\Generated_Source\PSoC4/PWM_12.c **** 
 181:.\Generated_Source\PSoC4/PWM_12.c **** 
 182:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_Enable
 184:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_12.c **** *
 186:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_12.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_12.c **** *
 189:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_12.c **** *
 192:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_12.c **** *
 195:.\Generated_Source\PSoC4/PWM_12.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_12.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_12.c **** *
 198:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_12.c **** void PWM_12_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_12.c **** {
 182              		.loc 1 200 0
 183              		.cfi_startproc
 184 0000 80B5     		push	{r7, lr}
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 7, -8
 187              		.cfi_offset 14, -4
 188 0002 00AF     		add	r7, sp, #0
 189              		.cfi_def_cfa_register 7
 201:.\Generated_Source\PSoC4/PWM_12.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_GLOBAL_ENABLE |= PWM_12_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_GLOBAL_STBY_ENABLE |= PWM_12_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_12.c **** 
 207:.\Generated_Source\PSoC4/PWM_12.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UseControl || PWM_12_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL |= PWM_12_CTRL_ENABLE;
 190              		.loc 1 209 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 8


 191 0004 0549     		ldr	r1, .L9
 192 0006 054B     		ldr	r3, .L9
 193 0008 1B78     		ldrb	r3, [r3]
 194 000a DBB2     		uxtb	r3, r3
 195 000c 8022     		mov	r2, #128
 196 000e 5242     		neg	r2, r2
 197 0010 1343     		orr	r3, r2
 198 0012 DBB2     		uxtb	r3, r3
 199 0014 0B70     		strb	r3, [r1]
 210:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UseControl || PWM_12_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_12.c **** }
 200              		.loc 1 211 0
 201 0016 BD46     		mov	sp, r7
 202              		@ sp needed
 203 0018 80BD     		pop	{r7, pc}
 204              	.L10:
 205 001a C046     		.align	2
 206              	.L9:
 207 001c 73000F40 		.word	1074724979
 208              		.cfi_endproc
 209              	.LFE4:
 210              		.size	PWM_12_Enable, .-PWM_12_Enable
 211              		.section	.text.PWM_12_Stop,"ax",%progbits
 212              		.align	2
 213              		.global	PWM_12_Stop
 214              		.code	16
 215              		.thumb_func
 216              		.type	PWM_12_Stop, %function
 217              	PWM_12_Stop:
 218              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_12.c **** 
 213:.\Generated_Source\PSoC4/PWM_12.c **** 
 214:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_Stop
 216:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_12.c **** *
 218:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_12.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_12.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_12.c **** *
 222:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_12.c **** *
 225:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_12.c **** *
 228:.\Generated_Source\PSoC4/PWM_12.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_12.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_12.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_12.c **** *
 232:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_12.c **** void PWM_12_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_12.c **** {
 219              		.loc 1 234 0
 220              		.cfi_startproc
 221 0000 80B5     		push	{r7, lr}
 222              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 9


 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 225 0002 00AF     		add	r7, sp, #0
 226              		.cfi_def_cfa_register 7
 235:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UseControl || PWM_12_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_CONTROL &= ((uint8)(~PWM_12_CTRL_ENABLE));
 227              		.loc 1 236 0
 228 0004 044A     		ldr	r2, .L12
 229 0006 044B     		ldr	r3, .L12
 230 0008 1B78     		ldrb	r3, [r3]
 231 000a DBB2     		uxtb	r3, r3
 232 000c 7F21     		mov	r1, #127
 233 000e 0B40     		and	r3, r1
 234 0010 DBB2     		uxtb	r3, r3
 235 0012 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UseControl || PWM_12_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_12.c **** 
 239:.\Generated_Source\PSoC4/PWM_12.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_GLOBAL_ENABLE &= ((uint8)(~PWM_12_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_12.c ****         PWM_12_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_12_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_12.c **** }
 236              		.loc 1 244 0
 237 0014 BD46     		mov	sp, r7
 238              		@ sp needed
 239 0016 80BD     		pop	{r7, pc}
 240              	.L13:
 241              		.align	2
 242              	.L12:
 243 0018 73000F40 		.word	1074724979
 244              		.cfi_endproc
 245              	.LFE5:
 246              		.size	PWM_12_Stop, .-PWM_12_Stop
 247              		.section	.text.PWM_12_WriteCounter,"ax",%progbits
 248              		.align	2
 249              		.global	PWM_12_WriteCounter
 250              		.code	16
 251              		.thumb_func
 252              		.type	PWM_12_WriteCounter, %function
 253              	PWM_12_WriteCounter:
 254              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_12.c **** 
 246:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_12.c **** 
 249:.\Generated_Source\PSoC4/PWM_12.c **** 
 250:.\Generated_Source\PSoC4/PWM_12.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_12.c ****         * Function Name: PWM_12_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_12.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_12.c ****         *
 254:.\Generated_Source\PSoC4/PWM_12.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_12.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_12.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_12.c ****         *
 258:.\Generated_Source\PSoC4/PWM_12.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_12.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 10


 260:.\Generated_Source\PSoC4/PWM_12.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_12.c ****         *
 262:.\Generated_Source\PSoC4/PWM_12.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_12.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_12.c ****         *
 265:.\Generated_Source\PSoC4/PWM_12.c ****         *******************************************************************************/
 266:.\Generated_Source\PSoC4/PWM_12.c ****         void PWM_12_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_12.c ****         {
 268:.\Generated_Source\PSoC4/PWM_12.c ****             #if(PWM_12_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_12.c **** 
 270:.\Generated_Source\PSoC4/PWM_12.c ****                 #if(0 != PWM_12_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_12_CTRL_CMPMODE1_S
 272:.\Generated_Source\PSoC4/PWM_12.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_12.c ****                 #endif /* (0 != PWM_12_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_12.c **** 
 276:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL3 &= ((uint8)(~PWM_12_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_12.c **** 
 279:.\Generated_Source\PSoC4/PWM_12.c ****             #elif (PWM_12_UseControl)
 280:.\Generated_Source\PSoC4/PWM_12.c **** 
 281:.\Generated_Source\PSoC4/PWM_12.c ****                 #if(0 != PWM_12_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_12_CTRL_CMPMODE1_
 283:.\Generated_Source\PSoC4/PWM_12.c ****                                                 PWM_12_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_12.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemode1masked = comparemode & PWM_12_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_12.c ****                 #endif /* (0 != PWM_12_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_12.c **** 
 288:.\Generated_Source\PSoC4/PWM_12.c ****                 #if(0 != PWM_12_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_12_CTRL_CMPMODE2_
 290:.\Generated_Source\PSoC4/PWM_12.c ****                                                PWM_12_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_12.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_12.c ****                     uint8 comparemode2masked = comparemode & PWM_12_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_12.c ****                 #endif /* (0 != PWM_12_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_12.c **** 
 295:.\Generated_Source\PSoC4/PWM_12.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL &= ((uint8)(~(PWM_12_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_12.c ****                                             PWM_12_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_12.c **** 
 300:.\Generated_Source\PSoC4/PWM_12.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_12.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (PWM_12_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_12.c ****         }
 304:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* PWM_12_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_12.c **** 
 306:.\Generated_Source\PSoC4/PWM_12.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_12.c **** 
 308:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_12.c **** 
 310:.\Generated_Source\PSoC4/PWM_12.c **** 
 311:.\Generated_Source\PSoC4/PWM_12.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_12.c ****         * Function Name: PWM_12_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_12.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_12.c ****         *
 315:.\Generated_Source\PSoC4/PWM_12.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_12.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 11


 317:.\Generated_Source\PSoC4/PWM_12.c ****         *
 318:.\Generated_Source\PSoC4/PWM_12.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_12.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_12.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_12.c ****         *
 322:.\Generated_Source\PSoC4/PWM_12.c ****         * Return:
 323:.\Generated_Source\PSoC4/PWM_12.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_12.c ****         *
 325:.\Generated_Source\PSoC4/PWM_12.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_12.c ****         void PWM_12_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_12.c ****         {
 328:.\Generated_Source\PSoC4/PWM_12.c ****             #if(0 != PWM_12_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_12.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_12_CTRL_CMPMODE1_SHIFT
 330:.\Generated_Source\PSoC4/PWM_12.c ****                                            PWM_12_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_12.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_12.c ****                 uint8 comparemodemasked = comparemode & PWM_12_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (0 != PWM_12_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_12.c **** 
 335:.\Generated_Source\PSoC4/PWM_12.c ****             #if (PWM_12_UseControl)
 336:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL &= ((uint8)(~PWM_12_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (PWM_12_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_12.c ****         }
 340:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* PWM_12_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_12.c **** 
 342:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_12.c **** 
 344:.\Generated_Source\PSoC4/PWM_12.c **** 
 345:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_12.c ****     *
 349:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_12.c ****     *
 352:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_12.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_12.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_12.c ****     *
 356:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_12.c ****     *
 359:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_12.c ****     {
 362:.\Generated_Source\PSoC4/PWM_12.c **** 
 363:.\Generated_Source\PSoC4/PWM_12.c ****         #if(0 != PWM_12_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_12.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_12_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_12.c ****                                                  PWM_12_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_12.c ****             uint8 comparemodemasked = comparemode & PWM_12_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (0 != PWM_12_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_12.c **** 
 370:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_UseControl)
 371:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_CONTROL &= ((uint8)(~PWM_12_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UseControl) */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 12


 374:.\Generated_Source\PSoC4/PWM_12.c ****     }
 375:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /*PWM_12_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_12.c **** 
 377:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_12.c **** 
 379:.\Generated_Source\PSoC4/PWM_12.c **** 
 380:.\Generated_Source\PSoC4/PWM_12.c **** #if (!PWM_12_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_12.c **** 
 382:.\Generated_Source\PSoC4/PWM_12.c **** 
 383:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_12.c ****     *
 387:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_12.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_12.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_12.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_12.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_12.c ****     *
 393:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_12.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_12.c ****     *
 396:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_12.c ****     *
 399:.\Generated_Source\PSoC4/PWM_12.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_12.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_12.c ****     *
 402:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_12.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_12.c ****     {
 255              		.loc 1 405 0
 256              		.cfi_startproc
 257 0000 80B5     		push	{r7, lr}
 258              		.cfi_def_cfa_offset 8
 259              		.cfi_offset 7, -8
 260              		.cfi_offset 14, -4
 261 0002 82B0     		sub	sp, sp, #8
 262              		.cfi_def_cfa_offset 16
 263 0004 00AF     		add	r7, sp, #0
 264              		.cfi_def_cfa_register 7
 265 0006 021C     		mov	r2, r0
 266 0008 BB1D     		add	r3, r7, #6
 267 000a 1A80     		strh	r2, [r3]
 406:.\Generated_Source\PSoC4/PWM_12.c ****         CY_SET_REG16(PWM_12_COUNTER_LSB_PTR, counter);
 268              		.loc 1 406 0
 269 000c 034A     		ldr	r2, .L15
 270 000e BB1D     		add	r3, r7, #6
 271 0010 1B88     		ldrh	r3, [r3]
 272 0012 1380     		strh	r3, [r2]
 407:.\Generated_Source\PSoC4/PWM_12.c ****     }
 273              		.loc 1 407 0
 274 0014 BD46     		mov	sp, r7
 275 0016 02B0     		add	sp, sp, #8
 276              		@ sp needed
 277 0018 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 13


 278              	.L16:
 279 001a C046     		.align	2
 280              	.L15:
 281 001c 04100F40 		.word	1074728964
 282              		.cfi_endproc
 283              	.LFE6:
 284              		.size	PWM_12_WriteCounter, .-PWM_12_WriteCounter
 285              		.section	.text.PWM_12_ReadCounter,"ax",%progbits
 286              		.align	2
 287              		.global	PWM_12_ReadCounter
 288              		.code	16
 289              		.thumb_func
 290              		.type	PWM_12_ReadCounter, %function
 291              	PWM_12_ReadCounter:
 292              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_12.c **** 
 409:.\Generated_Source\PSoC4/PWM_12.c **** 
 410:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 413:.\Generated_Source\PSoC4/PWM_12.c ****     *
 414:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_12.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_12.c ****     *
 418:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_12.c ****     *
 421:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_12.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_12.c ****     *
 424:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_12.c ****     uint16 PWM_12_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_12.c ****     {
 293              		.loc 1 426 0
 294              		.cfi_startproc
 295 0000 80B5     		push	{r7, lr}
 296              		.cfi_def_cfa_offset 8
 297              		.cfi_offset 7, -8
 298              		.cfi_offset 14, -4
 299 0002 00AF     		add	r7, sp, #0
 300              		.cfi_def_cfa_register 7
 427:.\Generated_Source\PSoC4/PWM_12.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_12.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_12.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_12.c ****           (void)CY_GET_REG8(PWM_12_COUNTERCAP_LSB_PTR_8BIT);
 301              		.loc 1 430 0
 302 0004 034B     		ldr	r3, .L19
 303 0006 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_12.c **** 
 432:.\Generated_Source\PSoC4/PWM_12.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG16(PWM_12_CAPTURE_LSB_PTR));
 304              		.loc 1 433 0
 305 0008 034B     		ldr	r3, .L19+4
 306 000a 1B88     		ldrh	r3, [r3]
 307 000c 9BB2     		uxth	r3, r3
 434:.\Generated_Source\PSoC4/PWM_12.c ****     }
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 14


 308              		.loc 1 434 0
 309 000e 181C     		mov	r0, r3
 310 0010 BD46     		mov	sp, r7
 311              		@ sp needed
 312 0012 80BD     		pop	{r7, pc}
 313              	.L20:
 314              		.align	2
 315              	.L19:
 316 0014 12000F40 		.word	1074724882
 317 0018 A4100F40 		.word	1074729124
 318              		.cfi_endproc
 319              	.LFE7:
 320              		.size	PWM_12_ReadCounter, .-PWM_12_ReadCounter
 321              		.section	.text.PWM_12_ClearFIFO,"ax",%progbits
 322              		.align	2
 323              		.global	PWM_12_ClearFIFO
 324              		.code	16
 325              		.thumb_func
 326              		.type	PWM_12_ClearFIFO, %function
 327              	PWM_12_ClearFIFO:
 328              	.LFB8:
 435:.\Generated_Source\PSoC4/PWM_12.c **** 
 436:.\Generated_Source\PSoC4/PWM_12.c ****     #if (PWM_12_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_12.c **** 
 438:.\Generated_Source\PSoC4/PWM_12.c **** 
 439:.\Generated_Source\PSoC4/PWM_12.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_12.c ****         * Function Name: PWM_12_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_12.c ****         ********************************************************************************
 442:.\Generated_Source\PSoC4/PWM_12.c ****         *
 443:.\Generated_Source\PSoC4/PWM_12.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_12.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_12.c ****         *
 446:.\Generated_Source\PSoC4/PWM_12.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_12.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_12.c ****         *
 449:.\Generated_Source\PSoC4/PWM_12.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_12.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_12.c ****         *
 452:.\Generated_Source\PSoC4/PWM_12.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_12.c ****         void PWM_12_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_12.c ****         {
 329              		.loc 1 454 0
 330              		.cfi_startproc
 331 0000 80B5     		push	{r7, lr}
 332              		.cfi_def_cfa_offset 8
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 00AF     		add	r7, sp, #0
 336              		.cfi_def_cfa_register 7
 455:.\Generated_Source\PSoC4/PWM_12.c ****             while(0u != (PWM_12_ReadStatusRegister() & PWM_12_STATUS_FIFONEMPTY))
 337              		.loc 1 455 0
 338 0004 01E0     		b	.L22
 339              	.L23:
 456:.\Generated_Source\PSoC4/PWM_12.c ****             {
 457:.\Generated_Source\PSoC4/PWM_12.c ****                 (void)PWM_12_ReadCapture();
 340              		.loc 1 457 0
 341 0006 FFF7FEFF 		bl	PWM_12_ReadCapture
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 15


 342              	.L22:
 455:.\Generated_Source\PSoC4/PWM_12.c ****             while(0u != (PWM_12_ReadStatusRegister() & PWM_12_STATUS_FIFONEMPTY))
 343              		.loc 1 455 0
 344 000a FFF7FEFF 		bl	PWM_12_ReadStatusRegister
 345 000e 031C     		mov	r3, r0
 346 0010 1A1C     		mov	r2, r3
 347 0012 1023     		mov	r3, #16
 348 0014 1340     		and	r3, r2
 349 0016 F6D1     		bne	.L23
 458:.\Generated_Source\PSoC4/PWM_12.c ****             }
 459:.\Generated_Source\PSoC4/PWM_12.c ****         }
 350              		.loc 1 459 0
 351 0018 BD46     		mov	sp, r7
 352              		@ sp needed
 353 001a 80BD     		pop	{r7, pc}
 354              		.cfi_endproc
 355              	.LFE8:
 356              		.size	PWM_12_ClearFIFO, .-PWM_12_ClearFIFO
 357              		.section	.text.PWM_12_WritePeriod,"ax",%progbits
 358              		.align	2
 359              		.global	PWM_12_WritePeriod
 360              		.code	16
 361              		.thumb_func
 362              		.type	PWM_12_WritePeriod, %function
 363              	PWM_12_WritePeriod:
 364              	.LFB9:
 460:.\Generated_Source\PSoC4/PWM_12.c **** 
 461:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* PWM_12_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_12.c **** 
 463:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* !PWM_12_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_12.c **** 
 465:.\Generated_Source\PSoC4/PWM_12.c **** 
 466:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_12.c **** *
 470:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_12.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_12.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_12.c **** *
 474:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_12.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_12.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_12.c **** *
 478:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_12.c **** *
 481:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_12.c **** void PWM_12_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_12.c **** {
 365              		.loc 1 483 0
 366              		.cfi_startproc
 367 0000 80B5     		push	{r7, lr}
 368              		.cfi_def_cfa_offset 8
 369              		.cfi_offset 7, -8
 370              		.cfi_offset 14, -4
 371 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 16


 372              		.cfi_def_cfa_offset 16
 373 0004 00AF     		add	r7, sp, #0
 374              		.cfi_def_cfa_register 7
 375 0006 021C     		mov	r2, r0
 376 0008 BB1D     		add	r3, r7, #6
 377 000a 1A80     		strh	r2, [r3]
 484:.\Generated_Source\PSoC4/PWM_12.c ****     #if(PWM_12_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_12.c ****         CY_SET_REG16(PWM_12_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_12.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_12.c ****         CY_SET_REG16(PWM_12_PERIOD_LSB_PTR, period);
 378              		.loc 1 487 0
 379 000c 034A     		ldr	r2, .L25
 380 000e BB1D     		add	r3, r7, #6
 381 0010 1B88     		ldrh	r3, [r3]
 382 0012 1380     		strh	r3, [r2]
 488:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_12.c **** }
 383              		.loc 1 489 0
 384 0014 BD46     		mov	sp, r7
 385 0016 02B0     		add	sp, sp, #8
 386              		@ sp needed
 387 0018 80BD     		pop	{r7, pc}
 388              	.L26:
 389 001a C046     		.align	2
 390              	.L25:
 391 001c 84100F40 		.word	1074729092
 392              		.cfi_endproc
 393              	.LFE9:
 394              		.size	PWM_12_WritePeriod, .-PWM_12_WritePeriod
 395              		.section	.text.PWM_12_WriteCompare1,"ax",%progbits
 396              		.align	2
 397              		.global	PWM_12_WriteCompare1
 398              		.code	16
 399              		.thumb_func
 400              		.type	PWM_12_WriteCompare1, %function
 401              	PWM_12_WriteCompare1:
 402              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_12.c **** 
 491:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_12.c **** 
 493:.\Generated_Source\PSoC4/PWM_12.c **** 
 494:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_12.c ****     *
 498:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_12.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_12.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_12.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_12.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_12.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_12.c ****     *
 505:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_12.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_12.c ****     *
 508:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 17


 510:.\Generated_Source\PSoC4/PWM_12.c ****     *
 511:.\Generated_Source\PSoC4/PWM_12.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_12.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_12.c ****     *
 515:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_12.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_12.c ****     {
 519:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_12.c **** 
 525:.\Generated_Source\PSoC4/PWM_12.c ****         #if (PWM_12_PWMMode == PWM_12__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_12.c ****             #if(PWM_12_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_12.c ****                 CY_SET_REG16(PWM_12_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_12.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_12.c ****                 CY_SET_REG16(PWM_12_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (PWM_12_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_PWMMode == PWM_12__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWM_12.c ****     }
 533:.\Generated_Source\PSoC4/PWM_12.c **** 
 534:.\Generated_Source\PSoC4/PWM_12.c **** 
 535:.\Generated_Source\PSoC4/PWM_12.c **** #else
 536:.\Generated_Source\PSoC4/PWM_12.c **** 
 537:.\Generated_Source\PSoC4/PWM_12.c **** 
 538:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_12.c ****     *
 542:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_12.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_12.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_12.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_12.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_12.c ****     *
 548:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_12.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_12.c ****     *
 551:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_12.c ****     *
 554:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_12.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_12.c ****     {
 403              		.loc 1 557 0
 404              		.cfi_startproc
 405 0000 80B5     		push	{r7, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 7, -8
 408              		.cfi_offset 14, -4
 409 0002 82B0     		sub	sp, sp, #8
 410              		.cfi_def_cfa_offset 16
 411 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 18


 412              		.cfi_def_cfa_register 7
 413 0006 021C     		mov	r2, r0
 414 0008 BB1D     		add	r3, r7, #6
 415 000a 1A80     		strh	r2, [r3]
 558:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE1_LSB_PTR, compare);
 416              		.loc 1 561 0
 417 000c 034A     		ldr	r2, .L28
 418 000e BB1D     		add	r3, r7, #6
 419 0010 1B88     		ldrh	r3, [r3]
 420 0012 1380     		strh	r3, [r2]
 562:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_12.c ****     }
 421              		.loc 1 563 0
 422 0014 BD46     		mov	sp, r7
 423 0016 02B0     		add	sp, sp, #8
 424              		@ sp needed
 425 0018 80BD     		pop	{r7, pc}
 426              	.L29:
 427 001a C046     		.align	2
 428              	.L28:
 429 001c 44100F40 		.word	1074729028
 430              		.cfi_endproc
 431              	.LFE10:
 432              		.size	PWM_12_WriteCompare1, .-PWM_12_WriteCompare1
 433              		.section	.text.PWM_12_WriteCompare2,"ax",%progbits
 434              		.align	2
 435              		.global	PWM_12_WriteCompare2
 436              		.code	16
 437              		.thumb_func
 438              		.type	PWM_12_WriteCompare2, %function
 439              	PWM_12_WriteCompare2:
 440              	.LFB11:
 564:.\Generated_Source\PSoC4/PWM_12.c **** 
 565:.\Generated_Source\PSoC4/PWM_12.c **** 
 566:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_12.c ****     *
 570:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_12.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_12.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_12.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_12.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_12.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_12.c ****     *
 577:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_12.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_12.c ****     *
 580:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_12.c ****     *
 583:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_12.c ****                                         
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 19


 586:.\Generated_Source\PSoC4/PWM_12.c ****     {
 441              		.loc 1 586 0
 442              		.cfi_startproc
 443 0000 80B5     		push	{r7, lr}
 444              		.cfi_def_cfa_offset 8
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 82B0     		sub	sp, sp, #8
 448              		.cfi_def_cfa_offset 16
 449 0004 00AF     		add	r7, sp, #0
 450              		.cfi_def_cfa_register 7
 451 0006 021C     		mov	r2, r0
 452 0008 BB1D     		add	r3, r7, #6
 453 000a 1A80     		strh	r2, [r3]
 587:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG16(PWM_12_COMPARE2_LSB_PTR, compare);
 454              		.loc 1 590 0
 455 000c 034A     		ldr	r2, .L31
 456 000e BB1D     		add	r3, r7, #6
 457 0010 1B88     		ldrh	r3, [r3]
 458 0012 1380     		strh	r3, [r2]
 591:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_12.c ****     }
 459              		.loc 1 592 0
 460 0014 BD46     		mov	sp, r7
 461 0016 02B0     		add	sp, sp, #8
 462              		@ sp needed
 463 0018 80BD     		pop	{r7, pc}
 464              	.L32:
 465 001a C046     		.align	2
 466              	.L31:
 467 001c 64100F40 		.word	1074729060
 468              		.cfi_endproc
 469              	.LFE11:
 470              		.size	PWM_12_WriteCompare2, .-PWM_12_WriteCompare2
 471              		.section	.text.PWM_12_SetInterruptMode,"ax",%progbits
 472              		.align	2
 473              		.global	PWM_12_SetInterruptMode
 474              		.code	16
 475              		.thumb_func
 476              		.type	PWM_12_SetInterruptMode, %function
 477              	PWM_12_SetInterruptMode:
 478              	.LFB12:
 593:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_12.c **** 
 595:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_12.c **** 
 597:.\Generated_Source\PSoC4/PWM_12.c **** 
 598:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_12.c ****     *
 602:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_12.c ****     *
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 20


 605:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_12.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_12.c ****     *
 608:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_12.c ****     *
 611:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_12.c ****     {
 614:.\Generated_Source\PSoC4/PWM_12.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_12.c ****         #if(!PWM_12_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_12.c ****             CY_SET_REG8(PWM_12_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_12.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_12.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_12.c ****             PWM_12_DEADBAND_COUNT &= ((uint8)(~PWM_12_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_12.c **** 
 622:.\Generated_Source\PSoC4/PWM_12.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_12.c ****             #if(PWM_12_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_12_DEADBAND_COUNT_SHIFT)) 
 625:.\Generated_Source\PSoC4/PWM_12.c ****                                                     PWM_12_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_12.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_12.c ****                 PWM_12_DEADBAND_COUNT |= deadtime & PWM_12_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (PWM_12_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_12.c **** 
 630:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (!PWM_12_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_12.c ****     }
 632:.\Generated_Source\PSoC4/PWM_12.c **** 
 633:.\Generated_Source\PSoC4/PWM_12.c **** 
 634:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_12.c ****     *
 638:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_12.c ****     *
 641:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_12.c ****     *
 644:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_12.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_12.c ****     *
 647:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_12.c ****     uint8 PWM_12_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_12.c ****     {
 650:.\Generated_Source\PSoC4/PWM_12.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_12.c ****         #if(!PWM_12_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_12.c ****             return (CY_GET_REG8(PWM_12_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_12.c **** 
 655:.\Generated_Source\PSoC4/PWM_12.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_12.c ****             #if(PWM_12_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_12.c ****                 return ((uint8)(((uint8)(PWM_12_DEADBAND_COUNT & PWM_12_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_12.c ****                                                                            PWM_12_DEADBAND_COUNT_SH
 659:.\Generated_Source\PSoC4/PWM_12.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_12.c ****                 return (PWM_12_DEADBAND_COUNT & PWM_12_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_12.c ****             #endif /* (PWM_12_DEADBAND_COUNT_SHIFT) */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 21


 662:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (!PWM_12_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_12.c ****     }
 664:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_12.c **** 
 666:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_UseStatus || PWM_12_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_12.c **** 
 668:.\Generated_Source\PSoC4/PWM_12.c **** 
 669:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_12.c ****     *
 673:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_12.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_12.c ****     *
 677:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_12.c ****     *
 680:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_12.c ****     *
 683:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_12.c ****     {
 479              		.loc 1 685 0
 480              		.cfi_startproc
 481 0000 80B5     		push	{r7, lr}
 482              		.cfi_def_cfa_offset 8
 483              		.cfi_offset 7, -8
 484              		.cfi_offset 14, -4
 485 0002 82B0     		sub	sp, sp, #8
 486              		.cfi_def_cfa_offset 16
 487 0004 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 489 0006 021C     		mov	r2, r0
 490 0008 FB1D     		add	r3, r7, #7
 491 000a 1A70     		strb	r2, [r3]
 686:.\Generated_Source\PSoC4/PWM_12.c ****         CY_SET_REG8(PWM_12_STATUS_MASK_PTR, interruptMode);
 492              		.loc 1 686 0
 493 000c 034A     		ldr	r2, .L34
 494 000e FB1D     		add	r3, r7, #7
 495 0010 1B78     		ldrb	r3, [r3]
 496 0012 1370     		strb	r3, [r2]
 687:.\Generated_Source\PSoC4/PWM_12.c ****     }
 497              		.loc 1 687 0
 498 0014 BD46     		mov	sp, r7
 499 0016 02B0     		add	sp, sp, #8
 500              		@ sp needed
 501 0018 80BD     		pop	{r7, pc}
 502              	.L35:
 503 001a C046     		.align	2
 504              	.L34:
 505 001c 83000F40 		.word	1074724995
 506              		.cfi_endproc
 507              	.LFE12:
 508              		.size	PWM_12_SetInterruptMode, .-PWM_12_SetInterruptMode
 509              		.section	.text.PWM_12_ReadStatusRegister,"ax",%progbits
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 22


 510              		.align	2
 511              		.global	PWM_12_ReadStatusRegister
 512              		.code	16
 513              		.thumb_func
 514              		.type	PWM_12_ReadStatusRegister, %function
 515              	PWM_12_ReadStatusRegister:
 516              	.LFB13:
 688:.\Generated_Source\PSoC4/PWM_12.c **** 
 689:.\Generated_Source\PSoC4/PWM_12.c **** 
 690:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_12.c ****     *
 694:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_12.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_12.c ****     *
 697:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_12.c ****     *
 700:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_12.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_12.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_12.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_12.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_12.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_12.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_12.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_12.c ****     *
 710:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_12.c ****     uint8 PWM_12_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_12.c ****     {
 517              		.loc 1 712 0
 518              		.cfi_startproc
 519 0000 80B5     		push	{r7, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 00AF     		add	r7, sp, #0
 524              		.cfi_def_cfa_register 7
 713:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG8(PWM_12_STATUS_PTR));
 525              		.loc 1 713 0
 526 0004 024B     		ldr	r3, .L38
 527 0006 1B78     		ldrb	r3, [r3]
 528 0008 DBB2     		uxtb	r3, r3
 714:.\Generated_Source\PSoC4/PWM_12.c ****     }
 529              		.loc 1 714 0
 530 000a 181C     		mov	r0, r3
 531 000c BD46     		mov	sp, r7
 532              		@ sp needed
 533 000e 80BD     		pop	{r7, pc}
 534              	.L39:
 535              		.align	2
 536              	.L38:
 537 0010 63000F40 		.word	1074724963
 538              		.cfi_endproc
 539              	.LFE13:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 23


 540              		.size	PWM_12_ReadStatusRegister, .-PWM_12_ReadStatusRegister
 541              		.section	.text.PWM_12_ReadControlRegister,"ax",%progbits
 542              		.align	2
 543              		.global	PWM_12_ReadControlRegister
 544              		.code	16
 545              		.thumb_func
 546              		.type	PWM_12_ReadControlRegister, %function
 547              	PWM_12_ReadControlRegister:
 548              	.LFB14:
 715:.\Generated_Source\PSoC4/PWM_12.c **** 
 716:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* (PWM_12_UseStatus || PWM_12_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_12.c **** 
 718:.\Generated_Source\PSoC4/PWM_12.c **** 
 719:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_UseControl)
 720:.\Generated_Source\PSoC4/PWM_12.c **** 
 721:.\Generated_Source\PSoC4/PWM_12.c **** 
 722:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_12.c ****     *
 726:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_12.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_12.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_12.c ****     *
 730:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_12.c ****     *
 733:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_12.c ****     *
 736:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_12.c ****     uint8 PWM_12_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_12.c ****     {
 549              		.loc 1 738 0
 550              		.cfi_startproc
 551 0000 80B5     		push	{r7, lr}
 552              		.cfi_def_cfa_offset 8
 553              		.cfi_offset 7, -8
 554              		.cfi_offset 14, -4
 555 0002 82B0     		sub	sp, sp, #8
 556              		.cfi_def_cfa_offset 16
 557 0004 00AF     		add	r7, sp, #0
 558              		.cfi_def_cfa_register 7
 739:.\Generated_Source\PSoC4/PWM_12.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_12.c **** 
 741:.\Generated_Source\PSoC4/PWM_12.c ****         result = CY_GET_REG8(PWM_12_CONTROL_PTR);
 559              		.loc 1 741 0
 560 0006 054A     		ldr	r2, .L42
 561 0008 FB1D     		add	r3, r7, #7
 562 000a 1278     		ldrb	r2, [r2]
 563 000c 1A70     		strb	r2, [r3]
 742:.\Generated_Source\PSoC4/PWM_12.c ****         return (result);
 564              		.loc 1 742 0
 565 000e FB1D     		add	r3, r7, #7
 566 0010 1B78     		ldrb	r3, [r3]
 743:.\Generated_Source\PSoC4/PWM_12.c ****     }
 567              		.loc 1 743 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 24


 568 0012 181C     		mov	r0, r3
 569 0014 BD46     		mov	sp, r7
 570 0016 02B0     		add	sp, sp, #8
 571              		@ sp needed
 572 0018 80BD     		pop	{r7, pc}
 573              	.L43:
 574 001a C046     		.align	2
 575              	.L42:
 576 001c 73000F40 		.word	1074724979
 577              		.cfi_endproc
 578              	.LFE14:
 579              		.size	PWM_12_ReadControlRegister, .-PWM_12_ReadControlRegister
 580              		.section	.text.PWM_12_WriteControlRegister,"ax",%progbits
 581              		.align	2
 582              		.global	PWM_12_WriteControlRegister
 583              		.code	16
 584              		.thumb_func
 585              		.type	PWM_12_WriteControlRegister, %function
 586              	PWM_12_WriteControlRegister:
 587              	.LFB15:
 744:.\Generated_Source\PSoC4/PWM_12.c **** 
 745:.\Generated_Source\PSoC4/PWM_12.c **** 
 746:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_12.c ****     *
 750:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_12.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_12.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWM_12.c ****     *
 754:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_12.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_12.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_12.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_12.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_12.c ****     *
 761:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_12.c ****     *
 764:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_12.c ****     void PWM_12_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_12.c ****     {
 588              		.loc 1 766 0
 589              		.cfi_startproc
 590 0000 80B5     		push	{r7, lr}
 591              		.cfi_def_cfa_offset 8
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 82B0     		sub	sp, sp, #8
 595              		.cfi_def_cfa_offset 16
 596 0004 00AF     		add	r7, sp, #0
 597              		.cfi_def_cfa_register 7
 598 0006 021C     		mov	r2, r0
 599 0008 FB1D     		add	r3, r7, #7
 600 000a 1A70     		strb	r2, [r3]
 767:.\Generated_Source\PSoC4/PWM_12.c ****         CY_SET_REG8(PWM_12_CONTROL_PTR, control);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 25


 601              		.loc 1 767 0
 602 000c 034A     		ldr	r2, .L45
 603 000e FB1D     		add	r3, r7, #7
 604 0010 1B78     		ldrb	r3, [r3]
 605 0012 1370     		strb	r3, [r2]
 768:.\Generated_Source\PSoC4/PWM_12.c ****     }
 606              		.loc 1 768 0
 607 0014 BD46     		mov	sp, r7
 608 0016 02B0     		add	sp, sp, #8
 609              		@ sp needed
 610 0018 80BD     		pop	{r7, pc}
 611              	.L46:
 612 001a C046     		.align	2
 613              	.L45:
 614 001c 73000F40 		.word	1074724979
 615              		.cfi_endproc
 616              	.LFE15:
 617              		.size	PWM_12_WriteControlRegister, .-PWM_12_WriteControlRegister
 618              		.section	.text.PWM_12_ReadCapture,"ax",%progbits
 619              		.align	2
 620              		.global	PWM_12_ReadCapture
 621              		.code	16
 622              		.thumb_func
 623              		.type	PWM_12_ReadCapture, %function
 624              	PWM_12_ReadCapture:
 625              	.LFB16:
 769:.\Generated_Source\PSoC4/PWM_12.c **** 
 770:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* (PWM_12_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_12.c **** 
 772:.\Generated_Source\PSoC4/PWM_12.c **** 
 773:.\Generated_Source\PSoC4/PWM_12.c **** #if (!PWM_12_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_12.c **** 
 775:.\Generated_Source\PSoC4/PWM_12.c **** 
 776:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_12.c ****     *
 780:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_12.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_12.c ****     *
 783:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_12.c ****     *
 786:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_12.c ****     *
 789:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_12.c ****     uint16 PWM_12_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_12.c ****     {
 626              		.loc 1 791 0
 627              		.cfi_startproc
 628 0000 80B5     		push	{r7, lr}
 629              		.cfi_def_cfa_offset 8
 630              		.cfi_offset 7, -8
 631              		.cfi_offset 14, -4
 632 0002 00AF     		add	r7, sp, #0
 633              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 26


 792:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG16(PWM_12_CAPTURE_LSB_PTR));
 634              		.loc 1 792 0
 635 0004 024B     		ldr	r3, .L49
 636 0006 1B88     		ldrh	r3, [r3]
 637 0008 9BB2     		uxth	r3, r3
 793:.\Generated_Source\PSoC4/PWM_12.c ****     }
 638              		.loc 1 793 0
 639 000a 181C     		mov	r0, r3
 640 000c BD46     		mov	sp, r7
 641              		@ sp needed
 642 000e 80BD     		pop	{r7, pc}
 643              	.L50:
 644              		.align	2
 645              	.L49:
 646 0010 A4100F40 		.word	1074729124
 647              		.cfi_endproc
 648              	.LFE16:
 649              		.size	PWM_12_ReadCapture, .-PWM_12_ReadCapture
 650              		.section	.text.PWM_12_ReadCompare1,"ax",%progbits
 651              		.align	2
 652              		.global	PWM_12_ReadCompare1
 653              		.code	16
 654              		.thumb_func
 655              		.type	PWM_12_ReadCompare1, %function
 656              	PWM_12_ReadCompare1:
 657              	.LFB17:
 794:.\Generated_Source\PSoC4/PWM_12.c **** 
 795:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* (!PWM_12_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_12.c **** 
 797:.\Generated_Source\PSoC4/PWM_12.c **** 
 798:.\Generated_Source\PSoC4/PWM_12.c **** #if (PWM_12_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_12.c **** 
 800:.\Generated_Source\PSoC4/PWM_12.c **** 
 801:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadCompare
 803:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_12.c ****     *
 805:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_12.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_12.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_12.c ****     *
 809:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_12.c ****     *
 812:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_12.c ****     *
 815:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_12.c ****     uint16 PWM_12_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_12.c ****     {
 818:.\Generated_Source\PSoC4/PWM_12.c ****         #if(PWM_12_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_12.c ****             return ((uint16)CY_GET_REG16(PWM_12_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_12.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_12.c ****             return (CY_GET_REG16(PWM_12_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM_12.c ****         #endif /* (PWM_12_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_12.c ****     }
 824:.\Generated_Source\PSoC4/PWM_12.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 27


 825:.\Generated_Source\PSoC4/PWM_12.c **** #else
 826:.\Generated_Source\PSoC4/PWM_12.c **** 
 827:.\Generated_Source\PSoC4/PWM_12.c **** 
 828:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_12.c ****     *
 832:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_12.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_12.c ****     *
 835:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_12.c ****     *
 838:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_12.c ****     *
 841:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_12.c ****     uint16 PWM_12_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_12.c ****     {
 658              		.loc 1 843 0
 659              		.cfi_startproc
 660 0000 80B5     		push	{r7, lr}
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 7, -8
 663              		.cfi_offset 14, -4
 664 0002 00AF     		add	r7, sp, #0
 665              		.cfi_def_cfa_register 7
 844:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG16(PWM_12_COMPARE1_LSB_PTR));
 666              		.loc 1 844 0
 667 0004 024B     		ldr	r3, .L53
 668 0006 1B88     		ldrh	r3, [r3]
 669 0008 9BB2     		uxth	r3, r3
 845:.\Generated_Source\PSoC4/PWM_12.c ****     }
 670              		.loc 1 845 0
 671 000a 181C     		mov	r0, r3
 672 000c BD46     		mov	sp, r7
 673              		@ sp needed
 674 000e 80BD     		pop	{r7, pc}
 675              	.L54:
 676              		.align	2
 677              	.L53:
 678 0010 44100F40 		.word	1074729028
 679              		.cfi_endproc
 680              	.LFE17:
 681              		.size	PWM_12_ReadCompare1, .-PWM_12_ReadCompare1
 682              		.section	.text.PWM_12_ReadCompare2,"ax",%progbits
 683              		.align	2
 684              		.global	PWM_12_ReadCompare2
 685              		.code	16
 686              		.thumb_func
 687              		.type	PWM_12_ReadCompare2, %function
 688              	PWM_12_ReadCompare2:
 689              	.LFB18:
 846:.\Generated_Source\PSoC4/PWM_12.c **** 
 847:.\Generated_Source\PSoC4/PWM_12.c **** 
 848:.\Generated_Source\PSoC4/PWM_12.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_12.c ****     * Function Name: PWM_12_ReadCompare2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 28


 850:.\Generated_Source\PSoC4/PWM_12.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_12.c ****     *
 852:.\Generated_Source\PSoC4/PWM_12.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_12.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_12.c ****     *
 855:.\Generated_Source\PSoC4/PWM_12.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_12.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_12.c ****     *
 858:.\Generated_Source\PSoC4/PWM_12.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_12.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_12.c ****     *
 861:.\Generated_Source\PSoC4/PWM_12.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_12.c ****     uint16 PWM_12_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_12.c ****     {
 690              		.loc 1 863 0
 691              		.cfi_startproc
 692 0000 80B5     		push	{r7, lr}
 693              		.cfi_def_cfa_offset 8
 694              		.cfi_offset 7, -8
 695              		.cfi_offset 14, -4
 696 0002 00AF     		add	r7, sp, #0
 697              		.cfi_def_cfa_register 7
 864:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG16(PWM_12_COMPARE2_LSB_PTR));
 698              		.loc 1 864 0
 699 0004 024B     		ldr	r3, .L57
 700 0006 1B88     		ldrh	r3, [r3]
 701 0008 9BB2     		uxth	r3, r3
 865:.\Generated_Source\PSoC4/PWM_12.c ****     }
 702              		.loc 1 865 0
 703 000a 181C     		mov	r0, r3
 704 000c BD46     		mov	sp, r7
 705              		@ sp needed
 706 000e 80BD     		pop	{r7, pc}
 707              	.L58:
 708              		.align	2
 709              	.L57:
 710 0010 64100F40 		.word	1074729060
 711              		.cfi_endproc
 712              	.LFE18:
 713              		.size	PWM_12_ReadCompare2, .-PWM_12_ReadCompare2
 714              		.section	.text.PWM_12_ReadPeriod,"ax",%progbits
 715              		.align	2
 716              		.global	PWM_12_ReadPeriod
 717              		.code	16
 718              		.thumb_func
 719              		.type	PWM_12_ReadPeriod, %function
 720              	PWM_12_ReadPeriod:
 721              	.LFB19:
 866:.\Generated_Source\PSoC4/PWM_12.c **** 
 867:.\Generated_Source\PSoC4/PWM_12.c **** #endif /* (PWM_12_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_12.c **** 
 869:.\Generated_Source\PSoC4/PWM_12.c **** 
 870:.\Generated_Source\PSoC4/PWM_12.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_12.c **** * Function Name: PWM_12_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_12.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_12.c **** *
 874:.\Generated_Source\PSoC4/PWM_12.c **** * Summary:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 29


 875:.\Generated_Source\PSoC4/PWM_12.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_12.c **** *
 877:.\Generated_Source\PSoC4/PWM_12.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_12.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_12.c **** *
 880:.\Generated_Source\PSoC4/PWM_12.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_12.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_12.c **** *
 883:.\Generated_Source\PSoC4/PWM_12.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_12.c **** uint16 PWM_12_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_12.c **** {
 722              		.loc 1 885 0
 723              		.cfi_startproc
 724 0000 80B5     		push	{r7, lr}
 725              		.cfi_def_cfa_offset 8
 726              		.cfi_offset 7, -8
 727              		.cfi_offset 14, -4
 728 0002 00AF     		add	r7, sp, #0
 729              		.cfi_def_cfa_register 7
 886:.\Generated_Source\PSoC4/PWM_12.c ****     #if(PWM_12_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_12.c ****         return ((uint16)CY_GET_REG16(PWM_12_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_12.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_12.c ****         return (CY_GET_REG16(PWM_12_PERIOD_LSB_PTR));
 730              		.loc 1 889 0
 731 0004 024B     		ldr	r3, .L61
 732 0006 1B88     		ldrh	r3, [r3]
 733 0008 9BB2     		uxth	r3, r3
 890:.\Generated_Source\PSoC4/PWM_12.c ****     #endif /* (PWM_12_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_12.c **** }
 734              		.loc 1 891 0
 735 000a 181C     		mov	r0, r3
 736 000c BD46     		mov	sp, r7
 737              		@ sp needed
 738 000e 80BD     		pop	{r7, pc}
 739              	.L62:
 740              		.align	2
 741              	.L61:
 742 0010 84100F40 		.word	1074729092
 743              		.cfi_endproc
 744              	.LFE19:
 745              		.size	PWM_12_ReadPeriod, .-PWM_12_ReadPeriod
 746              		.text
 747              	.Letext0:
 748              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 749              		.section	.debug_info,"",%progbits
 750              	.Ldebug_info0:
 751 0000 D6020000 		.4byte	0x2d6
 752 0004 0400     		.2byte	0x4
 753 0006 00000000 		.4byte	.Ldebug_abbrev0
 754 000a 04       		.byte	0x4
 755 000b 01       		.uleb128 0x1
 756 000c 2C010000 		.4byte	.LASF42
 757 0010 01       		.byte	0x1
 758 0011 71000000 		.4byte	.LASF43
 759 0015 21020000 		.4byte	.LASF44
 760 0019 00000000 		.4byte	.Ldebug_ranges0+0
 761 001d 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 30


 762 0021 00000000 		.4byte	.Ldebug_line0
 763 0025 02       		.uleb128 0x2
 764 0026 01       		.byte	0x1
 765 0027 06       		.byte	0x6
 766 0028 1D030000 		.4byte	.LASF0
 767 002c 02       		.uleb128 0x2
 768 002d 01       		.byte	0x1
 769 002e 08       		.byte	0x8
 770 002f 63000000 		.4byte	.LASF1
 771 0033 02       		.uleb128 0x2
 772 0034 02       		.byte	0x2
 773 0035 05       		.byte	0x5
 774 0036 E2020000 		.4byte	.LASF2
 775 003a 02       		.uleb128 0x2
 776 003b 02       		.byte	0x2
 777 003c 07       		.byte	0x7
 778 003d 2F000000 		.4byte	.LASF3
 779 0041 02       		.uleb128 0x2
 780 0042 04       		.byte	0x4
 781 0043 05       		.byte	0x5
 782 0044 F7020000 		.4byte	.LASF4
 783 0048 02       		.uleb128 0x2
 784 0049 04       		.byte	0x4
 785 004a 07       		.byte	0x7
 786 004b C1010000 		.4byte	.LASF5
 787 004f 02       		.uleb128 0x2
 788 0050 08       		.byte	0x8
 789 0051 05       		.byte	0x5
 790 0052 9A020000 		.4byte	.LASF6
 791 0056 02       		.uleb128 0x2
 792 0057 08       		.byte	0x8
 793 0058 07       		.byte	0x7
 794 0059 0A020000 		.4byte	.LASF7
 795 005d 03       		.uleb128 0x3
 796 005e 04       		.byte	0x4
 797 005f 05       		.byte	0x5
 798 0060 696E7400 		.ascii	"int\000"
 799 0064 02       		.uleb128 0x2
 800 0065 04       		.byte	0x4
 801 0066 07       		.byte	0x7
 802 0067 D3010000 		.4byte	.LASF8
 803 006b 04       		.uleb128 0x4
 804 006c C9000000 		.4byte	.LASF9
 805 0070 02       		.byte	0x2
 806 0071 C2       		.byte	0xc2
 807 0072 2C000000 		.4byte	0x2c
 808 0076 04       		.uleb128 0x4
 809 0077 BA010000 		.4byte	.LASF10
 810 007b 02       		.byte	0x2
 811 007c C3       		.byte	0xc3
 812 007d 3A000000 		.4byte	0x3a
 813 0081 02       		.uleb128 0x2
 814 0082 04       		.byte	0x4
 815 0083 04       		.byte	0x4
 816 0084 55000000 		.4byte	.LASF11
 817 0088 02       		.uleb128 0x2
 818 0089 08       		.byte	0x8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 31


 819 008a 04       		.byte	0x4
 820 008b 25010000 		.4byte	.LASF12
 821 008f 02       		.uleb128 0x2
 822 0090 01       		.byte	0x1
 823 0091 08       		.byte	0x8
 824 0092 00030000 		.4byte	.LASF13
 825 0096 05       		.uleb128 0x5
 826 0097 78020000 		.4byte	.LASF14
 827 009b 02       		.byte	0x2
 828 009c 6C01     		.2byte	0x16c
 829 009e A2000000 		.4byte	0xa2
 830 00a2 06       		.uleb128 0x6
 831 00a3 6B000000 		.4byte	0x6b
 832 00a7 05       		.uleb128 0x5
 833 00a8 EC020000 		.4byte	.LASF15
 834 00ac 02       		.byte	0x2
 835 00ad 6D01     		.2byte	0x16d
 836 00af B3000000 		.4byte	0xb3
 837 00b3 06       		.uleb128 0x6
 838 00b4 76000000 		.4byte	0x76
 839 00b8 02       		.uleb128 0x2
 840 00b9 04       		.byte	0x4
 841 00ba 07       		.byte	0x7
 842 00bb 7D020000 		.4byte	.LASF16
 843 00bf 07       		.uleb128 0x7
 844 00c0 A8020000 		.4byte	.LASF19
 845 00c4 01       		.byte	0x1
 846 00c5 37       		.byte	0x37
 847 00c6 00000000 		.4byte	.LFB2
 848 00ca 24000000 		.4byte	.LFE2-.LFB2
 849 00ce 01       		.uleb128 0x1
 850 00cf 9C       		.byte	0x9c
 851 00d0 08       		.uleb128 0x8
 852 00d1 B5020000 		.4byte	.LASF22
 853 00d5 01       		.byte	0x1
 854 00d6 54       		.byte	0x54
 855 00d7 00000000 		.4byte	.LFB3
 856 00db AC000000 		.4byte	.LFE3-.LFB3
 857 00df 01       		.uleb128 0x1
 858 00e0 9C       		.byte	0x9c
 859 00e1 02010000 		.4byte	0x102
 860 00e5 09       		.uleb128 0x9
 861 00e6 F2020000 		.4byte	.LASF17
 862 00ea 01       		.byte	0x1
 863 00eb 57       		.byte	0x57
 864 00ec 6B000000 		.4byte	0x6b
 865 00f0 02       		.uleb128 0x2
 866 00f1 91       		.byte	0x91
 867 00f2 6F       		.sleb128 -17
 868 00f3 09       		.uleb128 0x9
 869 00f4 4C030000 		.4byte	.LASF18
 870 00f8 01       		.byte	0x1
 871 00f9 5D       		.byte	0x5d
 872 00fa 6B000000 		.4byte	0x6b
 873 00fe 02       		.uleb128 0x2
 874 00ff 91       		.byte	0x91
 875 0100 6E       		.sleb128 -18
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 32


 876 0101 00       		.byte	0
 877 0102 0A       		.uleb128 0xa
 878 0103 A7000000 		.4byte	.LASF20
 879 0107 01       		.byte	0x1
 880 0108 C7       		.byte	0xc7
 881 0109 00000000 		.4byte	.LFB4
 882 010d 20000000 		.4byte	.LFE4-.LFB4
 883 0111 01       		.uleb128 0x1
 884 0112 9C       		.byte	0x9c
 885 0113 0A       		.uleb128 0xa
 886 0114 1C000000 		.4byte	.LASF21
 887 0118 01       		.byte	0x1
 888 0119 E9       		.byte	0xe9
 889 011a 00000000 		.4byte	.LFB5
 890 011e 1C000000 		.4byte	.LFE5-.LFB5
 891 0122 01       		.uleb128 0x1
 892 0123 9C       		.byte	0x9c
 893 0124 0B       		.uleb128 0xb
 894 0125 86020000 		.4byte	.LASF23
 895 0129 01       		.byte	0x1
 896 012a 9301     		.2byte	0x193
 897 012c 00000000 		.4byte	.LFB6
 898 0130 20000000 		.4byte	.LFE6-.LFB6
 899 0134 01       		.uleb128 0x1
 900 0135 9C       		.byte	0x9c
 901 0136 4A010000 		.4byte	0x14a
 902 013a 0C       		.uleb128 0xc
 903 013b 5B000000 		.4byte	.LASF26
 904 013f 01       		.byte	0x1
 905 0140 9301     		.2byte	0x193
 906 0142 76000000 		.4byte	0x76
 907 0146 02       		.uleb128 0x2
 908 0147 91       		.byte	0x91
 909 0148 76       		.sleb128 -10
 910 0149 00       		.byte	0
 911 014a 0D       		.uleb128 0xd
 912 014b 42000000 		.4byte	.LASF33
 913 014f 01       		.byte	0x1
 914 0150 A901     		.2byte	0x1a9
 915 0152 76000000 		.4byte	0x76
 916 0156 00000000 		.4byte	.LFB7
 917 015a 1C000000 		.4byte	.LFE7-.LFB7
 918 015e 01       		.uleb128 0x1
 919 015f 9C       		.byte	0x9c
 920 0160 0E       		.uleb128 0xe
 921 0161 67020000 		.4byte	.LASF24
 922 0165 01       		.byte	0x1
 923 0166 C501     		.2byte	0x1c5
 924 0168 00000000 		.4byte	.LFB8
 925 016c 1C000000 		.4byte	.LFE8-.LFB8
 926 0170 01       		.uleb128 0x1
 927 0171 9C       		.byte	0x9c
 928 0172 0B       		.uleb128 0xb
 929 0173 D7000000 		.4byte	.LASF25
 930 0177 01       		.byte	0x1
 931 0178 E201     		.2byte	0x1e2
 932 017a 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 33


 933 017e 20000000 		.4byte	.LFE9-.LFB9
 934 0182 01       		.uleb128 0x1
 935 0183 9C       		.byte	0x9c
 936 0184 98010000 		.4byte	0x198
 937 0188 0C       		.uleb128 0xc
 938 0189 28000000 		.4byte	.LASF27
 939 018d 01       		.byte	0x1
 940 018e E201     		.2byte	0x1e2
 941 0190 76000000 		.4byte	0x76
 942 0194 02       		.uleb128 0x2
 943 0195 91       		.byte	0x91
 944 0196 76       		.sleb128 -10
 945 0197 00       		.byte	0
 946 0198 0B       		.uleb128 0xb
 947 0199 E0010000 		.4byte	.LASF28
 948 019d 01       		.byte	0x1
 949 019e 2B02     		.2byte	0x22b
 950 01a0 00000000 		.4byte	.LFB10
 951 01a4 20000000 		.4byte	.LFE10-.LFB10
 952 01a8 01       		.uleb128 0x1
 953 01a9 9C       		.byte	0x9c
 954 01aa BE010000 		.4byte	0x1be
 955 01ae 0C       		.uleb128 0xc
 956 01af 29030000 		.4byte	.LASF29
 957 01b3 01       		.byte	0x1
 958 01b4 2B02     		.2byte	0x22b
 959 01b6 76000000 		.4byte	0x76
 960 01ba 02       		.uleb128 0x2
 961 01bb 91       		.byte	0x91
 962 01bc 76       		.sleb128 -10
 963 01bd 00       		.byte	0
 964 01be 0B       		.uleb128 0xb
 965 01bf F5010000 		.4byte	.LASF30
 966 01c3 01       		.byte	0x1
 967 01c4 4802     		.2byte	0x248
 968 01c6 00000000 		.4byte	.LFB11
 969 01ca 20000000 		.4byte	.LFE11-.LFB11
 970 01ce 01       		.uleb128 0x1
 971 01cf 9C       		.byte	0x9c
 972 01d0 E4010000 		.4byte	0x1e4
 973 01d4 0C       		.uleb128 0xc
 974 01d5 29030000 		.4byte	.LASF29
 975 01d9 01       		.byte	0x1
 976 01da 4802     		.2byte	0x248
 977 01dc 76000000 		.4byte	0x76
 978 01e0 02       		.uleb128 0x2
 979 01e1 91       		.byte	0x91
 980 01e2 76       		.sleb128 -10
 981 01e3 00       		.byte	0
 982 01e4 0B       		.uleb128 0xb
 983 01e5 05030000 		.4byte	.LASF31
 984 01e9 01       		.byte	0x1
 985 01ea AC02     		.2byte	0x2ac
 986 01ec 00000000 		.4byte	.LFB12
 987 01f0 20000000 		.4byte	.LFE12-.LFB12
 988 01f4 01       		.uleb128 0x1
 989 01f5 9C       		.byte	0x9c
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 34


 990 01f6 0A020000 		.4byte	0x20a
 991 01fa 0C       		.uleb128 0xc
 992 01fb C1020000 		.4byte	.LASF32
 993 01ff 01       		.byte	0x1
 994 0200 AC02     		.2byte	0x2ac
 995 0202 6B000000 		.4byte	0x6b
 996 0206 02       		.uleb128 0x2
 997 0207 91       		.byte	0x91
 998 0208 77       		.sleb128 -9
 999 0209 00       		.byte	0
 1000 020a 0D       		.uleb128 0xd
 1001 020b F9000000 		.4byte	.LASF34
 1002 020f 01       		.byte	0x1
 1003 0210 C702     		.2byte	0x2c7
 1004 0212 6B000000 		.4byte	0x6b
 1005 0216 00000000 		.4byte	.LFB13
 1006 021a 14000000 		.4byte	.LFE13-.LFB13
 1007 021e 01       		.uleb128 0x1
 1008 021f 9C       		.byte	0x9c
 1009 0220 0F       		.uleb128 0xf
 1010 0221 31030000 		.4byte	.LASF45
 1011 0225 01       		.byte	0x1
 1012 0226 E102     		.2byte	0x2e1
 1013 0228 6B000000 		.4byte	0x6b
 1014 022c 00000000 		.4byte	.LFB14
 1015 0230 20000000 		.4byte	.LFE14-.LFB14
 1016 0234 01       		.uleb128 0x1
 1017 0235 9C       		.byte	0x9c
 1018 0236 4A020000 		.4byte	0x24a
 1019 023a 10       		.uleb128 0x10
 1020 023b 60020000 		.4byte	.LASF35
 1021 023f 01       		.byte	0x1
 1022 0240 E302     		.2byte	0x2e3
 1023 0242 6B000000 		.4byte	0x6b
 1024 0246 02       		.uleb128 0x2
 1025 0247 91       		.byte	0x91
 1026 0248 77       		.sleb128 -9
 1027 0249 00       		.byte	0
 1028 024a 0B       		.uleb128 0xb
 1029 024b 00000000 		.4byte	.LASF36
 1030 024f 01       		.byte	0x1
 1031 0250 FD02     		.2byte	0x2fd
 1032 0252 00000000 		.4byte	.LFB15
 1033 0256 20000000 		.4byte	.LFE15-.LFB15
 1034 025a 01       		.uleb128 0x1
 1035 025b 9C       		.byte	0x9c
 1036 025c 70020000 		.4byte	0x270
 1037 0260 0C       		.uleb128 0xc
 1038 0261 CF000000 		.4byte	.LASF37
 1039 0265 01       		.byte	0x1
 1040 0266 FD02     		.2byte	0x2fd
 1041 0268 6B000000 		.4byte	0x6b
 1042 026c 02       		.uleb128 0x2
 1043 026d 91       		.byte	0x91
 1044 026e 77       		.sleb128 -9
 1045 026f 00       		.byte	0
 1046 0270 0D       		.uleb128 0xd
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 35


 1047 0271 CF020000 		.4byte	.LASF38
 1048 0275 01       		.byte	0x1
 1049 0276 1603     		.2byte	0x316
 1050 0278 76000000 		.4byte	0x76
 1051 027c 00000000 		.4byte	.LFB16
 1052 0280 14000000 		.4byte	.LFE16-.LFB16
 1053 0284 01       		.uleb128 0x1
 1054 0285 9C       		.byte	0x9c
 1055 0286 0D       		.uleb128 0xd
 1056 0287 93000000 		.4byte	.LASF39
 1057 028b 01       		.byte	0x1
 1058 028c 4A03     		.2byte	0x34a
 1059 028e 76000000 		.4byte	0x76
 1060 0292 00000000 		.4byte	.LFB17
 1061 0296 14000000 		.4byte	.LFE17-.LFB17
 1062 029a 01       		.uleb128 0x1
 1063 029b 9C       		.byte	0x9c
 1064 029c 0D       		.uleb128 0xd
 1065 029d B5000000 		.4byte	.LASF40
 1066 02a1 01       		.byte	0x1
 1067 02a2 5E03     		.2byte	0x35e
 1068 02a4 76000000 		.4byte	0x76
 1069 02a8 00000000 		.4byte	.LFB18
 1070 02ac 14000000 		.4byte	.LFE18-.LFB18
 1071 02b0 01       		.uleb128 0x1
 1072 02b1 9C       		.byte	0x9c
 1073 02b2 0D       		.uleb128 0xd
 1074 02b3 13010000 		.4byte	.LASF41
 1075 02b7 01       		.byte	0x1
 1076 02b8 7403     		.2byte	0x374
 1077 02ba 76000000 		.4byte	0x76
 1078 02be 00000000 		.4byte	.LFB19
 1079 02c2 14000000 		.4byte	.LFE19-.LFB19
 1080 02c6 01       		.uleb128 0x1
 1081 02c7 9C       		.byte	0x9c
 1082 02c8 11       		.uleb128 0x11
 1083 02c9 EA000000 		.4byte	.LASF46
 1084 02cd 01       		.byte	0x1
 1085 02ce 20       		.byte	0x20
 1086 02cf 6B000000 		.4byte	0x6b
 1087 02d3 05       		.uleb128 0x5
 1088 02d4 03       		.byte	0x3
 1089 02d5 00000000 		.4byte	PWM_12_initVar
 1090 02d9 00       		.byte	0
 1091              		.section	.debug_abbrev,"",%progbits
 1092              	.Ldebug_abbrev0:
 1093 0000 01       		.uleb128 0x1
 1094 0001 11       		.uleb128 0x11
 1095 0002 01       		.byte	0x1
 1096 0003 25       		.uleb128 0x25
 1097 0004 0E       		.uleb128 0xe
 1098 0005 13       		.uleb128 0x13
 1099 0006 0B       		.uleb128 0xb
 1100 0007 03       		.uleb128 0x3
 1101 0008 0E       		.uleb128 0xe
 1102 0009 1B       		.uleb128 0x1b
 1103 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 36


 1104 000b 55       		.uleb128 0x55
 1105 000c 17       		.uleb128 0x17
 1106 000d 11       		.uleb128 0x11
 1107 000e 01       		.uleb128 0x1
 1108 000f 10       		.uleb128 0x10
 1109 0010 17       		.uleb128 0x17
 1110 0011 00       		.byte	0
 1111 0012 00       		.byte	0
 1112 0013 02       		.uleb128 0x2
 1113 0014 24       		.uleb128 0x24
 1114 0015 00       		.byte	0
 1115 0016 0B       		.uleb128 0xb
 1116 0017 0B       		.uleb128 0xb
 1117 0018 3E       		.uleb128 0x3e
 1118 0019 0B       		.uleb128 0xb
 1119 001a 03       		.uleb128 0x3
 1120 001b 0E       		.uleb128 0xe
 1121 001c 00       		.byte	0
 1122 001d 00       		.byte	0
 1123 001e 03       		.uleb128 0x3
 1124 001f 24       		.uleb128 0x24
 1125 0020 00       		.byte	0
 1126 0021 0B       		.uleb128 0xb
 1127 0022 0B       		.uleb128 0xb
 1128 0023 3E       		.uleb128 0x3e
 1129 0024 0B       		.uleb128 0xb
 1130 0025 03       		.uleb128 0x3
 1131 0026 08       		.uleb128 0x8
 1132 0027 00       		.byte	0
 1133 0028 00       		.byte	0
 1134 0029 04       		.uleb128 0x4
 1135 002a 16       		.uleb128 0x16
 1136 002b 00       		.byte	0
 1137 002c 03       		.uleb128 0x3
 1138 002d 0E       		.uleb128 0xe
 1139 002e 3A       		.uleb128 0x3a
 1140 002f 0B       		.uleb128 0xb
 1141 0030 3B       		.uleb128 0x3b
 1142 0031 0B       		.uleb128 0xb
 1143 0032 49       		.uleb128 0x49
 1144 0033 13       		.uleb128 0x13
 1145 0034 00       		.byte	0
 1146 0035 00       		.byte	0
 1147 0036 05       		.uleb128 0x5
 1148 0037 16       		.uleb128 0x16
 1149 0038 00       		.byte	0
 1150 0039 03       		.uleb128 0x3
 1151 003a 0E       		.uleb128 0xe
 1152 003b 3A       		.uleb128 0x3a
 1153 003c 0B       		.uleb128 0xb
 1154 003d 3B       		.uleb128 0x3b
 1155 003e 05       		.uleb128 0x5
 1156 003f 49       		.uleb128 0x49
 1157 0040 13       		.uleb128 0x13
 1158 0041 00       		.byte	0
 1159 0042 00       		.byte	0
 1160 0043 06       		.uleb128 0x6
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 37


 1161 0044 35       		.uleb128 0x35
 1162 0045 00       		.byte	0
 1163 0046 49       		.uleb128 0x49
 1164 0047 13       		.uleb128 0x13
 1165 0048 00       		.byte	0
 1166 0049 00       		.byte	0
 1167 004a 07       		.uleb128 0x7
 1168 004b 2E       		.uleb128 0x2e
 1169 004c 00       		.byte	0
 1170 004d 3F       		.uleb128 0x3f
 1171 004e 19       		.uleb128 0x19
 1172 004f 03       		.uleb128 0x3
 1173 0050 0E       		.uleb128 0xe
 1174 0051 3A       		.uleb128 0x3a
 1175 0052 0B       		.uleb128 0xb
 1176 0053 3B       		.uleb128 0x3b
 1177 0054 0B       		.uleb128 0xb
 1178 0055 27       		.uleb128 0x27
 1179 0056 19       		.uleb128 0x19
 1180 0057 11       		.uleb128 0x11
 1181 0058 01       		.uleb128 0x1
 1182 0059 12       		.uleb128 0x12
 1183 005a 06       		.uleb128 0x6
 1184 005b 40       		.uleb128 0x40
 1185 005c 18       		.uleb128 0x18
 1186 005d 9642     		.uleb128 0x2116
 1187 005f 19       		.uleb128 0x19
 1188 0060 00       		.byte	0
 1189 0061 00       		.byte	0
 1190 0062 08       		.uleb128 0x8
 1191 0063 2E       		.uleb128 0x2e
 1192 0064 01       		.byte	0x1
 1193 0065 3F       		.uleb128 0x3f
 1194 0066 19       		.uleb128 0x19
 1195 0067 03       		.uleb128 0x3
 1196 0068 0E       		.uleb128 0xe
 1197 0069 3A       		.uleb128 0x3a
 1198 006a 0B       		.uleb128 0xb
 1199 006b 3B       		.uleb128 0x3b
 1200 006c 0B       		.uleb128 0xb
 1201 006d 27       		.uleb128 0x27
 1202 006e 19       		.uleb128 0x19
 1203 006f 11       		.uleb128 0x11
 1204 0070 01       		.uleb128 0x1
 1205 0071 12       		.uleb128 0x12
 1206 0072 06       		.uleb128 0x6
 1207 0073 40       		.uleb128 0x40
 1208 0074 18       		.uleb128 0x18
 1209 0075 9642     		.uleb128 0x2116
 1210 0077 19       		.uleb128 0x19
 1211 0078 01       		.uleb128 0x1
 1212 0079 13       		.uleb128 0x13
 1213 007a 00       		.byte	0
 1214 007b 00       		.byte	0
 1215 007c 09       		.uleb128 0x9
 1216 007d 34       		.uleb128 0x34
 1217 007e 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 38


 1218 007f 03       		.uleb128 0x3
 1219 0080 0E       		.uleb128 0xe
 1220 0081 3A       		.uleb128 0x3a
 1221 0082 0B       		.uleb128 0xb
 1222 0083 3B       		.uleb128 0x3b
 1223 0084 0B       		.uleb128 0xb
 1224 0085 49       		.uleb128 0x49
 1225 0086 13       		.uleb128 0x13
 1226 0087 02       		.uleb128 0x2
 1227 0088 18       		.uleb128 0x18
 1228 0089 00       		.byte	0
 1229 008a 00       		.byte	0
 1230 008b 0A       		.uleb128 0xa
 1231 008c 2E       		.uleb128 0x2e
 1232 008d 00       		.byte	0
 1233 008e 3F       		.uleb128 0x3f
 1234 008f 19       		.uleb128 0x19
 1235 0090 03       		.uleb128 0x3
 1236 0091 0E       		.uleb128 0xe
 1237 0092 3A       		.uleb128 0x3a
 1238 0093 0B       		.uleb128 0xb
 1239 0094 3B       		.uleb128 0x3b
 1240 0095 0B       		.uleb128 0xb
 1241 0096 27       		.uleb128 0x27
 1242 0097 19       		.uleb128 0x19
 1243 0098 11       		.uleb128 0x11
 1244 0099 01       		.uleb128 0x1
 1245 009a 12       		.uleb128 0x12
 1246 009b 06       		.uleb128 0x6
 1247 009c 40       		.uleb128 0x40
 1248 009d 18       		.uleb128 0x18
 1249 009e 9742     		.uleb128 0x2117
 1250 00a0 19       		.uleb128 0x19
 1251 00a1 00       		.byte	0
 1252 00a2 00       		.byte	0
 1253 00a3 0B       		.uleb128 0xb
 1254 00a4 2E       		.uleb128 0x2e
 1255 00a5 01       		.byte	0x1
 1256 00a6 3F       		.uleb128 0x3f
 1257 00a7 19       		.uleb128 0x19
 1258 00a8 03       		.uleb128 0x3
 1259 00a9 0E       		.uleb128 0xe
 1260 00aa 3A       		.uleb128 0x3a
 1261 00ab 0B       		.uleb128 0xb
 1262 00ac 3B       		.uleb128 0x3b
 1263 00ad 05       		.uleb128 0x5
 1264 00ae 27       		.uleb128 0x27
 1265 00af 19       		.uleb128 0x19
 1266 00b0 11       		.uleb128 0x11
 1267 00b1 01       		.uleb128 0x1
 1268 00b2 12       		.uleb128 0x12
 1269 00b3 06       		.uleb128 0x6
 1270 00b4 40       		.uleb128 0x40
 1271 00b5 18       		.uleb128 0x18
 1272 00b6 9742     		.uleb128 0x2117
 1273 00b8 19       		.uleb128 0x19
 1274 00b9 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 39


 1275 00ba 13       		.uleb128 0x13
 1276 00bb 00       		.byte	0
 1277 00bc 00       		.byte	0
 1278 00bd 0C       		.uleb128 0xc
 1279 00be 05       		.uleb128 0x5
 1280 00bf 00       		.byte	0
 1281 00c0 03       		.uleb128 0x3
 1282 00c1 0E       		.uleb128 0xe
 1283 00c2 3A       		.uleb128 0x3a
 1284 00c3 0B       		.uleb128 0xb
 1285 00c4 3B       		.uleb128 0x3b
 1286 00c5 05       		.uleb128 0x5
 1287 00c6 49       		.uleb128 0x49
 1288 00c7 13       		.uleb128 0x13
 1289 00c8 02       		.uleb128 0x2
 1290 00c9 18       		.uleb128 0x18
 1291 00ca 00       		.byte	0
 1292 00cb 00       		.byte	0
 1293 00cc 0D       		.uleb128 0xd
 1294 00cd 2E       		.uleb128 0x2e
 1295 00ce 00       		.byte	0
 1296 00cf 3F       		.uleb128 0x3f
 1297 00d0 19       		.uleb128 0x19
 1298 00d1 03       		.uleb128 0x3
 1299 00d2 0E       		.uleb128 0xe
 1300 00d3 3A       		.uleb128 0x3a
 1301 00d4 0B       		.uleb128 0xb
 1302 00d5 3B       		.uleb128 0x3b
 1303 00d6 05       		.uleb128 0x5
 1304 00d7 27       		.uleb128 0x27
 1305 00d8 19       		.uleb128 0x19
 1306 00d9 49       		.uleb128 0x49
 1307 00da 13       		.uleb128 0x13
 1308 00db 11       		.uleb128 0x11
 1309 00dc 01       		.uleb128 0x1
 1310 00dd 12       		.uleb128 0x12
 1311 00de 06       		.uleb128 0x6
 1312 00df 40       		.uleb128 0x40
 1313 00e0 18       		.uleb128 0x18
 1314 00e1 9742     		.uleb128 0x2117
 1315 00e3 19       		.uleb128 0x19
 1316 00e4 00       		.byte	0
 1317 00e5 00       		.byte	0
 1318 00e6 0E       		.uleb128 0xe
 1319 00e7 2E       		.uleb128 0x2e
 1320 00e8 00       		.byte	0
 1321 00e9 3F       		.uleb128 0x3f
 1322 00ea 19       		.uleb128 0x19
 1323 00eb 03       		.uleb128 0x3
 1324 00ec 0E       		.uleb128 0xe
 1325 00ed 3A       		.uleb128 0x3a
 1326 00ee 0B       		.uleb128 0xb
 1327 00ef 3B       		.uleb128 0x3b
 1328 00f0 05       		.uleb128 0x5
 1329 00f1 27       		.uleb128 0x27
 1330 00f2 19       		.uleb128 0x19
 1331 00f3 11       		.uleb128 0x11
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 40


 1332 00f4 01       		.uleb128 0x1
 1333 00f5 12       		.uleb128 0x12
 1334 00f6 06       		.uleb128 0x6
 1335 00f7 40       		.uleb128 0x40
 1336 00f8 18       		.uleb128 0x18
 1337 00f9 9642     		.uleb128 0x2116
 1338 00fb 19       		.uleb128 0x19
 1339 00fc 00       		.byte	0
 1340 00fd 00       		.byte	0
 1341 00fe 0F       		.uleb128 0xf
 1342 00ff 2E       		.uleb128 0x2e
 1343 0100 01       		.byte	0x1
 1344 0101 3F       		.uleb128 0x3f
 1345 0102 19       		.uleb128 0x19
 1346 0103 03       		.uleb128 0x3
 1347 0104 0E       		.uleb128 0xe
 1348 0105 3A       		.uleb128 0x3a
 1349 0106 0B       		.uleb128 0xb
 1350 0107 3B       		.uleb128 0x3b
 1351 0108 05       		.uleb128 0x5
 1352 0109 27       		.uleb128 0x27
 1353 010a 19       		.uleb128 0x19
 1354 010b 49       		.uleb128 0x49
 1355 010c 13       		.uleb128 0x13
 1356 010d 11       		.uleb128 0x11
 1357 010e 01       		.uleb128 0x1
 1358 010f 12       		.uleb128 0x12
 1359 0110 06       		.uleb128 0x6
 1360 0111 40       		.uleb128 0x40
 1361 0112 18       		.uleb128 0x18
 1362 0113 9742     		.uleb128 0x2117
 1363 0115 19       		.uleb128 0x19
 1364 0116 01       		.uleb128 0x1
 1365 0117 13       		.uleb128 0x13
 1366 0118 00       		.byte	0
 1367 0119 00       		.byte	0
 1368 011a 10       		.uleb128 0x10
 1369 011b 34       		.uleb128 0x34
 1370 011c 00       		.byte	0
 1371 011d 03       		.uleb128 0x3
 1372 011e 0E       		.uleb128 0xe
 1373 011f 3A       		.uleb128 0x3a
 1374 0120 0B       		.uleb128 0xb
 1375 0121 3B       		.uleb128 0x3b
 1376 0122 05       		.uleb128 0x5
 1377 0123 49       		.uleb128 0x49
 1378 0124 13       		.uleb128 0x13
 1379 0125 02       		.uleb128 0x2
 1380 0126 18       		.uleb128 0x18
 1381 0127 00       		.byte	0
 1382 0128 00       		.byte	0
 1383 0129 11       		.uleb128 0x11
 1384 012a 34       		.uleb128 0x34
 1385 012b 00       		.byte	0
 1386 012c 03       		.uleb128 0x3
 1387 012d 0E       		.uleb128 0xe
 1388 012e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 41


 1389 012f 0B       		.uleb128 0xb
 1390 0130 3B       		.uleb128 0x3b
 1391 0131 0B       		.uleb128 0xb
 1392 0132 49       		.uleb128 0x49
 1393 0133 13       		.uleb128 0x13
 1394 0134 3F       		.uleb128 0x3f
 1395 0135 19       		.uleb128 0x19
 1396 0136 02       		.uleb128 0x2
 1397 0137 18       		.uleb128 0x18
 1398 0138 00       		.byte	0
 1399 0139 00       		.byte	0
 1400 013a 00       		.byte	0
 1401              		.section	.debug_aranges,"",%progbits
 1402 0000 A4000000 		.4byte	0xa4
 1403 0004 0200     		.2byte	0x2
 1404 0006 00000000 		.4byte	.Ldebug_info0
 1405 000a 04       		.byte	0x4
 1406 000b 00       		.byte	0
 1407 000c 0000     		.2byte	0
 1408 000e 0000     		.2byte	0
 1409 0010 00000000 		.4byte	.LFB2
 1410 0014 24000000 		.4byte	.LFE2-.LFB2
 1411 0018 00000000 		.4byte	.LFB3
 1412 001c AC000000 		.4byte	.LFE3-.LFB3
 1413 0020 00000000 		.4byte	.LFB4
 1414 0024 20000000 		.4byte	.LFE4-.LFB4
 1415 0028 00000000 		.4byte	.LFB5
 1416 002c 1C000000 		.4byte	.LFE5-.LFB5
 1417 0030 00000000 		.4byte	.LFB6
 1418 0034 20000000 		.4byte	.LFE6-.LFB6
 1419 0038 00000000 		.4byte	.LFB7
 1420 003c 1C000000 		.4byte	.LFE7-.LFB7
 1421 0040 00000000 		.4byte	.LFB8
 1422 0044 1C000000 		.4byte	.LFE8-.LFB8
 1423 0048 00000000 		.4byte	.LFB9
 1424 004c 20000000 		.4byte	.LFE9-.LFB9
 1425 0050 00000000 		.4byte	.LFB10
 1426 0054 20000000 		.4byte	.LFE10-.LFB10
 1427 0058 00000000 		.4byte	.LFB11
 1428 005c 20000000 		.4byte	.LFE11-.LFB11
 1429 0060 00000000 		.4byte	.LFB12
 1430 0064 20000000 		.4byte	.LFE12-.LFB12
 1431 0068 00000000 		.4byte	.LFB13
 1432 006c 14000000 		.4byte	.LFE13-.LFB13
 1433 0070 00000000 		.4byte	.LFB14
 1434 0074 20000000 		.4byte	.LFE14-.LFB14
 1435 0078 00000000 		.4byte	.LFB15
 1436 007c 20000000 		.4byte	.LFE15-.LFB15
 1437 0080 00000000 		.4byte	.LFB16
 1438 0084 14000000 		.4byte	.LFE16-.LFB16
 1439 0088 00000000 		.4byte	.LFB17
 1440 008c 14000000 		.4byte	.LFE17-.LFB17
 1441 0090 00000000 		.4byte	.LFB18
 1442 0094 14000000 		.4byte	.LFE18-.LFB18
 1443 0098 00000000 		.4byte	.LFB19
 1444 009c 14000000 		.4byte	.LFE19-.LFB19
 1445 00a0 00000000 		.4byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 42


 1446 00a4 00000000 		.4byte	0
 1447              		.section	.debug_ranges,"",%progbits
 1448              	.Ldebug_ranges0:
 1449 0000 00000000 		.4byte	.LFB2
 1450 0004 24000000 		.4byte	.LFE2
 1451 0008 00000000 		.4byte	.LFB3
 1452 000c AC000000 		.4byte	.LFE3
 1453 0010 00000000 		.4byte	.LFB4
 1454 0014 20000000 		.4byte	.LFE4
 1455 0018 00000000 		.4byte	.LFB5
 1456 001c 1C000000 		.4byte	.LFE5
 1457 0020 00000000 		.4byte	.LFB6
 1458 0024 20000000 		.4byte	.LFE6
 1459 0028 00000000 		.4byte	.LFB7
 1460 002c 1C000000 		.4byte	.LFE7
 1461 0030 00000000 		.4byte	.LFB8
 1462 0034 1C000000 		.4byte	.LFE8
 1463 0038 00000000 		.4byte	.LFB9
 1464 003c 20000000 		.4byte	.LFE9
 1465 0040 00000000 		.4byte	.LFB10
 1466 0044 20000000 		.4byte	.LFE10
 1467 0048 00000000 		.4byte	.LFB11
 1468 004c 20000000 		.4byte	.LFE11
 1469 0050 00000000 		.4byte	.LFB12
 1470 0054 20000000 		.4byte	.LFE12
 1471 0058 00000000 		.4byte	.LFB13
 1472 005c 14000000 		.4byte	.LFE13
 1473 0060 00000000 		.4byte	.LFB14
 1474 0064 20000000 		.4byte	.LFE14
 1475 0068 00000000 		.4byte	.LFB15
 1476 006c 20000000 		.4byte	.LFE15
 1477 0070 00000000 		.4byte	.LFB16
 1478 0074 14000000 		.4byte	.LFE16
 1479 0078 00000000 		.4byte	.LFB17
 1480 007c 14000000 		.4byte	.LFE17
 1481 0080 00000000 		.4byte	.LFB18
 1482 0084 14000000 		.4byte	.LFE18
 1483 0088 00000000 		.4byte	.LFB19
 1484 008c 14000000 		.4byte	.LFE19
 1485 0090 00000000 		.4byte	0
 1486 0094 00000000 		.4byte	0
 1487              		.section	.debug_line,"",%progbits
 1488              	.Ldebug_line0:
 1489 0000 AB010000 		.section	.debug_str,"MS",%progbits,1
 1489      02004500 
 1489      00000201 
 1489      FB0E0D00 
 1489      01010101 
 1490              	.LASF36:
 1491 0000 50574D5F 		.ascii	"PWM_12_WriteControlRegister\000"
 1491      31325F57 
 1491      72697465 
 1491      436F6E74 
 1491      726F6C52 
 1492              	.LASF21:
 1493 001c 50574D5F 		.ascii	"PWM_12_Stop\000"
 1493      31325F53 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 43


 1493      746F7000 
 1494              	.LASF27:
 1495 0028 70657269 		.ascii	"period\000"
 1495      6F6400
 1496              	.LASF3:
 1497 002f 73686F72 		.ascii	"short unsigned int\000"
 1497      7420756E 
 1497      7369676E 
 1497      65642069 
 1497      6E7400
 1498              	.LASF33:
 1499 0042 50574D5F 		.ascii	"PWM_12_ReadCounter\000"
 1499      31325F52 
 1499      65616443 
 1499      6F756E74 
 1499      657200
 1500              	.LASF11:
 1501 0055 666C6F61 		.ascii	"float\000"
 1501      7400
 1502              	.LASF26:
 1503 005b 636F756E 		.ascii	"counter\000"
 1503      74657200 
 1504              	.LASF1:
 1505 0063 756E7369 		.ascii	"unsigned char\000"
 1505      676E6564 
 1505      20636861 
 1505      7200
 1506              	.LASF43:
 1507 0071 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_12.c\000"
 1507      6E657261 
 1507      7465645F 
 1507      536F7572 
 1507      63655C50 
 1508              	.LASF39:
 1509 0093 50574D5F 		.ascii	"PWM_12_ReadCompare1\000"
 1509      31325F52 
 1509      65616443 
 1509      6F6D7061 
 1509      72653100 
 1510              	.LASF20:
 1511 00a7 50574D5F 		.ascii	"PWM_12_Enable\000"
 1511      31325F45 
 1511      6E61626C 
 1511      6500
 1512              	.LASF40:
 1513 00b5 50574D5F 		.ascii	"PWM_12_ReadCompare2\000"
 1513      31325F52 
 1513      65616443 
 1513      6F6D7061 
 1513      72653200 
 1514              	.LASF9:
 1515 00c9 75696E74 		.ascii	"uint8\000"
 1515      3800
 1516              	.LASF37:
 1517 00cf 636F6E74 		.ascii	"control\000"
 1517      726F6C00 
 1518              	.LASF25:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 44


 1519 00d7 50574D5F 		.ascii	"PWM_12_WritePeriod\000"
 1519      31325F57 
 1519      72697465 
 1519      50657269 
 1519      6F6400
 1520              	.LASF46:
 1521 00ea 50574D5F 		.ascii	"PWM_12_initVar\000"
 1521      31325F69 
 1521      6E697456 
 1521      617200
 1522              	.LASF34:
 1523 00f9 50574D5F 		.ascii	"PWM_12_ReadStatusRegister\000"
 1523      31325F52 
 1523      65616453 
 1523      74617475 
 1523      73526567 
 1524              	.LASF41:
 1525 0113 50574D5F 		.ascii	"PWM_12_ReadPeriod\000"
 1525      31325F52 
 1525      65616450 
 1525      6572696F 
 1525      6400
 1526              	.LASF12:
 1527 0125 646F7562 		.ascii	"double\000"
 1527      6C6500
 1528              	.LASF42:
 1529 012c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1529      4320342E 
 1529      392E3320 
 1529      32303135 
 1529      30333033 
 1530 015f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1530      20726576 
 1530      6973696F 
 1530      6E203232 
 1530      31323230 
 1531 0192 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1531      66756E63 
 1531      74696F6E 
 1531      2D736563 
 1531      74696F6E 
 1532              	.LASF10:
 1533 01ba 75696E74 		.ascii	"uint16\000"
 1533      313600
 1534              	.LASF5:
 1535 01c1 6C6F6E67 		.ascii	"long unsigned int\000"
 1535      20756E73 
 1535      69676E65 
 1535      6420696E 
 1535      7400
 1536              	.LASF8:
 1537 01d3 756E7369 		.ascii	"unsigned int\000"
 1537      676E6564 
 1537      20696E74 
 1537      00
 1538              	.LASF28:
 1539 01e0 50574D5F 		.ascii	"PWM_12_WriteCompare1\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 45


 1539      31325F57 
 1539      72697465 
 1539      436F6D70 
 1539      61726531 
 1540              	.LASF30:
 1541 01f5 50574D5F 		.ascii	"PWM_12_WriteCompare2\000"
 1541      31325F57 
 1541      72697465 
 1541      436F6D70 
 1541      61726532 
 1542              	.LASF7:
 1543 020a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1543      206C6F6E 
 1543      6720756E 
 1543      7369676E 
 1543      65642069 
 1544              	.LASF44:
 1545 0221 433A5C55 		.ascii	"C:\\Users\\Kevin\\Documents\\GitHub\\EZtimer\\Firmw"
 1545      73657273 
 1545      5C4B6576 
 1545      696E5C44 
 1545      6F63756D 
 1546 024e 6172655C 		.ascii	"are\\EZtimer.cydsn\000"
 1546      455A7469 
 1546      6D65722E 
 1546      63796473 
 1546      6E00
 1547              	.LASF35:
 1548 0260 72657375 		.ascii	"result\000"
 1548      6C7400
 1549              	.LASF24:
 1550 0267 50574D5F 		.ascii	"PWM_12_ClearFIFO\000"
 1550      31325F43 
 1550      6C656172 
 1550      4649464F 
 1550      00
 1551              	.LASF14:
 1552 0278 72656738 		.ascii	"reg8\000"
 1552      00
 1553              	.LASF16:
 1554 027d 73697A65 		.ascii	"sizetype\000"
 1554      74797065 
 1554      00
 1555              	.LASF23:
 1556 0286 50574D5F 		.ascii	"PWM_12_WriteCounter\000"
 1556      31325F57 
 1556      72697465 
 1556      436F756E 
 1556      74657200 
 1557              	.LASF6:
 1558 029a 6C6F6E67 		.ascii	"long long int\000"
 1558      206C6F6E 
 1558      6720696E 
 1558      7400
 1559              	.LASF19:
 1560 02a8 50574D5F 		.ascii	"PWM_12_Start\000"
 1560      31325F53 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 46


 1560      74617274 
 1560      00
 1561              	.LASF22:
 1562 02b5 50574D5F 		.ascii	"PWM_12_Init\000"
 1562      31325F49 
 1562      6E697400 
 1563              	.LASF32:
 1564 02c1 696E7465 		.ascii	"interruptMode\000"
 1564      72727570 
 1564      744D6F64 
 1564      6500
 1565              	.LASF38:
 1566 02cf 50574D5F 		.ascii	"PWM_12_ReadCapture\000"
 1566      31325F52 
 1566      65616443 
 1566      61707475 
 1566      726500
 1567              	.LASF2:
 1568 02e2 73686F72 		.ascii	"short int\000"
 1568      7420696E 
 1568      7400
 1569              	.LASF15:
 1570 02ec 72656731 		.ascii	"reg16\000"
 1570      3600
 1571              	.LASF17:
 1572 02f2 6374726C 		.ascii	"ctrl\000"
 1572      00
 1573              	.LASF4:
 1574 02f7 6C6F6E67 		.ascii	"long int\000"
 1574      20696E74 
 1574      00
 1575              	.LASF13:
 1576 0300 63686172 		.ascii	"char\000"
 1576      00
 1577              	.LASF31:
 1578 0305 50574D5F 		.ascii	"PWM_12_SetInterruptMode\000"
 1578      31325F53 
 1578      6574496E 
 1578      74657272 
 1578      7570744D 
 1579              	.LASF0:
 1580 031d 7369676E 		.ascii	"signed char\000"
 1580      65642063 
 1580      68617200 
 1581              	.LASF29:
 1582 0329 636F6D70 		.ascii	"compare\000"
 1582      61726500 
 1583              	.LASF45:
 1584 0331 50574D5F 		.ascii	"PWM_12_ReadControlRegister\000"
 1584      31325F52 
 1584      65616443 
 1584      6F6E7472 
 1584      6F6C5265 
 1585              	.LASF18:
 1586 034c 50574D5F 		.ascii	"PWM_12_interruptState\000"
 1586      31325F69 
 1586      6E746572 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccTzIqob.s 			page 47


 1586      72757074 
 1586      53746174 
 1587              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
