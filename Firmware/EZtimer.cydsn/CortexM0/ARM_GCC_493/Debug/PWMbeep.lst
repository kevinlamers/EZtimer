ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWMbeep.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWMbeep_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWMbeep_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWMbeep_Enable, %function
  23              	PWMbeep_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWMbeep.c"
   1:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWMbeep.c **** * File Name: PWMbeep.c
   3:.\Generated_Source\PSoC4/PWMbeep.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWMbeep.c **** *
   5:.\Generated_Source\PSoC4/PWMbeep.c **** * Description:
   6:.\Generated_Source\PSoC4/PWMbeep.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWMbeep.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWMbeep.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWMbeep.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWMbeep.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWMbeep.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWMbeep.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWMbeep.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWMbeep.c **** *
  15:.\Generated_Source\PSoC4/PWMbeep.c **** * Note:
  16:.\Generated_Source\PSoC4/PWMbeep.c **** *
  17:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWMbeep.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWMbeep.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWMbeep.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWMbeep.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWMbeep.c **** 
  24:.\Generated_Source\PSoC4/PWMbeep.c **** #include "PWMbeep.h"
  25:.\Generated_Source\PSoC4/PWMbeep.c **** 
  26:.\Generated_Source\PSoC4/PWMbeep.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWMbeep.c **** #ifdef PWMbeep_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWMbeep.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWMbeep.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* PWMbeep_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWMbeep.c **** 
  32:.\Generated_Source\PSoC4/PWMbeep.c **** uint8 PWMbeep_initVar = 0u;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 2


  33:.\Generated_Source\PSoC4/PWMbeep.c **** 
  34:.\Generated_Source\PSoC4/PWMbeep.c **** 
  35:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_Start
  37:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWMbeep.c **** *
  39:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWMbeep.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWMbeep.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWMbeep.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWMbeep.c **** *
  44:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
  46:.\Generated_Source\PSoC4/PWMbeep.c **** *
  47:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
  48:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
  49:.\Generated_Source\PSoC4/PWMbeep.c **** *
  50:.\Generated_Source\PSoC4/PWMbeep.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWMbeep.c **** *  PWMbeep_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWMbeep.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWMbeep.c **** *
  54:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWMbeep.c **** void PWMbeep_Start(void) 
  56:.\Generated_Source\PSoC4/PWMbeep.c **** {
  57:.\Generated_Source\PSoC4/PWMbeep.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWMbeep.c ****     if(PWMbeep_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWMbeep.c ****     {
  60:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_Init();
  61:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWMbeep.c ****     }
  63:.\Generated_Source\PSoC4/PWMbeep.c ****     PWMbeep_Enable();
  64:.\Generated_Source\PSoC4/PWMbeep.c **** 
  65:.\Generated_Source\PSoC4/PWMbeep.c **** }
  66:.\Generated_Source\PSoC4/PWMbeep.c **** 
  67:.\Generated_Source\PSoC4/PWMbeep.c **** 
  68:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_Init
  70:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWMbeep.c **** *
  72:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWMbeep.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWMbeep.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWMbeep.c **** *  PWMbeep_Start().
  76:.\Generated_Source\PSoC4/PWMbeep.c **** *
  77:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
  79:.\Generated_Source\PSoC4/PWMbeep.c **** *
  80:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
  81:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
  82:.\Generated_Source\PSoC4/PWMbeep.c **** *
  83:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWMbeep.c **** void PWMbeep_Init(void) 
  85:.\Generated_Source\PSoC4/PWMbeep.c **** {
  86:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction || PWMbeep_UseControl)
  87:.\Generated_Source\PSoC4/PWMbeep.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction || PWMbeep_UseControl) */
  89:.\Generated_Source\PSoC4/PWMbeep.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 3


  90:.\Generated_Source\PSoC4/PWMbeep.c ****     #if(!PWMbeep_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UseStatus)
  92:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWMbeep.c ****             uint8 PWMbeep_interruptState;
  94:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UseStatus) */
  95:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (!PWMbeep_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWMbeep.c **** 
  97:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWMbeep.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL |= PWMbeep_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_CONTROL |= PWMbeep_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWMbeep.c **** 
 104:.\Generated_Source\PSoC4/PWMbeep.c ****         ctrl = PWMbeep_CONTROL3 & ((uint8 )(~PWMbeep_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL3 = ctrl | PWMbeep_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWMbeep.c **** 
 107:.\Generated_Source\PSoC4/PWMbeep.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_RT1 &= ((uint8)(~PWMbeep_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_RT1 |= PWMbeep_SYNC;
 110:.\Generated_Source\PSoC4/PWMbeep.c **** 
 111:.\Generated_Source\PSoC4/PWMbeep.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_RT1 &= ((uint8)(~PWMbeep_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_RT1 |= PWMbeep_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWMbeep.c **** 
 115:.\Generated_Source\PSoC4/PWMbeep.c ****     #elif (PWMbeep_UseControl)
 116:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWMbeep.c ****         ctrl = PWMbeep_CONTROL & ((uint8)(~PWMbeep_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWMbeep.c ****                 ((uint8)(~PWMbeep_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL = ctrl | PWMbeep_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWMbeep.c ****                                    PWMbeep_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWMbeep.c **** 
 123:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (!PWMbeep_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_AUX_CONTROLDP0 |= (PWMbeep_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWMbeep.c ****         #else /* (PWMbeep_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_AUX_CONTROLDP0 |= (PWMbeep_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_AUX_CONTROLDP1 |= (PWMbeep_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWMbeep.c **** 
 133:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_WriteCounter(PWMbeep_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (!PWMbeep_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWMbeep.c **** 
 136:.\Generated_Source\PSoC4/PWMbeep.c ****     PWMbeep_WritePeriod(PWMbeep_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWMbeep.c **** 
 138:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_WriteCompare(PWMbeep_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 141:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_WriteCompare1(PWMbeep_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_WriteCompare2(PWMbeep_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWMbeep.c **** 
 145:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_WriteKillTime(PWMbeep_MinimumKillTime);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 4


 147:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWMbeep.c **** 
 149:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_WriteDeadTime(PWMbeep_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWMbeep.c **** 
 153:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UseStatus || PWMbeep_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_SetInterruptMode(PWMbeep_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UseStatus || PWMbeep_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWMbeep.c **** 
 157:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_GLOBAL_ENABLE |= PWMbeep_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL2 |= PWMbeep_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWMbeep.c ****     #else
 163:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UseStatus)
 164:.\Generated_Source\PSoC4/PWMbeep.c **** 
 165:.\Generated_Source\PSoC4/PWMbeep.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_STATUS_AUX_CTRL |= PWMbeep_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWMbeep.c **** 
 171:.\Generated_Source\PSoC4/PWMbeep.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWMbeep.c ****             CyExitCriticalSection(PWMbeep_interruptState);
 173:.\Generated_Source\PSoC4/PWMbeep.c **** 
 174:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Clear the FIFO to enable the PWMbeep_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWMbeep.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UseStatus) */
 178:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWMbeep.c **** }
 180:.\Generated_Source\PSoC4/PWMbeep.c **** 
 181:.\Generated_Source\PSoC4/PWMbeep.c **** 
 182:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_Enable
 184:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWMbeep.c **** *
 186:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWMbeep.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWMbeep.c **** *
 189:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
 191:.\Generated_Source\PSoC4/PWMbeep.c **** *
 192:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
 193:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
 194:.\Generated_Source\PSoC4/PWMbeep.c **** *
 195:.\Generated_Source\PSoC4/PWMbeep.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWMbeep.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWMbeep.c **** *
 198:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWMbeep.c **** void PWMbeep_Enable(void) 
 200:.\Generated_Source\PSoC4/PWMbeep.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWMbeep.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 5


 202:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_GLOBAL_ENABLE |= PWMbeep_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_GLOBAL_STBY_ENABLE |= PWMbeep_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWMbeep.c **** 
 207:.\Generated_Source\PSoC4/PWMbeep.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UseControl || PWMbeep_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL |= PWMbeep_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UseControl || PWMbeep_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWMbeep.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 71000F40 		.word	1074724977
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWMbeep_Enable, .-PWMbeep_Enable
  44              		.section	.text.PWMbeep_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWMbeep_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWMbeep_Stop, %function
  50              	PWMbeep_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWMbeep.c **** 
 213:.\Generated_Source\PSoC4/PWMbeep.c **** 
 214:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_Stop
 216:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWMbeep.c **** *
 218:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWMbeep.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWMbeep.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWMbeep.c **** *
 222:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
 224:.\Generated_Source\PSoC4/PWMbeep.c **** *
 225:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
 226:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
 227:.\Generated_Source\PSoC4/PWMbeep.c **** *
 228:.\Generated_Source\PSoC4/PWMbeep.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWMbeep.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWMbeep.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWMbeep.c **** *
 232:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWMbeep.c **** void PWMbeep_Stop(void) 
 234:.\Generated_Source\PSoC4/PWMbeep.c **** {
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UseControl || PWMbeep_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_CONTROL &= ((uint8)(~PWMbeep_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UseControl || PWMbeep_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWMbeep.c **** 
 239:.\Generated_Source\PSoC4/PWMbeep.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_GLOBAL_ENABLE &= ((uint8)(~PWMbeep_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_GLOBAL_STBY_ENABLE &= ((uint8)(~PWMbeep_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWMbeep.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 71000F40 		.word	1074724977
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWMbeep_Stop, .-PWMbeep_Stop
  70              		.section	.text.PWMbeep_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWMbeep_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWMbeep_WriteCounter, %function
  76              	PWMbeep_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWMbeep.c **** 
 246:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWMbeep.c **** 
 249:.\Generated_Source\PSoC4/PWMbeep.c **** 
 250:.\Generated_Source\PSoC4/PWMbeep.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWMbeep.c ****         * Function Name: PWMbeep_SetCompareMode
 252:.\Generated_Source\PSoC4/PWMbeep.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 254:.\Generated_Source\PSoC4/PWMbeep.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWMbeep.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWMbeep.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 258:.\Generated_Source\PSoC4/PWMbeep.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWMbeep.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWMbeep.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 262:.\Generated_Source\PSoC4/PWMbeep.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWMbeep.c ****         *  None
 264:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 265:.\Generated_Source\PSoC4/PWMbeep.c ****         *******************************************************************************/
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 7


 266:.\Generated_Source\PSoC4/PWMbeep.c ****         void PWMbeep_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWMbeep.c ****         {
 268:.\Generated_Source\PSoC4/PWMbeep.c ****             #if(PWMbeep_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWMbeep.c **** 
 270:.\Generated_Source\PSoC4/PWMbeep.c ****                 #if(0 != PWMbeep_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMbeep_CTRL_CMPMODE1_
 272:.\Generated_Source\PSoC4/PWMbeep.c ****                 #else
 273:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWMbeep.c ****                 #endif /* (0 != PWMbeep_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWMbeep.c **** 
 276:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL3 &= ((uint8)(~PWMbeep_CTRL_CMPMODE1_MASK)); /*Clear Existing Data *
 277:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWMbeep.c **** 
 279:.\Generated_Source\PSoC4/PWMbeep.c ****             #elif (PWMbeep_UseControl)
 280:.\Generated_Source\PSoC4/PWMbeep.c **** 
 281:.\Generated_Source\PSoC4/PWMbeep.c ****                 #if(0 != PWMbeep_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWMbeep_CTRL_CMPMODE1
 283:.\Generated_Source\PSoC4/PWMbeep.c ****                                                 PWMbeep_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWMbeep.c ****                 #else
 285:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemode1masked = comparemode & PWMbeep_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWMbeep.c ****                 #endif /* (0 != PWMbeep_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWMbeep.c **** 
 288:.\Generated_Source\PSoC4/PWMbeep.c ****                 #if(0 != PWMbeep_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWMbeep_CTRL_CMPMODE2
 290:.\Generated_Source\PSoC4/PWMbeep.c ****                                                PWMbeep_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWMbeep.c ****                 #else
 292:.\Generated_Source\PSoC4/PWMbeep.c ****                     uint8 comparemode2masked = comparemode & PWMbeep_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWMbeep.c ****                 #endif /* (0 != PWMbeep_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWMbeep.c **** 
 295:.\Generated_Source\PSoC4/PWMbeep.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL &= ((uint8)(~(PWMbeep_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWMbeep.c ****                                             PWMbeep_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWMbeep.c **** 
 300:.\Generated_Source\PSoC4/PWMbeep.c ****             #else
 301:.\Generated_Source\PSoC4/PWMbeep.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (PWMbeep_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWMbeep.c ****         }
 304:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* PWMbeep_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWMbeep.c **** 
 306:.\Generated_Source\PSoC4/PWMbeep.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWMbeep.c **** 
 308:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWMbeep.c **** 
 310:.\Generated_Source\PSoC4/PWMbeep.c **** 
 311:.\Generated_Source\PSoC4/PWMbeep.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWMbeep.c ****         * Function Name: PWMbeep_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWMbeep.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 315:.\Generated_Source\PSoC4/PWMbeep.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWMbeep.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 318:.\Generated_Source\PSoC4/PWMbeep.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWMbeep.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWMbeep.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 322:.\Generated_Source\PSoC4/PWMbeep.c ****         * Return:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 8


 323:.\Generated_Source\PSoC4/PWMbeep.c ****         *  None
 324:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 325:.\Generated_Source\PSoC4/PWMbeep.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWMbeep.c ****         void PWMbeep_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWMbeep.c ****         {
 328:.\Generated_Source\PSoC4/PWMbeep.c ****             #if(0 != PWMbeep_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWMbeep.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMbeep_CTRL_CMPMODE1_SHIF
 330:.\Generated_Source\PSoC4/PWMbeep.c ****                                            PWMbeep_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWMbeep.c ****             #else
 332:.\Generated_Source\PSoC4/PWMbeep.c ****                 uint8 comparemodemasked = comparemode & PWMbeep_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (0 != PWMbeep_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWMbeep.c **** 
 335:.\Generated_Source\PSoC4/PWMbeep.c ****             #if (PWMbeep_UseControl)
 336:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL &= ((uint8)(~PWMbeep_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (PWMbeep_UseControl) */
 339:.\Generated_Source\PSoC4/PWMbeep.c ****         }
 340:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* PWMbeep_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWMbeep.c **** 
 342:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWMbeep.c **** 
 344:.\Generated_Source\PSoC4/PWMbeep.c **** 
 345:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 349:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 352:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWMbeep.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWMbeep.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 356:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 358:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 359:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 362:.\Generated_Source\PSoC4/PWMbeep.c **** 
 363:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(0 != PWMbeep_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWMbeep.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWMbeep_CTRL_CMPMODE2_SHIFT)) 
 365:.\Generated_Source\PSoC4/PWMbeep.c ****                                                  PWMbeep_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 367:.\Generated_Source\PSoC4/PWMbeep.c ****             uint8 comparemodemasked = comparemode & PWMbeep_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (0 != PWMbeep_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWMbeep.c **** 
 370:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_UseControl)
 371:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_CONTROL &= ((uint8)(~PWMbeep_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UseControl) */
 374:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 375:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /*PWMbeep_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWMbeep.c **** 
 377:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWMbeep.c **** 
 379:.\Generated_Source\PSoC4/PWMbeep.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 9


 380:.\Generated_Source\PSoC4/PWMbeep.c **** #if (!PWMbeep_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWMbeep.c **** 
 382:.\Generated_Source\PSoC4/PWMbeep.c **** 
 383:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteCounter
 385:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 387:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWMbeep.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWMbeep.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWMbeep.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 393:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWMbeep.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 396:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 398:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 399:.\Generated_Source\PSoC4/PWMbeep.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWMbeep.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 402:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteCounter(uint8 counter) \
 404:.\Generated_Source\PSoC4/PWMbeep.c ****                                        
 405:.\Generated_Source\PSoC4/PWMbeep.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWMbeep.c ****         CY_SET_REG8(PWMbeep_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1870     		strb	r0, [r3]
 407:.\Generated_Source\PSoC4/PWMbeep.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 01000F40 		.word	1074724865
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWMbeep_WriteCounter, .-PWMbeep_WriteCounter
  94              		.section	.text.PWMbeep_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWMbeep_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWMbeep_ReadCounter, %function
 100              	PWMbeep_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWMbeep.c **** 
 409:.\Generated_Source\PSoC4/PWMbeep.c **** 
 410:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadCounter
 412:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 10


 413:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 414:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWMbeep.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 418:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 420:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 421:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWMbeep.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 424:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWMbeep.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWMbeep.c ****           (void)CY_GET_REG8(PWMbeep_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWMbeep.c **** 
 432:.\Generated_Source\PSoC4/PWMbeep.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1878     		ldrb	r0, [r3]
 110 0008 C0B2     		uxtb	r0, r0
 434:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 11000F40 		.word	1074724881
 118 0010 51000F40 		.word	1074724945
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWMbeep_ReadCounter, .-PWMbeep_ReadCounter
 122              		.section	.text.PWMbeep_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWMbeep_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWMbeep_WritePeriod, %function
 128              	PWMbeep_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWMbeep.c **** 
 436:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UseStatus)
 437:.\Generated_Source\PSoC4/PWMbeep.c **** 
 438:.\Generated_Source\PSoC4/PWMbeep.c **** 
 439:.\Generated_Source\PSoC4/PWMbeep.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWMbeep.c ****         * Function Name: PWMbeep_ClearFIFO
 441:.\Generated_Source\PSoC4/PWMbeep.c ****         ********************************************************************************
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 11


 442:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 443:.\Generated_Source\PSoC4/PWMbeep.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWMbeep.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 446:.\Generated_Source\PSoC4/PWMbeep.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWMbeep.c ****         *  None
 448:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 449:.\Generated_Source\PSoC4/PWMbeep.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWMbeep.c ****         *  None
 451:.\Generated_Source\PSoC4/PWMbeep.c ****         *
 452:.\Generated_Source\PSoC4/PWMbeep.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWMbeep.c ****         void PWMbeep_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWMbeep.c ****         {
 455:.\Generated_Source\PSoC4/PWMbeep.c ****             while(0u != (PWMbeep_ReadStatusRegister() & PWMbeep_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWMbeep.c ****             {
 457:.\Generated_Source\PSoC4/PWMbeep.c ****                 (void)PWMbeep_ReadCapture();
 458:.\Generated_Source\PSoC4/PWMbeep.c ****             }
 459:.\Generated_Source\PSoC4/PWMbeep.c ****         }
 460:.\Generated_Source\PSoC4/PWMbeep.c **** 
 461:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* PWMbeep_UseStatus */
 462:.\Generated_Source\PSoC4/PWMbeep.c **** 
 463:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* !PWMbeep_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWMbeep.c **** 
 465:.\Generated_Source\PSoC4/PWMbeep.c **** 
 466:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_WritePeriod
 468:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWMbeep.c **** *
 470:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWMbeep.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWMbeep.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWMbeep.c **** *
 474:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWMbeep.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWMbeep.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWMbeep.c **** *
 478:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
 479:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
 480:.\Generated_Source\PSoC4/PWMbeep.c **** *
 481:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWMbeep.c **** void PWMbeep_WritePeriod(uint8 period) 
 483:.\Generated_Source\PSoC4/PWMbeep.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWMbeep.c ****     #if(PWMbeep_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWMbeep.c ****         CY_SET_REG16(PWMbeep_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWMbeep.c ****     #else
 487:.\Generated_Source\PSoC4/PWMbeep.c ****         CY_SET_REG8(PWMbeep_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1870     		strb	r0, [r3]
 488:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWMbeep.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 41000F40 		.word	1074724929
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWMbeep_WritePeriod, .-PWMbeep_WritePeriod
 146              		.section	.text.PWMbeep_WriteCompare,"ax",%progbits
 147              		.align	2
 148              		.global	PWMbeep_WriteCompare
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWMbeep_WriteCompare, %function
 152              	PWMbeep_WriteCompare:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWMbeep.c **** 
 491:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWMbeep.c **** 
 493:.\Generated_Source\PSoC4/PWMbeep.c **** 
 494:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteCompare
 496:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 498:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWMbeep.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWMbeep.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWMbeep.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 505:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWMbeep.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 508:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 510:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 511:.\Generated_Source\PSoC4/PWMbeep.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 515:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteCompare(uint8 compare) \
 517:.\Generated_Source\PSoC4/PWMbeep.c ****                                        
 518:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 154              		.loc 1 518 0
 155              		.cfi_startproc
 156              	.LVL2:
 519:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG16(PWMbeep_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 522:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG8(PWMbeep_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 522 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1870     		strb	r0, [r3]
 523:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWMbeep.c **** 
 525:.\Generated_Source\PSoC4/PWMbeep.c ****         #if (PWMbeep_PWMMode == PWMbeep__B_PWM__DITHER)
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 13


 526:.\Generated_Source\PSoC4/PWMbeep.c ****             #if(PWMbeep_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWMbeep.c ****                 CY_SET_REG16(PWMbeep_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWMbeep.c ****             #else
 529:.\Generated_Source\PSoC4/PWMbeep.c ****                 CY_SET_REG8(PWMbeep_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (PWMbeep_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_PWMMode == PWMbeep__B_PWM__DITHER) */
 532:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 160              		.loc 1 532 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 21000F40 		.word	1074724897
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWMbeep_WriteCompare, .-PWMbeep_WriteCompare
 170              		.section	.text.PWMbeep_SetInterruptMode,"ax",%progbits
 171              		.align	2
 172              		.global	PWMbeep_SetInterruptMode
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWMbeep_SetInterruptMode, %function
 176              	PWMbeep_SetInterruptMode:
 177              	.LFB11:
 533:.\Generated_Source\PSoC4/PWMbeep.c **** 
 534:.\Generated_Source\PSoC4/PWMbeep.c **** 
 535:.\Generated_Source\PSoC4/PWMbeep.c **** #else
 536:.\Generated_Source\PSoC4/PWMbeep.c **** 
 537:.\Generated_Source\PSoC4/PWMbeep.c **** 
 538:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteCompare1
 540:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 542:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWMbeep.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWMbeep.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWMbeep.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 548:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWMbeep.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 551:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 553:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 554:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteCompare1(uint8 compare) \
 556:.\Generated_Source\PSoC4/PWMbeep.c ****                                         
 557:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 558:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG16(PWMbeep_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 561:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG8(PWMbeep_COMPARE1_LSB_PTR, compare);
 562:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 564:.\Generated_Source\PSoC4/PWMbeep.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 14


 565:.\Generated_Source\PSoC4/PWMbeep.c **** 
 566:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteCompare2
 568:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 570:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWMbeep.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWMbeep.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWMbeep.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWMbeep.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 577:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWMbeep.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 580:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 582:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 583:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteCompare2(uint8 compare) \
 585:.\Generated_Source\PSoC4/PWMbeep.c ****                                         
 586:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 587:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG16(PWMbeep_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 590:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG8(PWMbeep_COMPARE2_LSB_PTR, compare);
 591:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 593:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWMbeep.c **** 
 595:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWMbeep.c **** 
 597:.\Generated_Source\PSoC4/PWMbeep.c **** 
 598:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 602:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 605:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWMbeep.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 608:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 610:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 611:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 614:.\Generated_Source\PSoC4/PWMbeep.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(!PWMbeep_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWMbeep.c ****             CY_SET_REG8(PWMbeep_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 618:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWMbeep.c ****             PWMbeep_DEADBAND_COUNT &= ((uint8)(~PWMbeep_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWMbeep.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 15


 622:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWMbeep.c ****             #if(PWMbeep_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWMbeep_DEADBAND_COUNT_SHIFT)
 625:.\Generated_Source\PSoC4/PWMbeep.c ****                                                     PWMbeep_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWMbeep.c ****             #else
 627:.\Generated_Source\PSoC4/PWMbeep.c ****                 PWMbeep_DEADBAND_COUNT |= deadtime & PWMbeep_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (PWMbeep_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWMbeep.c **** 
 630:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (!PWMbeep_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 632:.\Generated_Source\PSoC4/PWMbeep.c **** 
 633:.\Generated_Source\PSoC4/PWMbeep.c **** 
 634:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 638:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 641:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 643:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 644:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 647:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 650:.\Generated_Source\PSoC4/PWMbeep.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(!PWMbeep_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWMbeep.c ****             return (CY_GET_REG8(PWMbeep_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 654:.\Generated_Source\PSoC4/PWMbeep.c **** 
 655:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWMbeep.c ****             #if(PWMbeep_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWMbeep.c ****                 return ((uint8)(((uint8)(PWMbeep_DEADBAND_COUNT & PWMbeep_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWMbeep.c ****                                                                            PWMbeep_DEADBAND_COUNT_S
 659:.\Generated_Source\PSoC4/PWMbeep.c ****             #else
 660:.\Generated_Source\PSoC4/PWMbeep.c ****                 return (PWMbeep_DEADBAND_COUNT & PWMbeep_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWMbeep.c ****             #endif /* (PWMbeep_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (!PWMbeep_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 664:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWMbeep.c **** 
 666:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_UseStatus || PWMbeep_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWMbeep.c **** 
 668:.\Generated_Source\PSoC4/PWMbeep.c **** 
 669:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 673:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWMbeep.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 677:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 16


 679:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 680:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 682:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 683:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 178              		.loc 1 685 0
 179              		.cfi_startproc
 180              	.LVL3:
 686:.\Generated_Source\PSoC4/PWMbeep.c ****         CY_SET_REG8(PWMbeep_STATUS_MASK_PTR, interruptMode);
 181              		.loc 1 686 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 184              		.loc 1 687 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 81000F40 		.word	1074724993
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWMbeep_SetInterruptMode, .-PWMbeep_SetInterruptMode
 194              		.section	.text.PWMbeep_ReadStatusRegister,"ax",%progbits
 195              		.align	2
 196              		.global	PWMbeep_ReadStatusRegister
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWMbeep_ReadStatusRegister, %function
 200              	PWMbeep_ReadStatusRegister:
 201              	.LFB12:
 688:.\Generated_Source\PSoC4/PWMbeep.c **** 
 689:.\Generated_Source\PSoC4/PWMbeep.c **** 
 690:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 694:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWMbeep.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 697:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 699:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 700:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 710:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadStatusRegister(void) 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 17


 712:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 202              		.loc 1 712 0
 203              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_STATUS_PTR));
 204              		.loc 1 713 0
 205 0000 014B     		ldr	r3, .L23
 206 0002 1878     		ldrb	r0, [r3]
 207 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 208              		.loc 1 714 0
 209              		@ sp needed
 210 0006 7047     		bx	lr
 211              	.L24:
 212              		.align	2
 213              	.L23:
 214 0008 61000F40 		.word	1074724961
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWMbeep_ReadStatusRegister, .-PWMbeep_ReadStatusRegister
 218              		.section	.text.PWMbeep_ReadControlRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWMbeep_ReadControlRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWMbeep_ReadControlRegister, %function
 224              	PWMbeep_ReadControlRegister:
 225              	.LFB13:
 715:.\Generated_Source\PSoC4/PWMbeep.c **** 
 716:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* (PWMbeep_UseStatus || PWMbeep_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWMbeep.c **** 
 718:.\Generated_Source\PSoC4/PWMbeep.c **** 
 719:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_UseControl)
 720:.\Generated_Source\PSoC4/PWMbeep.c **** 
 721:.\Generated_Source\PSoC4/PWMbeep.c **** 
 722:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 726:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWMbeep.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 730:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 732:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 733:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 736:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 226              		.loc 1 738 0
 227              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWMbeep.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWMbeep.c **** 
 741:.\Generated_Source\PSoC4/PWMbeep.c ****         result = CY_GET_REG8(PWMbeep_CONTROL_PTR);
 228              		.loc 1 741 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 18


 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 232              	.LVL4:
 742:.\Generated_Source\PSoC4/PWMbeep.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 233              		.loc 1 743 0
 234              		@ sp needed
 235 0006 7047     		bx	lr
 236              	.L27:
 237              		.align	2
 238              	.L26:
 239 0008 71000F40 		.word	1074724977
 240              		.cfi_endproc
 241              	.LFE13:
 242              		.size	PWMbeep_ReadControlRegister, .-PWMbeep_ReadControlRegister
 243              		.section	.text.PWMbeep_WriteControlRegister,"ax",%progbits
 244              		.align	2
 245              		.global	PWMbeep_WriteControlRegister
 246              		.code	16
 247              		.thumb_func
 248              		.type	PWMbeep_WriteControlRegister, %function
 249              	PWMbeep_WriteControlRegister:
 250              	.LFB14:
 744:.\Generated_Source\PSoC4/PWMbeep.c **** 
 745:.\Generated_Source\PSoC4/PWMbeep.c **** 
 746:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 750:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWMbeep.c ****     *  the control register is not removed.
 753:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 754:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWMbeep.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 761:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 763:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 764:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWMbeep.c ****     void PWMbeep_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 251              		.loc 1 766 0
 252              		.cfi_startproc
 253              	.LVL5:
 767:.\Generated_Source\PSoC4/PWMbeep.c ****         CY_SET_REG8(PWMbeep_CONTROL_PTR, control);
 254              		.loc 1 767 0
 255 0000 014B     		ldr	r3, .L29
 256 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 257              		.loc 1 768 0
 258              		@ sp needed
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 19


 259 0004 7047     		bx	lr
 260              	.L30:
 261 0006 C046     		.align	2
 262              	.L29:
 263 0008 71000F40 		.word	1074724977
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWMbeep_WriteControlRegister, .-PWMbeep_WriteControlRegister
 267              		.section	.text.PWMbeep_ReadCapture,"ax",%progbits
 268              		.align	2
 269              		.global	PWMbeep_ReadCapture
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWMbeep_ReadCapture, %function
 273              	PWMbeep_ReadCapture:
 274              	.LFB15:
 769:.\Generated_Source\PSoC4/PWMbeep.c **** 
 770:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* (PWMbeep_UseControl) */
 771:.\Generated_Source\PSoC4/PWMbeep.c **** 
 772:.\Generated_Source\PSoC4/PWMbeep.c **** 
 773:.\Generated_Source\PSoC4/PWMbeep.c **** #if (!PWMbeep_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWMbeep.c **** 
 775:.\Generated_Source\PSoC4/PWMbeep.c **** 
 776:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadCapture
 778:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 780:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 783:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 785:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 786:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 789:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 275              		.loc 1 791 0
 276              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_CAPTURE_LSB_PTR));
 277              		.loc 1 792 0
 278 0000 014B     		ldr	r3, .L32
 279 0002 1878     		ldrb	r0, [r3]
 280 0004 C0B2     		uxtb	r0, r0
 793:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 281              		.loc 1 793 0
 282              		@ sp needed
 283 0006 7047     		bx	lr
 284              	.L33:
 285              		.align	2
 286              	.L32:
 287 0008 51000F40 		.word	1074724945
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWMbeep_ReadCapture, .-PWMbeep_ReadCapture
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 20


 291              		.section	.text.PWMbeep_ClearFIFO,"ax",%progbits
 292              		.align	2
 293              		.global	PWMbeep_ClearFIFO
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWMbeep_ClearFIFO, %function
 297              	PWMbeep_ClearFIFO:
 298              	.LFB8:
 454:.\Generated_Source\PSoC4/PWMbeep.c ****             while(0u != (PWMbeep_ReadStatusRegister() & PWMbeep_STATUS_FIFONEMPTY))
 299              		.loc 1 454 0
 300              		.cfi_startproc
 301 0000 08B5     		push	{r3, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 3, -8
 304              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWMbeep.c ****             {
 305              		.loc 1 455 0
 306 0002 01E0     		b	.L35
 307              	.L36:
 457:.\Generated_Source\PSoC4/PWMbeep.c ****             }
 308              		.loc 1 457 0
 309 0004 FFF7FEFF 		bl	PWMbeep_ReadCapture
 310              	.LVL6:
 311              	.L35:
 455:.\Generated_Source\PSoC4/PWMbeep.c ****             {
 312              		.loc 1 455 0
 313 0008 FFF7FEFF 		bl	PWMbeep_ReadStatusRegister
 314              	.LVL7:
 315 000c C306     		lsl	r3, r0, #27
 316 000e F9D4     		bmi	.L36
 459:.\Generated_Source\PSoC4/PWMbeep.c **** 
 317              		.loc 1 459 0
 318              		@ sp needed
 319 0010 08BD     		pop	{r3, pc}
 320              		.cfi_endproc
 321              	.LFE8:
 322              		.size	PWMbeep_ClearFIFO, .-PWMbeep_ClearFIFO
 323 0012 C046     		.section	.text.PWMbeep_Init,"ax",%progbits
 324              		.align	2
 325              		.global	PWMbeep_Init
 326              		.code	16
 327              		.thumb_func
 328              		.type	PWMbeep_Init, %function
 329              	PWMbeep_Init:
 330              	.LFB3:
  85:.\Generated_Source\PSoC4/PWMbeep.c ****     #if (PWMbeep_UsingFixedFunction || PWMbeep_UseControl)
 331              		.loc 1 85 0
 332              		.cfi_startproc
 333 0000 10B5     		push	{r4, lr}
 334              		.cfi_def_cfa_offset 8
 335              		.cfi_offset 4, -8
 336              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWMbeep.c ****                 ((uint8)(~PWMbeep_CTRL_CMPMODE1_MASK));
 337              		.loc 1 117 0
 338 0002 1149     		ldr	r1, .L38
 339 0004 0B78     		ldrb	r3, [r1]
 340 0006 3F22     		mov	r2, #63
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 21


 341 0008 9343     		bic	r3, r2
 342              	.LVL8:
 119:.\Generated_Source\PSoC4/PWMbeep.c ****                                    PWMbeep_DEFAULT_COMPARE1_MODE;
 343              		.loc 1 119 0
 344 000a 363A     		sub	r2, r2, #54
 345 000c 1343     		orr	r3, r2
 346              	.LVL9:
 347 000e 0B70     		strb	r3, [r1]
 126:.\Generated_Source\PSoC4/PWMbeep.c ****         #else /* (PWMbeep_Resolution == 16)*/
 348              		.loc 1 126 0
 349 0010 0E4C     		ldr	r4, .L38+4
 350 0012 2278     		ldrb	r2, [r4]
 351 0014 0123     		mov	r3, #1
 352 0016 1343     		orr	r3, r2
 353 0018 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (!PWMbeep_UsingFixedFunction) */
 354              		.loc 1 133 0
 355 001a 0820     		mov	r0, #8
 356 001c FFF7FEFF 		bl	PWMbeep_WriteCounter
 357              	.LVL10:
 136:.\Generated_Source\PSoC4/PWMbeep.c **** 
 358              		.loc 1 136 0
 359 0020 0820     		mov	r0, #8
 360 0022 FFF7FEFF 		bl	PWMbeep_WritePeriod
 361              	.LVL11:
 139:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 362              		.loc 1 139 0
 363 0026 0420     		mov	r0, #4
 364 0028 FFF7FEFF 		bl	PWMbeep_WriteCompare
 365              	.LVL12:
 154:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UseStatus || PWMbeep_UsingFixedFunction) */
 366              		.loc 1 154 0
 367 002c 0020     		mov	r0, #0
 368 002e FFF7FEFF 		bl	PWMbeep_SetInterruptMode
 369              	.LVL13:
 167:.\Generated_Source\PSoC4/PWMbeep.c ****             /* Use the interrupt output of the status register for IRQ output */
 370              		.loc 1 167 0
 371 0032 FFF7FEFF 		bl	CyEnterCriticalSection
 372              	.LVL14:
 169:.\Generated_Source\PSoC4/PWMbeep.c **** 
 373              		.loc 1 169 0
 374 0036 2278     		ldrb	r2, [r4]
 375 0038 1023     		mov	r3, #16
 376 003a 1343     		orr	r3, r2
 377 003c 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWMbeep.c **** 
 378              		.loc 1 172 0
 379 003e FFF7FEFF 		bl	CyExitCriticalSection
 380              	.LVL15:
 176:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UseStatus) */
 381              		.loc 1 176 0
 382 0042 FFF7FEFF 		bl	PWMbeep_ClearFIFO
 383              	.LVL16:
 179:.\Generated_Source\PSoC4/PWMbeep.c **** 
 384              		.loc 1 179 0
 385              		@ sp needed
 386 0046 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 22


 387              	.L39:
 388              		.align	2
 389              	.L38:
 390 0048 71000F40 		.word	1074724977
 391 004c 91000F40 		.word	1074725009
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	PWMbeep_Init, .-PWMbeep_Init
 395              		.section	.text.PWMbeep_Start,"ax",%progbits
 396              		.align	2
 397              		.global	PWMbeep_Start
 398              		.code	16
 399              		.thumb_func
 400              		.type	PWMbeep_Start, %function
 401              	PWMbeep_Start:
 402              	.LFB2:
  56:.\Generated_Source\PSoC4/PWMbeep.c ****     /* If not Initialized then initialize all required hardware and software */
 403              		.loc 1 56 0
 404              		.cfi_startproc
 405 0000 08B5     		push	{r3, lr}
 406              		.cfi_def_cfa_offset 8
 407              		.cfi_offset 3, -8
 408              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 409              		.loc 1 58 0
 410 0002 064B     		ldr	r3, .L42
 411 0004 1B78     		ldrb	r3, [r3]
 412 0006 002B     		cmp	r3, #0
 413 0008 04D1     		bne	.L41
  60:.\Generated_Source\PSoC4/PWMbeep.c ****         PWMbeep_initVar = 1u;
 414              		.loc 1 60 0
 415 000a FFF7FEFF 		bl	PWMbeep_Init
 416              	.LVL17:
  61:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 417              		.loc 1 61 0
 418 000e 0122     		mov	r2, #1
 419 0010 024B     		ldr	r3, .L42
 420 0012 1A70     		strb	r2, [r3]
 421              	.L41:
  63:.\Generated_Source\PSoC4/PWMbeep.c **** 
 422              		.loc 1 63 0
 423 0014 FFF7FEFF 		bl	PWMbeep_Enable
 424              	.LVL18:
  65:.\Generated_Source\PSoC4/PWMbeep.c **** 
 425              		.loc 1 65 0
 426              		@ sp needed
 427 0018 08BD     		pop	{r3, pc}
 428              	.L43:
 429 001a C046     		.align	2
 430              	.L42:
 431 001c 00000000 		.word	.LANCHOR0
 432              		.cfi_endproc
 433              	.LFE2:
 434              		.size	PWMbeep_Start, .-PWMbeep_Start
 435              		.section	.text.PWMbeep_ReadCompare,"ax",%progbits
 436              		.align	2
 437              		.global	PWMbeep_ReadCompare
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 23


 438              		.code	16
 439              		.thumb_func
 440              		.type	PWMbeep_ReadCompare, %function
 441              	PWMbeep_ReadCompare:
 442              	.LFB16:
 794:.\Generated_Source\PSoC4/PWMbeep.c **** 
 795:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* (!PWMbeep_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWMbeep.c **** 
 797:.\Generated_Source\PSoC4/PWMbeep.c **** 
 798:.\Generated_Source\PSoC4/PWMbeep.c **** #if (PWMbeep_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWMbeep.c **** 
 800:.\Generated_Source\PSoC4/PWMbeep.c **** 
 801:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadCompare
 803:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 805:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWMbeep.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 809:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 811:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 812:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 815:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 443              		.loc 1 817 0
 444              		.cfi_startproc
 818:.\Generated_Source\PSoC4/PWMbeep.c ****         #if(PWMbeep_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWMbeep.c ****             return ((uint8)CY_GET_REG16(PWMbeep_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWMbeep.c ****         #else
 821:.\Generated_Source\PSoC4/PWMbeep.c ****             return (CY_GET_REG8(PWMbeep_COMPARE1_LSB_PTR));
 445              		.loc 1 821 0
 446 0000 014B     		ldr	r3, .L45
 447 0002 1878     		ldrb	r0, [r3]
 448 0004 C0B2     		uxtb	r0, r0
 822:.\Generated_Source\PSoC4/PWMbeep.c ****         #endif /* (PWMbeep_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 449              		.loc 1 823 0
 450              		@ sp needed
 451 0006 7047     		bx	lr
 452              	.L46:
 453              		.align	2
 454              	.L45:
 455 0008 21000F40 		.word	1074724897
 456              		.cfi_endproc
 457              	.LFE16:
 458              		.size	PWMbeep_ReadCompare, .-PWMbeep_ReadCompare
 459              		.section	.text.PWMbeep_ReadPeriod,"ax",%progbits
 460              		.align	2
 461              		.global	PWMbeep_ReadPeriod
 462              		.code	16
 463              		.thumb_func
 464              		.type	PWMbeep_ReadPeriod, %function
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 24


 465              	PWMbeep_ReadPeriod:
 466              	.LFB17:
 824:.\Generated_Source\PSoC4/PWMbeep.c **** 
 825:.\Generated_Source\PSoC4/PWMbeep.c **** #else
 826:.\Generated_Source\PSoC4/PWMbeep.c **** 
 827:.\Generated_Source\PSoC4/PWMbeep.c **** 
 828:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadCompare1
 830:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 832:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 835:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 837:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 838:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 841:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 844:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_COMPARE1_LSB_PTR));
 845:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 846:.\Generated_Source\PSoC4/PWMbeep.c **** 
 847:.\Generated_Source\PSoC4/PWMbeep.c **** 
 848:.\Generated_Source\PSoC4/PWMbeep.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWMbeep.c ****     * Function Name: PWMbeep_ReadCompare2
 850:.\Generated_Source\PSoC4/PWMbeep.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 852:.\Generated_Source\PSoC4/PWMbeep.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWMbeep.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 855:.\Generated_Source\PSoC4/PWMbeep.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWMbeep.c ****     *  None
 857:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 858:.\Generated_Source\PSoC4/PWMbeep.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWMbeep.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWMbeep.c ****     *
 861:.\Generated_Source\PSoC4/PWMbeep.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWMbeep.c ****     uint8 PWMbeep_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWMbeep.c ****     {
 864:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_COMPARE2_LSB_PTR));
 865:.\Generated_Source\PSoC4/PWMbeep.c ****     }
 866:.\Generated_Source\PSoC4/PWMbeep.c **** 
 867:.\Generated_Source\PSoC4/PWMbeep.c **** #endif /* (PWMbeep_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWMbeep.c **** 
 869:.\Generated_Source\PSoC4/PWMbeep.c **** 
 870:.\Generated_Source\PSoC4/PWMbeep.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWMbeep.c **** * Function Name: PWMbeep_ReadPeriod
 872:.\Generated_Source\PSoC4/PWMbeep.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWMbeep.c **** *
 874:.\Generated_Source\PSoC4/PWMbeep.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWMbeep.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWMbeep.c **** *
 877:.\Generated_Source\PSoC4/PWMbeep.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWMbeep.c **** *  None
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 25


 879:.\Generated_Source\PSoC4/PWMbeep.c **** *
 880:.\Generated_Source\PSoC4/PWMbeep.c **** * Return:
 881:.\Generated_Source\PSoC4/PWMbeep.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWMbeep.c **** *
 883:.\Generated_Source\PSoC4/PWMbeep.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWMbeep.c **** uint8 PWMbeep_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWMbeep.c **** {
 467              		.loc 1 885 0
 468              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWMbeep.c ****     #if(PWMbeep_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWMbeep.c ****         return ((uint8)CY_GET_REG16(PWMbeep_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWMbeep.c ****     #else
 889:.\Generated_Source\PSoC4/PWMbeep.c ****         return (CY_GET_REG8(PWMbeep_PERIOD_LSB_PTR));
 469              		.loc 1 889 0
 470 0000 014B     		ldr	r3, .L48
 471 0002 1878     		ldrb	r0, [r3]
 472 0004 C0B2     		uxtb	r0, r0
 890:.\Generated_Source\PSoC4/PWMbeep.c ****     #endif /* (PWMbeep_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWMbeep.c **** }
 473              		.loc 1 891 0
 474              		@ sp needed
 475 0006 7047     		bx	lr
 476              	.L49:
 477              		.align	2
 478              	.L48:
 479 0008 41000F40 		.word	1074724929
 480              		.cfi_endproc
 481              	.LFE17:
 482              		.size	PWMbeep_ReadPeriod, .-PWMbeep_ReadPeriod
 483              		.global	PWMbeep_initVar
 484              		.bss
 485              		.set	.LANCHOR0,. + 0
 486              		.type	PWMbeep_initVar, %object
 487              		.size	PWMbeep_initVar, 1
 488              	PWMbeep_initVar:
 489 0000 00       		.space	1
 490              		.text
 491              	.Letext0:
 492              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 493              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 494              		.section	.debug_info,"",%progbits
 495              	.Ldebug_info0:
 496 0000 27030000 		.4byte	0x327
 497 0004 0400     		.2byte	0x4
 498 0006 00000000 		.4byte	.Ldebug_abbrev0
 499 000a 04       		.byte	0x4
 500 000b 01       		.uleb128 0x1
 501 000c 2C020000 		.4byte	.LASF38
 502 0010 01       		.byte	0x1
 503 0011 BA020000 		.4byte	.LASF39
 504 0015 7B010000 		.4byte	.LASF40
 505 0019 00000000 		.4byte	.Ldebug_ranges0+0
 506 001d 00000000 		.4byte	0
 507 0021 00000000 		.4byte	.Ldebug_line0
 508 0025 02       		.uleb128 0x2
 509 0026 01       		.byte	0x1
 510 0027 06       		.byte	0x6
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 26


 511 0028 20030000 		.4byte	.LASF0
 512 002c 02       		.uleb128 0x2
 513 002d 01       		.byte	0x1
 514 002e 08       		.byte	0x8
 515 002f 82000000 		.4byte	.LASF1
 516 0033 02       		.uleb128 0x2
 517 0034 02       		.byte	0x2
 518 0035 05       		.byte	0x5
 519 0036 DD020000 		.4byte	.LASF2
 520 003a 02       		.uleb128 0x2
 521 003b 02       		.byte	0x2
 522 003c 07       		.byte	0x7
 523 003d 35000000 		.4byte	.LASF3
 524 0041 02       		.uleb128 0x2
 525 0042 04       		.byte	0x4
 526 0043 05       		.byte	0x5
 527 0044 FB020000 		.4byte	.LASF4
 528 0048 02       		.uleb128 0x2
 529 0049 04       		.byte	0x4
 530 004a 07       		.byte	0x7
 531 004b A5000000 		.4byte	.LASF5
 532 004f 02       		.uleb128 0x2
 533 0050 08       		.byte	0x8
 534 0051 05       		.byte	0x5
 535 0052 03020000 		.4byte	.LASF6
 536 0056 02       		.uleb128 0x2
 537 0057 08       		.byte	0x8
 538 0058 07       		.byte	0x7
 539 0059 6B000000 		.4byte	.LASF7
 540 005d 03       		.uleb128 0x3
 541 005e 04       		.byte	0x4
 542 005f 05       		.byte	0x5
 543 0060 696E7400 		.ascii	"int\000"
 544 0064 02       		.uleb128 0x2
 545 0065 04       		.byte	0x4
 546 0066 07       		.byte	0x7
 547 0067 58010000 		.4byte	.LASF8
 548 006b 04       		.uleb128 0x4
 549 006c B7000000 		.4byte	.LASF12
 550 0070 02       		.byte	0x2
 551 0071 C2       		.byte	0xc2
 552 0072 2C000000 		.4byte	0x2c
 553 0076 02       		.uleb128 0x2
 554 0077 04       		.byte	0x4
 555 0078 04       		.byte	0x4
 556 0079 28000000 		.4byte	.LASF9
 557 007d 02       		.uleb128 0x2
 558 007e 08       		.byte	0x8
 559 007f 04       		.byte	0x4
 560 0080 48000000 		.4byte	.LASF10
 561 0084 02       		.uleb128 0x2
 562 0085 01       		.byte	0x1
 563 0086 08       		.byte	0x8
 564 0087 04030000 		.4byte	.LASF11
 565 008b 05       		.uleb128 0x5
 566 008c D3010000 		.4byte	.LASF13
 567 0090 02       		.byte	0x2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 27


 568 0091 6C01     		.2byte	0x16c
 569 0093 97000000 		.4byte	0x97
 570 0097 06       		.uleb128 0x6
 571 0098 6B000000 		.4byte	0x6b
 572 009c 02       		.uleb128 0x2
 573 009d 04       		.byte	0x4
 574 009e 07       		.byte	0x7
 575 009f ED010000 		.4byte	.LASF14
 576 00a3 07       		.uleb128 0x7
 577 00a4 00000000 		.4byte	.LASF15
 578 00a8 01       		.byte	0x1
 579 00a9 C7       		.byte	0xc7
 580 00aa 00000000 		.4byte	.LFB4
 581 00ae 10000000 		.4byte	.LFE4-.LFB4
 582 00b2 01       		.uleb128 0x1
 583 00b3 9C       		.byte	0x9c
 584 00b4 07       		.uleb128 0x7
 585 00b5 F6010000 		.4byte	.LASF16
 586 00b9 01       		.byte	0x1
 587 00ba E9       		.byte	0xe9
 588 00bb 00000000 		.4byte	.LFB5
 589 00bf 10000000 		.4byte	.LFE5-.LFB5
 590 00c3 01       		.uleb128 0x1
 591 00c4 9C       		.byte	0x9c
 592 00c5 08       		.uleb128 0x8
 593 00c6 D8010000 		.4byte	.LASF17
 594 00ca 01       		.byte	0x1
 595 00cb 9301     		.2byte	0x193
 596 00cd 00000000 		.4byte	.LFB6
 597 00d1 0C000000 		.4byte	.LFE6-.LFB6
 598 00d5 01       		.uleb128 0x1
 599 00d6 9C       		.byte	0x9c
 600 00d7 EA000000 		.4byte	0xea
 601 00db 09       		.uleb128 0x9
 602 00dc 63000000 		.4byte	.LASF19
 603 00e0 01       		.byte	0x1
 604 00e1 9301     		.2byte	0x193
 605 00e3 6B000000 		.4byte	0x6b
 606 00e7 01       		.uleb128 0x1
 607 00e8 50       		.byte	0x50
 608 00e9 00       		.byte	0
 609 00ea 0A       		.uleb128 0xa
 610 00eb 4F000000 		.4byte	.LASF25
 611 00ef 01       		.byte	0x1
 612 00f0 A901     		.2byte	0x1a9
 613 00f2 6B000000 		.4byte	0x6b
 614 00f6 00000000 		.4byte	.LFB7
 615 00fa 14000000 		.4byte	.LFE7-.LFB7
 616 00fe 01       		.uleb128 0x1
 617 00ff 9C       		.byte	0x9c
 618 0100 08       		.uleb128 0x8
 619 0101 EE000000 		.4byte	.LASF18
 620 0105 01       		.byte	0x1
 621 0106 E201     		.2byte	0x1e2
 622 0108 00000000 		.4byte	.LFB9
 623 010c 0C000000 		.4byte	.LFE9-.LFB9
 624 0110 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 28


 625 0111 9C       		.byte	0x9c
 626 0112 25010000 		.4byte	0x125
 627 0116 09       		.uleb128 0x9
 628 0117 2E000000 		.4byte	.LASF20
 629 011b 01       		.byte	0x1
 630 011c E201     		.2byte	0x1e2
 631 011e 6B000000 		.4byte	0x6b
 632 0122 01       		.uleb128 0x1
 633 0123 50       		.byte	0x50
 634 0124 00       		.byte	0
 635 0125 08       		.uleb128 0x8
 636 0126 90000000 		.4byte	.LASF21
 637 012a 01       		.byte	0x1
 638 012b 0402     		.2byte	0x204
 639 012d 00000000 		.4byte	.LFB10
 640 0131 0C000000 		.4byte	.LFE10-.LFB10
 641 0135 01       		.uleb128 0x1
 642 0136 9C       		.byte	0x9c
 643 0137 4A010000 		.4byte	0x14a
 644 013b 09       		.uleb128 0x9
 645 013c 2C030000 		.4byte	.LASF22
 646 0140 01       		.byte	0x1
 647 0141 0402     		.2byte	0x204
 648 0143 6B000000 		.4byte	0x6b
 649 0147 01       		.uleb128 0x1
 650 0148 50       		.byte	0x50
 651 0149 00       		.byte	0
 652 014a 08       		.uleb128 0x8
 653 014b 0F000000 		.4byte	.LASF23
 654 014f 01       		.byte	0x1
 655 0150 AC02     		.2byte	0x2ac
 656 0152 00000000 		.4byte	.LFB11
 657 0156 0C000000 		.4byte	.LFE11-.LFB11
 658 015a 01       		.uleb128 0x1
 659 015b 9C       		.byte	0x9c
 660 015c 6F010000 		.4byte	0x16f
 661 0160 09       		.uleb128 0x9
 662 0161 11020000 		.4byte	.LASF24
 663 0165 01       		.byte	0x1
 664 0166 AC02     		.2byte	0x2ac
 665 0168 6B000000 		.4byte	0x6b
 666 016c 01       		.uleb128 0x1
 667 016d 50       		.byte	0x50
 668 016e 00       		.byte	0
 669 016f 0A       		.uleb128 0xa
 670 0170 C5000000 		.4byte	.LASF26
 671 0174 01       		.byte	0x1
 672 0175 C702     		.2byte	0x2c7
 673 0177 6B000000 		.4byte	0x6b
 674 017b 00000000 		.4byte	.LFB12
 675 017f 0C000000 		.4byte	.LFE12-.LFB12
 676 0183 01       		.uleb128 0x1
 677 0184 9C       		.byte	0x9c
 678 0185 0B       		.uleb128 0xb
 679 0186 3C010000 		.4byte	.LASF41
 680 018a 01       		.byte	0x1
 681 018b E102     		.2byte	0x2e1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 29


 682 018d 6B000000 		.4byte	0x6b
 683 0191 00000000 		.4byte	.LFB13
 684 0195 0C000000 		.4byte	.LFE13-.LFB13
 685 0199 01       		.uleb128 0x1
 686 019a 9C       		.byte	0x9c
 687 019b AE010000 		.4byte	0x1ae
 688 019f 0C       		.uleb128 0xc
 689 01a0 BA010000 		.4byte	.LASF32
 690 01a4 01       		.byte	0x1
 691 01a5 E302     		.2byte	0x2e3
 692 01a7 6B000000 		.4byte	0x6b
 693 01ab 01       		.uleb128 0x1
 694 01ac 50       		.byte	0x50
 695 01ad 00       		.byte	0
 696 01ae 08       		.uleb128 0x8
 697 01af 34030000 		.4byte	.LASF27
 698 01b3 01       		.byte	0x1
 699 01b4 FD02     		.2byte	0x2fd
 700 01b6 00000000 		.4byte	.LFB14
 701 01ba 0C000000 		.4byte	.LFE14-.LFB14
 702 01be 01       		.uleb128 0x1
 703 01bf 9C       		.byte	0x9c
 704 01c0 D3010000 		.4byte	0x1d3
 705 01c4 09       		.uleb128 0x9
 706 01c5 BD000000 		.4byte	.LASF28
 707 01c9 01       		.byte	0x1
 708 01ca FD02     		.2byte	0x2fd
 709 01cc 6B000000 		.4byte	0x6b
 710 01d0 01       		.uleb128 0x1
 711 01d1 50       		.byte	0x50
 712 01d2 00       		.byte	0
 713 01d3 0A       		.uleb128 0xa
 714 01d4 51030000 		.4byte	.LASF29
 715 01d8 01       		.byte	0x1
 716 01d9 1603     		.2byte	0x316
 717 01db 6B000000 		.4byte	0x6b
 718 01df 00000000 		.4byte	.LFB15
 719 01e3 0C000000 		.4byte	.LFE15-.LFB15
 720 01e7 01       		.uleb128 0x1
 721 01e8 9C       		.byte	0x9c
 722 01e9 08       		.uleb128 0x8
 723 01ea C1010000 		.4byte	.LASF30
 724 01ee 01       		.byte	0x1
 725 01ef C501     		.2byte	0x1c5
 726 01f1 00000000 		.4byte	.LFB8
 727 01f5 12000000 		.4byte	.LFE8-.LFB8
 728 01f9 01       		.uleb128 0x1
 729 01fa 9C       		.byte	0x9c
 730 01fb 12020000 		.4byte	0x212
 731 01ff 0D       		.uleb128 0xd
 732 0200 08000000 		.4byte	.LVL6
 733 0204 D3010000 		.4byte	0x1d3
 734 0208 0D       		.uleb128 0xd
 735 0209 0C000000 		.4byte	.LVL7
 736 020d 6F010000 		.4byte	0x16f
 737 0211 00       		.byte	0
 738 0212 0E       		.uleb128 0xe
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 30


 739 0213 1F020000 		.4byte	.LASF31
 740 0217 01       		.byte	0x1
 741 0218 54       		.byte	0x54
 742 0219 00000000 		.4byte	.LFB3
 743 021d 50000000 		.4byte	.LFE3-.LFB3
 744 0221 01       		.uleb128 0x1
 745 0222 9C       		.byte	0x9c
 746 0223 AD020000 		.4byte	0x2ad
 747 0227 0F       		.uleb128 0xf
 748 0228 65030000 		.4byte	.LASF33
 749 022c 01       		.byte	0x1
 750 022d 57       		.byte	0x57
 751 022e 6B000000 		.4byte	0x6b
 752 0232 00000000 		.4byte	.LLST0
 753 0236 0F       		.uleb128 0xf
 754 0237 09030000 		.4byte	.LASF34
 755 023b 01       		.byte	0x1
 756 023c 5D       		.byte	0x5d
 757 023d 6B000000 		.4byte	0x6b
 758 0241 13000000 		.4byte	.LLST1
 759 0245 10       		.uleb128 0x10
 760 0246 20000000 		.4byte	.LVL10
 761 024a C5000000 		.4byte	0xc5
 762 024e 58020000 		.4byte	0x258
 763 0252 11       		.uleb128 0x11
 764 0253 01       		.uleb128 0x1
 765 0254 50       		.byte	0x50
 766 0255 01       		.uleb128 0x1
 767 0256 38       		.byte	0x38
 768 0257 00       		.byte	0
 769 0258 10       		.uleb128 0x10
 770 0259 26000000 		.4byte	.LVL11
 771 025d 00010000 		.4byte	0x100
 772 0261 6B020000 		.4byte	0x26b
 773 0265 11       		.uleb128 0x11
 774 0266 01       		.uleb128 0x1
 775 0267 50       		.byte	0x50
 776 0268 01       		.uleb128 0x1
 777 0269 38       		.byte	0x38
 778 026a 00       		.byte	0
 779 026b 10       		.uleb128 0x10
 780 026c 2C000000 		.4byte	.LVL12
 781 0270 25010000 		.4byte	0x125
 782 0274 7E020000 		.4byte	0x27e
 783 0278 11       		.uleb128 0x11
 784 0279 01       		.uleb128 0x1
 785 027a 50       		.byte	0x50
 786 027b 01       		.uleb128 0x1
 787 027c 34       		.byte	0x34
 788 027d 00       		.byte	0
 789 027e 10       		.uleb128 0x10
 790 027f 32000000 		.4byte	.LVL13
 791 0283 4A010000 		.4byte	0x14a
 792 0287 91020000 		.4byte	0x291
 793 028b 11       		.uleb128 0x11
 794 028c 01       		.uleb128 0x1
 795 028d 50       		.byte	0x50
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 31


 796 028e 01       		.uleb128 0x1
 797 028f 30       		.byte	0x30
 798 0290 00       		.byte	0
 799 0291 0D       		.uleb128 0xd
 800 0292 36000000 		.4byte	.LVL14
 801 0296 12030000 		.4byte	0x312
 802 029a 0D       		.uleb128 0xd
 803 029b 42000000 		.4byte	.LVL15
 804 029f 1D030000 		.4byte	0x31d
 805 02a3 0D       		.uleb128 0xd
 806 02a4 46000000 		.4byte	.LVL16
 807 02a8 E9010000 		.4byte	0x1e9
 808 02ac 00       		.byte	0
 809 02ad 0E       		.uleb128 0xe
 810 02ae E0000000 		.4byte	.LASF35
 811 02b2 01       		.byte	0x1
 812 02b3 37       		.byte	0x37
 813 02b4 00000000 		.4byte	.LFB2
 814 02b8 20000000 		.4byte	.LFE2-.LFB2
 815 02bc 01       		.uleb128 0x1
 816 02bd 9C       		.byte	0x9c
 817 02be D5020000 		.4byte	0x2d5
 818 02c2 0D       		.uleb128 0xd
 819 02c3 0E000000 		.4byte	.LVL17
 820 02c7 12020000 		.4byte	0x212
 821 02cb 0D       		.uleb128 0xd
 822 02cc 18000000 		.4byte	.LVL18
 823 02d0 A3000000 		.4byte	0xa3
 824 02d4 00       		.byte	0
 825 02d5 0A       		.uleb128 0xa
 826 02d6 E7020000 		.4byte	.LASF36
 827 02da 01       		.byte	0x1
 828 02db 3003     		.2byte	0x330
 829 02dd 6B000000 		.4byte	0x6b
 830 02e1 00000000 		.4byte	.LFB16
 831 02e5 0C000000 		.4byte	.LFE16-.LFB16
 832 02e9 01       		.uleb128 0x1
 833 02ea 9C       		.byte	0x9c
 834 02eb 0A       		.uleb128 0xa
 835 02ec 12010000 		.4byte	.LASF37
 836 02f0 01       		.byte	0x1
 837 02f1 7403     		.2byte	0x374
 838 02f3 6B000000 		.4byte	0x6b
 839 02f7 00000000 		.4byte	.LFB17
 840 02fb 0C000000 		.4byte	.LFE17-.LFB17
 841 02ff 01       		.uleb128 0x1
 842 0300 9C       		.byte	0x9c
 843 0301 12       		.uleb128 0x12
 844 0302 02010000 		.4byte	.LASF42
 845 0306 01       		.byte	0x1
 846 0307 20       		.byte	0x20
 847 0308 6B000000 		.4byte	0x6b
 848 030c 05       		.uleb128 0x5
 849 030d 03       		.byte	0x3
 850 030e 00000000 		.4byte	PWMbeep_initVar
 851 0312 13       		.uleb128 0x13
 852 0313 25010000 		.4byte	.LASF43
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 32


 853 0317 03       		.byte	0x3
 854 0318 5E       		.byte	0x5e
 855 0319 6B000000 		.4byte	0x6b
 856 031d 14       		.uleb128 0x14
 857 031e 65010000 		.4byte	.LASF44
 858 0322 03       		.byte	0x3
 859 0323 5F       		.byte	0x5f
 860 0324 15       		.uleb128 0x15
 861 0325 6B000000 		.4byte	0x6b
 862 0329 00       		.byte	0
 863 032a 00       		.byte	0
 864              		.section	.debug_abbrev,"",%progbits
 865              	.Ldebug_abbrev0:
 866 0000 01       		.uleb128 0x1
 867 0001 11       		.uleb128 0x11
 868 0002 01       		.byte	0x1
 869 0003 25       		.uleb128 0x25
 870 0004 0E       		.uleb128 0xe
 871 0005 13       		.uleb128 0x13
 872 0006 0B       		.uleb128 0xb
 873 0007 03       		.uleb128 0x3
 874 0008 0E       		.uleb128 0xe
 875 0009 1B       		.uleb128 0x1b
 876 000a 0E       		.uleb128 0xe
 877 000b 55       		.uleb128 0x55
 878 000c 17       		.uleb128 0x17
 879 000d 11       		.uleb128 0x11
 880 000e 01       		.uleb128 0x1
 881 000f 10       		.uleb128 0x10
 882 0010 17       		.uleb128 0x17
 883 0011 00       		.byte	0
 884 0012 00       		.byte	0
 885 0013 02       		.uleb128 0x2
 886 0014 24       		.uleb128 0x24
 887 0015 00       		.byte	0
 888 0016 0B       		.uleb128 0xb
 889 0017 0B       		.uleb128 0xb
 890 0018 3E       		.uleb128 0x3e
 891 0019 0B       		.uleb128 0xb
 892 001a 03       		.uleb128 0x3
 893 001b 0E       		.uleb128 0xe
 894 001c 00       		.byte	0
 895 001d 00       		.byte	0
 896 001e 03       		.uleb128 0x3
 897 001f 24       		.uleb128 0x24
 898 0020 00       		.byte	0
 899 0021 0B       		.uleb128 0xb
 900 0022 0B       		.uleb128 0xb
 901 0023 3E       		.uleb128 0x3e
 902 0024 0B       		.uleb128 0xb
 903 0025 03       		.uleb128 0x3
 904 0026 08       		.uleb128 0x8
 905 0027 00       		.byte	0
 906 0028 00       		.byte	0
 907 0029 04       		.uleb128 0x4
 908 002a 16       		.uleb128 0x16
 909 002b 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 33


 910 002c 03       		.uleb128 0x3
 911 002d 0E       		.uleb128 0xe
 912 002e 3A       		.uleb128 0x3a
 913 002f 0B       		.uleb128 0xb
 914 0030 3B       		.uleb128 0x3b
 915 0031 0B       		.uleb128 0xb
 916 0032 49       		.uleb128 0x49
 917 0033 13       		.uleb128 0x13
 918 0034 00       		.byte	0
 919 0035 00       		.byte	0
 920 0036 05       		.uleb128 0x5
 921 0037 16       		.uleb128 0x16
 922 0038 00       		.byte	0
 923 0039 03       		.uleb128 0x3
 924 003a 0E       		.uleb128 0xe
 925 003b 3A       		.uleb128 0x3a
 926 003c 0B       		.uleb128 0xb
 927 003d 3B       		.uleb128 0x3b
 928 003e 05       		.uleb128 0x5
 929 003f 49       		.uleb128 0x49
 930 0040 13       		.uleb128 0x13
 931 0041 00       		.byte	0
 932 0042 00       		.byte	0
 933 0043 06       		.uleb128 0x6
 934 0044 35       		.uleb128 0x35
 935 0045 00       		.byte	0
 936 0046 49       		.uleb128 0x49
 937 0047 13       		.uleb128 0x13
 938 0048 00       		.byte	0
 939 0049 00       		.byte	0
 940 004a 07       		.uleb128 0x7
 941 004b 2E       		.uleb128 0x2e
 942 004c 00       		.byte	0
 943 004d 3F       		.uleb128 0x3f
 944 004e 19       		.uleb128 0x19
 945 004f 03       		.uleb128 0x3
 946 0050 0E       		.uleb128 0xe
 947 0051 3A       		.uleb128 0x3a
 948 0052 0B       		.uleb128 0xb
 949 0053 3B       		.uleb128 0x3b
 950 0054 0B       		.uleb128 0xb
 951 0055 27       		.uleb128 0x27
 952 0056 19       		.uleb128 0x19
 953 0057 11       		.uleb128 0x11
 954 0058 01       		.uleb128 0x1
 955 0059 12       		.uleb128 0x12
 956 005a 06       		.uleb128 0x6
 957 005b 40       		.uleb128 0x40
 958 005c 18       		.uleb128 0x18
 959 005d 9742     		.uleb128 0x2117
 960 005f 19       		.uleb128 0x19
 961 0060 00       		.byte	0
 962 0061 00       		.byte	0
 963 0062 08       		.uleb128 0x8
 964 0063 2E       		.uleb128 0x2e
 965 0064 01       		.byte	0x1
 966 0065 3F       		.uleb128 0x3f
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 34


 967 0066 19       		.uleb128 0x19
 968 0067 03       		.uleb128 0x3
 969 0068 0E       		.uleb128 0xe
 970 0069 3A       		.uleb128 0x3a
 971 006a 0B       		.uleb128 0xb
 972 006b 3B       		.uleb128 0x3b
 973 006c 05       		.uleb128 0x5
 974 006d 27       		.uleb128 0x27
 975 006e 19       		.uleb128 0x19
 976 006f 11       		.uleb128 0x11
 977 0070 01       		.uleb128 0x1
 978 0071 12       		.uleb128 0x12
 979 0072 06       		.uleb128 0x6
 980 0073 40       		.uleb128 0x40
 981 0074 18       		.uleb128 0x18
 982 0075 9742     		.uleb128 0x2117
 983 0077 19       		.uleb128 0x19
 984 0078 01       		.uleb128 0x1
 985 0079 13       		.uleb128 0x13
 986 007a 00       		.byte	0
 987 007b 00       		.byte	0
 988 007c 09       		.uleb128 0x9
 989 007d 05       		.uleb128 0x5
 990 007e 00       		.byte	0
 991 007f 03       		.uleb128 0x3
 992 0080 0E       		.uleb128 0xe
 993 0081 3A       		.uleb128 0x3a
 994 0082 0B       		.uleb128 0xb
 995 0083 3B       		.uleb128 0x3b
 996 0084 05       		.uleb128 0x5
 997 0085 49       		.uleb128 0x49
 998 0086 13       		.uleb128 0x13
 999 0087 02       		.uleb128 0x2
 1000 0088 18       		.uleb128 0x18
 1001 0089 00       		.byte	0
 1002 008a 00       		.byte	0
 1003 008b 0A       		.uleb128 0xa
 1004 008c 2E       		.uleb128 0x2e
 1005 008d 00       		.byte	0
 1006 008e 3F       		.uleb128 0x3f
 1007 008f 19       		.uleb128 0x19
 1008 0090 03       		.uleb128 0x3
 1009 0091 0E       		.uleb128 0xe
 1010 0092 3A       		.uleb128 0x3a
 1011 0093 0B       		.uleb128 0xb
 1012 0094 3B       		.uleb128 0x3b
 1013 0095 05       		.uleb128 0x5
 1014 0096 27       		.uleb128 0x27
 1015 0097 19       		.uleb128 0x19
 1016 0098 49       		.uleb128 0x49
 1017 0099 13       		.uleb128 0x13
 1018 009a 11       		.uleb128 0x11
 1019 009b 01       		.uleb128 0x1
 1020 009c 12       		.uleb128 0x12
 1021 009d 06       		.uleb128 0x6
 1022 009e 40       		.uleb128 0x40
 1023 009f 18       		.uleb128 0x18
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 35


 1024 00a0 9742     		.uleb128 0x2117
 1025 00a2 19       		.uleb128 0x19
 1026 00a3 00       		.byte	0
 1027 00a4 00       		.byte	0
 1028 00a5 0B       		.uleb128 0xb
 1029 00a6 2E       		.uleb128 0x2e
 1030 00a7 01       		.byte	0x1
 1031 00a8 3F       		.uleb128 0x3f
 1032 00a9 19       		.uleb128 0x19
 1033 00aa 03       		.uleb128 0x3
 1034 00ab 0E       		.uleb128 0xe
 1035 00ac 3A       		.uleb128 0x3a
 1036 00ad 0B       		.uleb128 0xb
 1037 00ae 3B       		.uleb128 0x3b
 1038 00af 05       		.uleb128 0x5
 1039 00b0 27       		.uleb128 0x27
 1040 00b1 19       		.uleb128 0x19
 1041 00b2 49       		.uleb128 0x49
 1042 00b3 13       		.uleb128 0x13
 1043 00b4 11       		.uleb128 0x11
 1044 00b5 01       		.uleb128 0x1
 1045 00b6 12       		.uleb128 0x12
 1046 00b7 06       		.uleb128 0x6
 1047 00b8 40       		.uleb128 0x40
 1048 00b9 18       		.uleb128 0x18
 1049 00ba 9742     		.uleb128 0x2117
 1050 00bc 19       		.uleb128 0x19
 1051 00bd 01       		.uleb128 0x1
 1052 00be 13       		.uleb128 0x13
 1053 00bf 00       		.byte	0
 1054 00c0 00       		.byte	0
 1055 00c1 0C       		.uleb128 0xc
 1056 00c2 34       		.uleb128 0x34
 1057 00c3 00       		.byte	0
 1058 00c4 03       		.uleb128 0x3
 1059 00c5 0E       		.uleb128 0xe
 1060 00c6 3A       		.uleb128 0x3a
 1061 00c7 0B       		.uleb128 0xb
 1062 00c8 3B       		.uleb128 0x3b
 1063 00c9 05       		.uleb128 0x5
 1064 00ca 49       		.uleb128 0x49
 1065 00cb 13       		.uleb128 0x13
 1066 00cc 02       		.uleb128 0x2
 1067 00cd 18       		.uleb128 0x18
 1068 00ce 00       		.byte	0
 1069 00cf 00       		.byte	0
 1070 00d0 0D       		.uleb128 0xd
 1071 00d1 898201   		.uleb128 0x4109
 1072 00d4 00       		.byte	0
 1073 00d5 11       		.uleb128 0x11
 1074 00d6 01       		.uleb128 0x1
 1075 00d7 31       		.uleb128 0x31
 1076 00d8 13       		.uleb128 0x13
 1077 00d9 00       		.byte	0
 1078 00da 00       		.byte	0
 1079 00db 0E       		.uleb128 0xe
 1080 00dc 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 36


 1081 00dd 01       		.byte	0x1
 1082 00de 3F       		.uleb128 0x3f
 1083 00df 19       		.uleb128 0x19
 1084 00e0 03       		.uleb128 0x3
 1085 00e1 0E       		.uleb128 0xe
 1086 00e2 3A       		.uleb128 0x3a
 1087 00e3 0B       		.uleb128 0xb
 1088 00e4 3B       		.uleb128 0x3b
 1089 00e5 0B       		.uleb128 0xb
 1090 00e6 27       		.uleb128 0x27
 1091 00e7 19       		.uleb128 0x19
 1092 00e8 11       		.uleb128 0x11
 1093 00e9 01       		.uleb128 0x1
 1094 00ea 12       		.uleb128 0x12
 1095 00eb 06       		.uleb128 0x6
 1096 00ec 40       		.uleb128 0x40
 1097 00ed 18       		.uleb128 0x18
 1098 00ee 9742     		.uleb128 0x2117
 1099 00f0 19       		.uleb128 0x19
 1100 00f1 01       		.uleb128 0x1
 1101 00f2 13       		.uleb128 0x13
 1102 00f3 00       		.byte	0
 1103 00f4 00       		.byte	0
 1104 00f5 0F       		.uleb128 0xf
 1105 00f6 34       		.uleb128 0x34
 1106 00f7 00       		.byte	0
 1107 00f8 03       		.uleb128 0x3
 1108 00f9 0E       		.uleb128 0xe
 1109 00fa 3A       		.uleb128 0x3a
 1110 00fb 0B       		.uleb128 0xb
 1111 00fc 3B       		.uleb128 0x3b
 1112 00fd 0B       		.uleb128 0xb
 1113 00fe 49       		.uleb128 0x49
 1114 00ff 13       		.uleb128 0x13
 1115 0100 02       		.uleb128 0x2
 1116 0101 17       		.uleb128 0x17
 1117 0102 00       		.byte	0
 1118 0103 00       		.byte	0
 1119 0104 10       		.uleb128 0x10
 1120 0105 898201   		.uleb128 0x4109
 1121 0108 01       		.byte	0x1
 1122 0109 11       		.uleb128 0x11
 1123 010a 01       		.uleb128 0x1
 1124 010b 31       		.uleb128 0x31
 1125 010c 13       		.uleb128 0x13
 1126 010d 01       		.uleb128 0x1
 1127 010e 13       		.uleb128 0x13
 1128 010f 00       		.byte	0
 1129 0110 00       		.byte	0
 1130 0111 11       		.uleb128 0x11
 1131 0112 8A8201   		.uleb128 0x410a
 1132 0115 00       		.byte	0
 1133 0116 02       		.uleb128 0x2
 1134 0117 18       		.uleb128 0x18
 1135 0118 9142     		.uleb128 0x2111
 1136 011a 18       		.uleb128 0x18
 1137 011b 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 37


 1138 011c 00       		.byte	0
 1139 011d 12       		.uleb128 0x12
 1140 011e 34       		.uleb128 0x34
 1141 011f 00       		.byte	0
 1142 0120 03       		.uleb128 0x3
 1143 0121 0E       		.uleb128 0xe
 1144 0122 3A       		.uleb128 0x3a
 1145 0123 0B       		.uleb128 0xb
 1146 0124 3B       		.uleb128 0x3b
 1147 0125 0B       		.uleb128 0xb
 1148 0126 49       		.uleb128 0x49
 1149 0127 13       		.uleb128 0x13
 1150 0128 3F       		.uleb128 0x3f
 1151 0129 19       		.uleb128 0x19
 1152 012a 02       		.uleb128 0x2
 1153 012b 18       		.uleb128 0x18
 1154 012c 00       		.byte	0
 1155 012d 00       		.byte	0
 1156 012e 13       		.uleb128 0x13
 1157 012f 2E       		.uleb128 0x2e
 1158 0130 00       		.byte	0
 1159 0131 3F       		.uleb128 0x3f
 1160 0132 19       		.uleb128 0x19
 1161 0133 03       		.uleb128 0x3
 1162 0134 0E       		.uleb128 0xe
 1163 0135 3A       		.uleb128 0x3a
 1164 0136 0B       		.uleb128 0xb
 1165 0137 3B       		.uleb128 0x3b
 1166 0138 0B       		.uleb128 0xb
 1167 0139 27       		.uleb128 0x27
 1168 013a 19       		.uleb128 0x19
 1169 013b 49       		.uleb128 0x49
 1170 013c 13       		.uleb128 0x13
 1171 013d 3C       		.uleb128 0x3c
 1172 013e 19       		.uleb128 0x19
 1173 013f 00       		.byte	0
 1174 0140 00       		.byte	0
 1175 0141 14       		.uleb128 0x14
 1176 0142 2E       		.uleb128 0x2e
 1177 0143 01       		.byte	0x1
 1178 0144 3F       		.uleb128 0x3f
 1179 0145 19       		.uleb128 0x19
 1180 0146 03       		.uleb128 0x3
 1181 0147 0E       		.uleb128 0xe
 1182 0148 3A       		.uleb128 0x3a
 1183 0149 0B       		.uleb128 0xb
 1184 014a 3B       		.uleb128 0x3b
 1185 014b 0B       		.uleb128 0xb
 1186 014c 27       		.uleb128 0x27
 1187 014d 19       		.uleb128 0x19
 1188 014e 3C       		.uleb128 0x3c
 1189 014f 19       		.uleb128 0x19
 1190 0150 00       		.byte	0
 1191 0151 00       		.byte	0
 1192 0152 15       		.uleb128 0x15
 1193 0153 05       		.uleb128 0x5
 1194 0154 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 38


 1195 0155 49       		.uleb128 0x49
 1196 0156 13       		.uleb128 0x13
 1197 0157 00       		.byte	0
 1198 0158 00       		.byte	0
 1199 0159 00       		.byte	0
 1200              		.section	.debug_loc,"",%progbits
 1201              	.Ldebug_loc0:
 1202              	.LLST0:
 1203 0000 0A000000 		.4byte	.LVL8
 1204 0004 0E000000 		.4byte	.LVL9
 1205 0008 0100     		.2byte	0x1
 1206 000a 53       		.byte	0x53
 1207 000b 00000000 		.4byte	0
 1208 000f 00000000 		.4byte	0
 1209              	.LLST1:
 1210 0013 36000000 		.4byte	.LVL14
 1211 0017 41000000 		.4byte	.LVL15-1
 1212 001b 0100     		.2byte	0x1
 1213 001d 50       		.byte	0x50
 1214 001e 00000000 		.4byte	0
 1215 0022 00000000 		.4byte	0
 1216              		.section	.debug_aranges,"",%progbits
 1217 0000 94000000 		.4byte	0x94
 1218 0004 0200     		.2byte	0x2
 1219 0006 00000000 		.4byte	.Ldebug_info0
 1220 000a 04       		.byte	0x4
 1221 000b 00       		.byte	0
 1222 000c 0000     		.2byte	0
 1223 000e 0000     		.2byte	0
 1224 0010 00000000 		.4byte	.LFB4
 1225 0014 10000000 		.4byte	.LFE4-.LFB4
 1226 0018 00000000 		.4byte	.LFB5
 1227 001c 10000000 		.4byte	.LFE5-.LFB5
 1228 0020 00000000 		.4byte	.LFB6
 1229 0024 0C000000 		.4byte	.LFE6-.LFB6
 1230 0028 00000000 		.4byte	.LFB7
 1231 002c 14000000 		.4byte	.LFE7-.LFB7
 1232 0030 00000000 		.4byte	.LFB9
 1233 0034 0C000000 		.4byte	.LFE9-.LFB9
 1234 0038 00000000 		.4byte	.LFB10
 1235 003c 0C000000 		.4byte	.LFE10-.LFB10
 1236 0040 00000000 		.4byte	.LFB11
 1237 0044 0C000000 		.4byte	.LFE11-.LFB11
 1238 0048 00000000 		.4byte	.LFB12
 1239 004c 0C000000 		.4byte	.LFE12-.LFB12
 1240 0050 00000000 		.4byte	.LFB13
 1241 0054 0C000000 		.4byte	.LFE13-.LFB13
 1242 0058 00000000 		.4byte	.LFB14
 1243 005c 0C000000 		.4byte	.LFE14-.LFB14
 1244 0060 00000000 		.4byte	.LFB15
 1245 0064 0C000000 		.4byte	.LFE15-.LFB15
 1246 0068 00000000 		.4byte	.LFB8
 1247 006c 12000000 		.4byte	.LFE8-.LFB8
 1248 0070 00000000 		.4byte	.LFB3
 1249 0074 50000000 		.4byte	.LFE3-.LFB3
 1250 0078 00000000 		.4byte	.LFB2
 1251 007c 20000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 39


 1252 0080 00000000 		.4byte	.LFB16
 1253 0084 0C000000 		.4byte	.LFE16-.LFB16
 1254 0088 00000000 		.4byte	.LFB17
 1255 008c 0C000000 		.4byte	.LFE17-.LFB17
 1256 0090 00000000 		.4byte	0
 1257 0094 00000000 		.4byte	0
 1258              		.section	.debug_ranges,"",%progbits
 1259              	.Ldebug_ranges0:
 1260 0000 00000000 		.4byte	.LFB4
 1261 0004 10000000 		.4byte	.LFE4
 1262 0008 00000000 		.4byte	.LFB5
 1263 000c 10000000 		.4byte	.LFE5
 1264 0010 00000000 		.4byte	.LFB6
 1265 0014 0C000000 		.4byte	.LFE6
 1266 0018 00000000 		.4byte	.LFB7
 1267 001c 14000000 		.4byte	.LFE7
 1268 0020 00000000 		.4byte	.LFB9
 1269 0024 0C000000 		.4byte	.LFE9
 1270 0028 00000000 		.4byte	.LFB10
 1271 002c 0C000000 		.4byte	.LFE10
 1272 0030 00000000 		.4byte	.LFB11
 1273 0034 0C000000 		.4byte	.LFE11
 1274 0038 00000000 		.4byte	.LFB12
 1275 003c 0C000000 		.4byte	.LFE12
 1276 0040 00000000 		.4byte	.LFB13
 1277 0044 0C000000 		.4byte	.LFE13
 1278 0048 00000000 		.4byte	.LFB14
 1279 004c 0C000000 		.4byte	.LFE14
 1280 0050 00000000 		.4byte	.LFB15
 1281 0054 0C000000 		.4byte	.LFE15
 1282 0058 00000000 		.4byte	.LFB8
 1283 005c 12000000 		.4byte	.LFE8
 1284 0060 00000000 		.4byte	.LFB3
 1285 0064 50000000 		.4byte	.LFE3
 1286 0068 00000000 		.4byte	.LFB2
 1287 006c 20000000 		.4byte	.LFE2
 1288 0070 00000000 		.4byte	.LFB16
 1289 0074 0C000000 		.4byte	.LFE16
 1290 0078 00000000 		.4byte	.LFB17
 1291 007c 0C000000 		.4byte	.LFE17
 1292 0080 00000000 		.4byte	0
 1293 0084 00000000 		.4byte	0
 1294              		.section	.debug_line,"",%progbits
 1295              	.Ldebug_line0:
 1296 0000 90010000 		.section	.debug_str,"MS",%progbits,1
 1296      02005100 
 1296      00000201 
 1296      FB0E0D00 
 1296      01010101 
 1297              	.LASF15:
 1298 0000 50574D62 		.ascii	"PWMbeep_Enable\000"
 1298      6565705F 
 1298      456E6162 
 1298      6C6500
 1299              	.LASF23:
 1300 000f 50574D62 		.ascii	"PWMbeep_SetInterruptMode\000"
 1300      6565705F 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 40


 1300      53657449 
 1300      6E746572 
 1300      72757074 
 1301              	.LASF9:
 1302 0028 666C6F61 		.ascii	"float\000"
 1302      7400
 1303              	.LASF20:
 1304 002e 70657269 		.ascii	"period\000"
 1304      6F6400
 1305              	.LASF3:
 1306 0035 73686F72 		.ascii	"short unsigned int\000"
 1306      7420756E 
 1306      7369676E 
 1306      65642069 
 1306      6E7400
 1307              	.LASF10:
 1308 0048 646F7562 		.ascii	"double\000"
 1308      6C6500
 1309              	.LASF25:
 1310 004f 50574D62 		.ascii	"PWMbeep_ReadCounter\000"
 1310      6565705F 
 1310      52656164 
 1310      436F756E 
 1310      74657200 
 1311              	.LASF19:
 1312 0063 636F756E 		.ascii	"counter\000"
 1312      74657200 
 1313              	.LASF7:
 1314 006b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1314      206C6F6E 
 1314      6720756E 
 1314      7369676E 
 1314      65642069 
 1315              	.LASF1:
 1316 0082 756E7369 		.ascii	"unsigned char\000"
 1316      676E6564 
 1316      20636861 
 1316      7200
 1317              	.LASF21:
 1318 0090 50574D62 		.ascii	"PWMbeep_WriteCompare\000"
 1318      6565705F 
 1318      57726974 
 1318      65436F6D 
 1318      70617265 
 1319              	.LASF5:
 1320 00a5 6C6F6E67 		.ascii	"long unsigned int\000"
 1320      20756E73 
 1320      69676E65 
 1320      6420696E 
 1320      7400
 1321              	.LASF12:
 1322 00b7 75696E74 		.ascii	"uint8\000"
 1322      3800
 1323              	.LASF28:
 1324 00bd 636F6E74 		.ascii	"control\000"
 1324      726F6C00 
 1325              	.LASF26:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 41


 1326 00c5 50574D62 		.ascii	"PWMbeep_ReadStatusRegister\000"
 1326      6565705F 
 1326      52656164 
 1326      53746174 
 1326      75735265 
 1327              	.LASF35:
 1328 00e0 50574D62 		.ascii	"PWMbeep_Start\000"
 1328      6565705F 
 1328      53746172 
 1328      7400
 1329              	.LASF18:
 1330 00ee 50574D62 		.ascii	"PWMbeep_WritePeriod\000"
 1330      6565705F 
 1330      57726974 
 1330      65506572 
 1330      696F6400 
 1331              	.LASF42:
 1332 0102 50574D62 		.ascii	"PWMbeep_initVar\000"
 1332      6565705F 
 1332      696E6974 
 1332      56617200 
 1333              	.LASF37:
 1334 0112 50574D62 		.ascii	"PWMbeep_ReadPeriod\000"
 1334      6565705F 
 1334      52656164 
 1334      50657269 
 1334      6F6400
 1335              	.LASF43:
 1336 0125 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1336      74657243 
 1336      72697469 
 1336      63616C53 
 1336      65637469 
 1337              	.LASF41:
 1338 013c 50574D62 		.ascii	"PWMbeep_ReadControlRegister\000"
 1338      6565705F 
 1338      52656164 
 1338      436F6E74 
 1338      726F6C52 
 1339              	.LASF8:
 1340 0158 756E7369 		.ascii	"unsigned int\000"
 1340      676E6564 
 1340      20696E74 
 1340      00
 1341              	.LASF44:
 1342 0165 43794578 		.ascii	"CyExitCriticalSection\000"
 1342      69744372 
 1342      69746963 
 1342      616C5365 
 1342      6374696F 
 1343              	.LASF40:
 1344 017b 433A5C55 		.ascii	"C:\\Users\\Kevin\\Documents\\GitHub\\EZtimer\\Firmw"
 1344      73657273 
 1344      5C4B6576 
 1344      696E5C44 
 1344      6F63756D 
 1345 01a8 6172655C 		.ascii	"are\\EZtimer.cydsn\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 42


 1345      455A7469 
 1345      6D65722E 
 1345      63796473 
 1345      6E00
 1346              	.LASF32:
 1347 01ba 72657375 		.ascii	"result\000"
 1347      6C7400
 1348              	.LASF30:
 1349 01c1 50574D62 		.ascii	"PWMbeep_ClearFIFO\000"
 1349      6565705F 
 1349      436C6561 
 1349      72464946 
 1349      4F00
 1350              	.LASF13:
 1351 01d3 72656738 		.ascii	"reg8\000"
 1351      00
 1352              	.LASF17:
 1353 01d8 50574D62 		.ascii	"PWMbeep_WriteCounter\000"
 1353      6565705F 
 1353      57726974 
 1353      65436F75 
 1353      6E746572 
 1354              	.LASF14:
 1355 01ed 73697A65 		.ascii	"sizetype\000"
 1355      74797065 
 1355      00
 1356              	.LASF16:
 1357 01f6 50574D62 		.ascii	"PWMbeep_Stop\000"
 1357      6565705F 
 1357      53746F70 
 1357      00
 1358              	.LASF6:
 1359 0203 6C6F6E67 		.ascii	"long long int\000"
 1359      206C6F6E 
 1359      6720696E 
 1359      7400
 1360              	.LASF24:
 1361 0211 696E7465 		.ascii	"interruptMode\000"
 1361      72727570 
 1361      744D6F64 
 1361      6500
 1362              	.LASF31:
 1363 021f 50574D62 		.ascii	"PWMbeep_Init\000"
 1363      6565705F 
 1363      496E6974 
 1363      00
 1364              	.LASF38:
 1365 022c 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1365      4320342E 
 1365      392E3320 
 1365      32303135 
 1365      30333033 
 1366 025f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1366      20726576 
 1366      6973696F 
 1366      6E203232 
 1366      31323230 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 43


 1367 0292 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1367      66756E63 
 1367      74696F6E 
 1367      2D736563 
 1367      74696F6E 
 1368              	.LASF39:
 1369 02ba 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWMbeep.c\000"
 1369      6E657261 
 1369      7465645F 
 1369      536F7572 
 1369      63655C50 
 1370              	.LASF2:
 1371 02dd 73686F72 		.ascii	"short int\000"
 1371      7420696E 
 1371      7400
 1372              	.LASF36:
 1373 02e7 50574D62 		.ascii	"PWMbeep_ReadCompare\000"
 1373      6565705F 
 1373      52656164 
 1373      436F6D70 
 1373      61726500 
 1374              	.LASF4:
 1375 02fb 6C6F6E67 		.ascii	"long int\000"
 1375      20696E74 
 1375      00
 1376              	.LASF11:
 1377 0304 63686172 		.ascii	"char\000"
 1377      00
 1378              	.LASF34:
 1379 0309 50574D62 		.ascii	"PWMbeep_interruptState\000"
 1379      6565705F 
 1379      696E7465 
 1379      72727570 
 1379      74537461 
 1380              	.LASF0:
 1381 0320 7369676E 		.ascii	"signed char\000"
 1381      65642063 
 1381      68617200 
 1382              	.LASF22:
 1383 032c 636F6D70 		.ascii	"compare\000"
 1383      61726500 
 1384              	.LASF27:
 1385 0334 50574D62 		.ascii	"PWMbeep_WriteControlRegister\000"
 1385      6565705F 
 1385      57726974 
 1385      65436F6E 
 1385      74726F6C 
 1386              	.LASF29:
 1387 0351 50574D62 		.ascii	"PWMbeep_ReadCapture\000"
 1387      6565705F 
 1387      52656164 
 1387      43617074 
 1387      75726500 
 1388              	.LASF33:
 1389 0365 6374726C 		.ascii	"ctrl\000"
 1389      00
 1390              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\cch6e4ca.s 			page 44


