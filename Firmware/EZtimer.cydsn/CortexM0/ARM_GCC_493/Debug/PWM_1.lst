ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 1
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.PWM_1_Enable,"ax",%progbits
  18              		.align	2
  19              		.global	PWM_1_Enable
  20              		.code	16
  21              		.thumb_func
  22              		.type	PWM_1_Enable, %function
  23              	PWM_1_Enable:
  24              	.LFB4:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\PWM_1.c"
   1:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:.\Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:.\Generated_Source\PSoC4/PWM_1.c **** *
   5:.\Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:.\Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:.\Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:.\Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:.\Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:.\Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:.\Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:.\Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:.\Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:.\Generated_Source\PSoC4/PWM_1.c **** *
  15:.\Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:.\Generated_Source\PSoC4/PWM_1.c **** *
  17:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:.\Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC4/PWM_1.c **** 
  24:.\Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:.\Generated_Source\PSoC4/PWM_1.c **** 
  26:.\Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
  27:.\Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:.\Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:.\Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:.\Generated_Source\PSoC4/PWM_1.c **** 
  32:.\Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 2


  33:.\Generated_Source\PSoC4/PWM_1.c **** 
  34:.\Generated_Source\PSoC4/PWM_1.c **** 
  35:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:.\Generated_Source\PSoC4/PWM_1.c **** *
  39:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:.\Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:.\Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:.\Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:.\Generated_Source\PSoC4/PWM_1.c **** *
  44:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  46:.\Generated_Source\PSoC4/PWM_1.c **** *
  47:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  49:.\Generated_Source\PSoC4/PWM_1.c **** *
  50:.\Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:.\Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:.\Generated_Source\PSoC4/PWM_1.c **** *
  54:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:.\Generated_Source\PSoC4/PWM_1.c **** {
  57:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:.\Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  59:.\Generated_Source\PSoC4/PWM_1.c ****     {
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  61:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  62:.\Generated_Source\PSoC4/PWM_1.c ****     }
  63:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
  64:.\Generated_Source\PSoC4/PWM_1.c **** 
  65:.\Generated_Source\PSoC4/PWM_1.c **** }
  66:.\Generated_Source\PSoC4/PWM_1.c **** 
  67:.\Generated_Source\PSoC4/PWM_1.c **** 
  68:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:.\Generated_Source\PSoC4/PWM_1.c **** *
  72:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:.\Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:.\Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:.\Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:.\Generated_Source\PSoC4/PWM_1.c **** *
  77:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  79:.\Generated_Source\PSoC4/PWM_1.c **** *
  80:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:.\Generated_Source\PSoC4/PWM_1.c **** *  None
  82:.\Generated_Source\PSoC4/PWM_1.c **** *
  83:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:.\Generated_Source\PSoC4/PWM_1.c **** {
  86:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
  89:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 3


  90:.\Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:.\Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:.\Generated_Source\PSoC4/PWM_1.c **** 
  97:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:.\Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:.\Generated_Source\PSoC4/PWM_1.c **** 
 104:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:.\Generated_Source\PSoC4/PWM_1.c **** 
 107:.\Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:.\Generated_Source\PSoC4/PWM_1.c **** 
 111:.\Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:.\Generated_Source\PSoC4/PWM_1.c **** 
 115:.\Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:.\Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
 118:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
 120:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:.\Generated_Source\PSoC4/PWM_1.c **** 
 123:.\Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 127:.\Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:.\Generated_Source\PSoC4/PWM_1.c **** 
 133:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 134:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:.\Generated_Source\PSoC4/PWM_1.c **** 
 136:.\Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 137:.\Generated_Source\PSoC4/PWM_1.c **** 
 138:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 142:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 143:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:.\Generated_Source\PSoC4/PWM_1.c **** 
 145:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 4


 147:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:.\Generated_Source\PSoC4/PWM_1.c **** 
 149:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:.\Generated_Source\PSoC4/PWM_1.c **** 
 153:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 155:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:.\Generated_Source\PSoC4/PWM_1.c **** 
 157:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:.\Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:.\Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 163:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:.\Generated_Source\PSoC4/PWM_1.c **** 
 165:.\Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:.\Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 168:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 170:.\Generated_Source\PSoC4/PWM_1.c **** 
 171:.\Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:.\Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 173:.\Generated_Source\PSoC4/PWM_1.c **** 
 174:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:.\Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 177:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:.\Generated_Source\PSoC4/PWM_1.c **** }
 180:.\Generated_Source\PSoC4/PWM_1.c **** 
 181:.\Generated_Source\PSoC4/PWM_1.c **** 
 182:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:.\Generated_Source\PSoC4/PWM_1.c **** *
 186:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:.\Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:.\Generated_Source\PSoC4/PWM_1.c **** *
 189:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 191:.\Generated_Source\PSoC4/PWM_1.c **** *
 192:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 194:.\Generated_Source\PSoC4/PWM_1.c **** *
 195:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:.\Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:.\Generated_Source\PSoC4/PWM_1.c **** *
 198:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:.\Generated_Source\PSoC4/PWM_1.c **** {
  26              		.loc 1 200 0
  27              		.cfi_startproc
 201:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 5


 202:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:.\Generated_Source\PSoC4/PWM_1.c **** 
 207:.\Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
  28              		.loc 1 209 0
  29 0000 024A     		ldr	r2, .L2
  30 0002 1178     		ldrb	r1, [r2]
  31 0004 8023     		mov	r3, #128
  32 0006 0B43     		orr	r3, r1
  33 0008 1370     		strb	r3, [r2]
 210:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:.\Generated_Source\PSoC4/PWM_1.c **** }
  34              		.loc 1 211 0
  35              		@ sp needed
  36 000a 7047     		bx	lr
  37              	.L3:
  38              		.align	2
  39              	.L2:
  40 000c 72000F40 		.word	1074724978
  41              		.cfi_endproc
  42              	.LFE4:
  43              		.size	PWM_1_Enable, .-PWM_1_Enable
  44              		.section	.text.PWM_1_Stop,"ax",%progbits
  45              		.align	2
  46              		.global	PWM_1_Stop
  47              		.code	16
  48              		.thumb_func
  49              		.type	PWM_1_Stop, %function
  50              	PWM_1_Stop:
  51              	.LFB5:
 212:.\Generated_Source\PSoC4/PWM_1.c **** 
 213:.\Generated_Source\PSoC4/PWM_1.c **** 
 214:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:.\Generated_Source\PSoC4/PWM_1.c **** *
 218:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:.\Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:.\Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:.\Generated_Source\PSoC4/PWM_1.c **** *
 222:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 224:.\Generated_Source\PSoC4/PWM_1.c **** *
 225:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 227:.\Generated_Source\PSoC4/PWM_1.c **** *
 228:.\Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:.\Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:.\Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:.\Generated_Source\PSoC4/PWM_1.c **** *
 232:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:.\Generated_Source\PSoC4/PWM_1.c **** {
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 6


  52              		.loc 1 234 0
  53              		.cfi_startproc
 235:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
  54              		.loc 1 236 0
  55 0000 024A     		ldr	r2, .L5
  56 0002 1178     		ldrb	r1, [r2]
  57 0004 7F23     		mov	r3, #127
  58 0006 0B40     		and	r3, r1
  59 0008 1370     		strb	r3, [r2]
 237:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 238:.\Generated_Source\PSoC4/PWM_1.c **** 
 239:.\Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:.\Generated_Source\PSoC4/PWM_1.c **** }
  60              		.loc 1 244 0
  61              		@ sp needed
  62 000a 7047     		bx	lr
  63              	.L6:
  64              		.align	2
  65              	.L5:
  66 000c 72000F40 		.word	1074724978
  67              		.cfi_endproc
  68              	.LFE5:
  69              		.size	PWM_1_Stop, .-PWM_1_Stop
  70              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
  71              		.align	2
  72              		.global	PWM_1_WriteCounter
  73              		.code	16
  74              		.thumb_func
  75              		.type	PWM_1_WriteCounter, %function
  76              	PWM_1_WriteCounter:
  77              	.LFB6:
 245:.\Generated_Source\PSoC4/PWM_1.c **** 
 246:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:.\Generated_Source\PSoC4/PWM_1.c **** 
 249:.\Generated_Source\PSoC4/PWM_1.c **** 
 250:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:.\Generated_Source\PSoC4/PWM_1.c ****         *
 254:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:.\Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:.\Generated_Source\PSoC4/PWM_1.c ****         *
 258:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:.\Generated_Source\PSoC4/PWM_1.c ****         *
 262:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:.\Generated_Source\PSoC4/PWM_1.c ****         *
 265:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 7


 266:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:.\Generated_Source\PSoC4/PWM_1.c ****         {
 268:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:.\Generated_Source\PSoC4/PWM_1.c **** 
 270:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:.\Generated_Source\PSoC4/PWM_1.c **** 
 276:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:.\Generated_Source\PSoC4/PWM_1.c **** 
 279:.\Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:.\Generated_Source\PSoC4/PWM_1.c **** 
 281:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:.\Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:.\Generated_Source\PSoC4/PWM_1.c **** 
 288:.\Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:.\Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:.\Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:.\Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:.\Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:.\Generated_Source\PSoC4/PWM_1.c **** 
 295:.\Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:.\Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:.\Generated_Source\PSoC4/PWM_1.c **** 
 300:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 301:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:.\Generated_Source\PSoC4/PWM_1.c ****         }
 304:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:.\Generated_Source\PSoC4/PWM_1.c **** 
 306:.\Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:.\Generated_Source\PSoC4/PWM_1.c **** 
 308:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:.\Generated_Source\PSoC4/PWM_1.c **** 
 310:.\Generated_Source\PSoC4/PWM_1.c **** 
 311:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:.\Generated_Source\PSoC4/PWM_1.c ****         *
 315:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:.\Generated_Source\PSoC4/PWM_1.c ****         *
 318:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:.\Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:.\Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:.\Generated_Source\PSoC4/PWM_1.c ****         *
 322:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 8


 323:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:.\Generated_Source\PSoC4/PWM_1.c ****         *
 325:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:.\Generated_Source\PSoC4/PWM_1.c ****         {
 328:.\Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:.\Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 332:.\Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 333:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:.\Generated_Source\PSoC4/PWM_1.c **** 
 335:.\Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:.\Generated_Source\PSoC4/PWM_1.c ****         }
 340:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:.\Generated_Source\PSoC4/PWM_1.c **** 
 342:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:.\Generated_Source\PSoC4/PWM_1.c **** 
 344:.\Generated_Source\PSoC4/PWM_1.c **** 
 345:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:.\Generated_Source\PSoC4/PWM_1.c ****     *
 349:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:.\Generated_Source\PSoC4/PWM_1.c ****     *
 352:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:.\Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:.\Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:.\Generated_Source\PSoC4/PWM_1.c ****     *
 356:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:.\Generated_Source\PSoC4/PWM_1.c ****     *
 359:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:.\Generated_Source\PSoC4/PWM_1.c ****     {
 362:.\Generated_Source\PSoC4/PWM_1.c **** 
 363:.\Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:.\Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 367:.\Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:.\Generated_Source\PSoC4/PWM_1.c **** 
 370:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:.\Generated_Source\PSoC4/PWM_1.c ****     }
 375:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:.\Generated_Source\PSoC4/PWM_1.c **** 
 377:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:.\Generated_Source\PSoC4/PWM_1.c **** 
 379:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 9


 380:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:.\Generated_Source\PSoC4/PWM_1.c **** 
 382:.\Generated_Source\PSoC4/PWM_1.c **** 
 383:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:.\Generated_Source\PSoC4/PWM_1.c ****     *
 387:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:.\Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:.\Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
 390:.\Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:.\Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:.\Generated_Source\PSoC4/PWM_1.c ****     *
 393:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:.\Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:.\Generated_Source\PSoC4/PWM_1.c ****     *
 396:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:.\Generated_Source\PSoC4/PWM_1.c ****     *
 399:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:.\Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:.\Generated_Source\PSoC4/PWM_1.c ****     *
 402:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint16 counter) \
 404:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 405:.\Generated_Source\PSoC4/PWM_1.c ****     {
  78              		.loc 1 405 0
  79              		.cfi_startproc
  80              	.LVL0:
 406:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_COUNTER_LSB_PTR, counter);
  81              		.loc 1 406 0
  82 0000 014B     		ldr	r3, .L8
  83 0002 1880     		strh	r0, [r3]
 407:.\Generated_Source\PSoC4/PWM_1.c ****     }
  84              		.loc 1 407 0
  85              		@ sp needed
  86 0004 7047     		bx	lr
  87              	.L9:
  88 0006 C046     		.align	2
  89              	.L8:
  90 0008 04100F40 		.word	1074728964
  91              		.cfi_endproc
  92              	.LFE6:
  93              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
  94              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
  95              		.align	2
  96              		.global	PWM_1_ReadCounter
  97              		.code	16
  98              		.thumb_func
  99              		.type	PWM_1_ReadCounter, %function
 100              	PWM_1_ReadCounter:
 101              	.LFB7:
 408:.\Generated_Source\PSoC4/PWM_1.c **** 
 409:.\Generated_Source\PSoC4/PWM_1.c **** 
 410:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 10


 413:.\Generated_Source\PSoC4/PWM_1.c ****     *
 414:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:.\Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:.\Generated_Source\PSoC4/PWM_1.c ****     *
 418:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:.\Generated_Source\PSoC4/PWM_1.c ****     *
 421:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:.\Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:.\Generated_Source\PSoC4/PWM_1.c ****     *
 424:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCounter(void) 
 426:.\Generated_Source\PSoC4/PWM_1.c ****     {
 102              		.loc 1 426 0
 103              		.cfi_startproc
 427:.\Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:.\Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:.\Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:.\Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 104              		.loc 1 430 0
 105 0000 024B     		ldr	r3, .L11
 106 0002 1B78     		ldrb	r3, [r3]
 431:.\Generated_Source\PSoC4/PWM_1.c **** 
 432:.\Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 107              		.loc 1 433 0
 108 0004 024B     		ldr	r3, .L11+4
 109 0006 1888     		ldrh	r0, [r3]
 110 0008 80B2     		uxth	r0, r0
 434:.\Generated_Source\PSoC4/PWM_1.c ****     }
 111              		.loc 1 434 0
 112              		@ sp needed
 113 000a 7047     		bx	lr
 114              	.L12:
 115              		.align	2
 116              	.L11:
 117 000c 12000F40 		.word	1074724882
 118 0010 A4100F40 		.word	1074729124
 119              		.cfi_endproc
 120              	.LFE7:
 121              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 122              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 123              		.align	2
 124              		.global	PWM_1_WritePeriod
 125              		.code	16
 126              		.thumb_func
 127              		.type	PWM_1_WritePeriod, %function
 128              	PWM_1_WritePeriod:
 129              	.LFB9:
 435:.\Generated_Source\PSoC4/PWM_1.c **** 
 436:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:.\Generated_Source\PSoC4/PWM_1.c **** 
 438:.\Generated_Source\PSoC4/PWM_1.c **** 
 439:.\Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:.\Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:.\Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 11


 442:.\Generated_Source\PSoC4/PWM_1.c ****         *
 443:.\Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:.\Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:.\Generated_Source\PSoC4/PWM_1.c ****         *
 446:.\Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:.\Generated_Source\PSoC4/PWM_1.c ****         *
 449:.\Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:.\Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:.\Generated_Source\PSoC4/PWM_1.c ****         *
 452:.\Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:.\Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:.\Generated_Source\PSoC4/PWM_1.c ****         {
 455:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 456:.\Generated_Source\PSoC4/PWM_1.c ****             {
 457:.\Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 458:.\Generated_Source\PSoC4/PWM_1.c ****             }
 459:.\Generated_Source\PSoC4/PWM_1.c ****         }
 460:.\Generated_Source\PSoC4/PWM_1.c **** 
 461:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:.\Generated_Source\PSoC4/PWM_1.c **** 
 463:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:.\Generated_Source\PSoC4/PWM_1.c **** 
 465:.\Generated_Source\PSoC4/PWM_1.c **** 
 466:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:.\Generated_Source\PSoC4/PWM_1.c **** *
 470:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:.\Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:.\Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:.\Generated_Source\PSoC4/PWM_1.c **** *
 474:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:.\Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:.\Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:.\Generated_Source\PSoC4/PWM_1.c **** *
 478:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 480:.\Generated_Source\PSoC4/PWM_1.c **** *
 481:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:.\Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint16 period) 
 483:.\Generated_Source\PSoC4/PWM_1.c **** {
 130              		.loc 1 483 0
 131              		.cfi_startproc
 132              	.LVL1:
 484:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 487:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, period);
 133              		.loc 1 487 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1880     		strh	r0, [r3]
 488:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 489:.\Generated_Source\PSoC4/PWM_1.c **** }
 136              		.loc 1 489 0
 137              		@ sp needed
 138 0004 7047     		bx	lr
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 12


 139              	.L15:
 140 0006 C046     		.align	2
 141              	.L14:
 142 0008 84100F40 		.word	1074729092
 143              		.cfi_endproc
 144              	.LFE9:
 145              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 146              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 147              		.align	2
 148              		.global	PWM_1_WriteCompare1
 149              		.code	16
 150              		.thumb_func
 151              		.type	PWM_1_WriteCompare1, %function
 152              	PWM_1_WriteCompare1:
 153              	.LFB10:
 490:.\Generated_Source\PSoC4/PWM_1.c **** 
 491:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:.\Generated_Source\PSoC4/PWM_1.c **** 
 493:.\Generated_Source\PSoC4/PWM_1.c **** 
 494:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:.\Generated_Source\PSoC4/PWM_1.c ****     *
 498:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:.\Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:.\Generated_Source\PSoC4/PWM_1.c ****     *
 505:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:.\Generated_Source\PSoC4/PWM_1.c ****     *
 508:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:.\Generated_Source\PSoC4/PWM_1.c ****     *
 511:.\Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:.\Generated_Source\PSoC4/PWM_1.c ****     *
 515:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint16 compare) \
 517:.\Generated_Source\PSoC4/PWM_1.c ****                                        
 518:.\Generated_Source\PSoC4/PWM_1.c ****     {
 519:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 522:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 523:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:.\Generated_Source\PSoC4/PWM_1.c **** 
 525:.\Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
 526:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 529:.\Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 13


 532:.\Generated_Source\PSoC4/PWM_1.c ****     }
 533:.\Generated_Source\PSoC4/PWM_1.c **** 
 534:.\Generated_Source\PSoC4/PWM_1.c **** 
 535:.\Generated_Source\PSoC4/PWM_1.c **** #else
 536:.\Generated_Source\PSoC4/PWM_1.c **** 
 537:.\Generated_Source\PSoC4/PWM_1.c **** 
 538:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:.\Generated_Source\PSoC4/PWM_1.c ****     *
 542:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:.\Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:.\Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:.\Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:.\Generated_Source\PSoC4/PWM_1.c ****     *
 548:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:.\Generated_Source\PSoC4/PWM_1.c ****     *
 551:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:.\Generated_Source\PSoC4/PWM_1.c ****     *
 554:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint16 compare) \
 556:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 557:.\Generated_Source\PSoC4/PWM_1.c ****     {
 154              		.loc 1 557 0
 155              		.cfi_startproc
 156              	.LVL2:
 558:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 561:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, compare);
 157              		.loc 1 561 0
 158 0000 014B     		ldr	r3, .L17
 159 0002 1880     		strh	r0, [r3]
 562:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:.\Generated_Source\PSoC4/PWM_1.c ****     }
 160              		.loc 1 563 0
 161              		@ sp needed
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 C046     		.align	2
 165              	.L17:
 166 0008 44100F40 		.word	1074729028
 167              		.cfi_endproc
 168              	.LFE10:
 169              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 170              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 171              		.align	2
 172              		.global	PWM_1_WriteCompare2
 173              		.code	16
 174              		.thumb_func
 175              		.type	PWM_1_WriteCompare2, %function
 176              	PWM_1_WriteCompare2:
 177              	.LFB11:
 564:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 14


 565:.\Generated_Source\PSoC4/PWM_1.c **** 
 566:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:.\Generated_Source\PSoC4/PWM_1.c ****     *
 570:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:.\Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:.\Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:.\Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:.\Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:.\Generated_Source\PSoC4/PWM_1.c ****     *
 577:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:.\Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:.\Generated_Source\PSoC4/PWM_1.c ****     *
 580:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:.\Generated_Source\PSoC4/PWM_1.c ****     *
 583:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint16 compare) \
 585:.\Generated_Source\PSoC4/PWM_1.c ****                                         
 586:.\Generated_Source\PSoC4/PWM_1.c ****     {
 178              		.loc 1 586 0
 179              		.cfi_startproc
 180              	.LVL3:
 587:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 589:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 590:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
 181              		.loc 1 590 0
 182 0000 014B     		ldr	r3, .L20
 183 0002 1880     		strh	r0, [r3]
 591:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:.\Generated_Source\PSoC4/PWM_1.c ****     }
 184              		.loc 1 592 0
 185              		@ sp needed
 186 0004 7047     		bx	lr
 187              	.L21:
 188 0006 C046     		.align	2
 189              	.L20:
 190 0008 64100F40 		.word	1074729060
 191              		.cfi_endproc
 192              	.LFE11:
 193              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 194              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 195              		.align	2
 196              		.global	PWM_1_SetInterruptMode
 197              		.code	16
 198              		.thumb_func
 199              		.type	PWM_1_SetInterruptMode, %function
 200              	PWM_1_SetInterruptMode:
 201              	.LFB12:
 593:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:.\Generated_Source\PSoC4/PWM_1.c **** 
 595:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:.\Generated_Source\PSoC4/PWM_1.c **** 
 597:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 15


 598:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:.\Generated_Source\PSoC4/PWM_1.c ****     *
 602:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:.\Generated_Source\PSoC4/PWM_1.c ****     *
 605:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:.\Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:.\Generated_Source\PSoC4/PWM_1.c ****     *
 608:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:.\Generated_Source\PSoC4/PWM_1.c ****     *
 611:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:.\Generated_Source\PSoC4/PWM_1.c ****     {
 614:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:.\Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 618:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:.\Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
 621:.\Generated_Source\PSoC4/PWM_1.c **** 
 622:.\Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:.\Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 627:.\Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:.\Generated_Source\PSoC4/PWM_1.c **** 
 630:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:.\Generated_Source\PSoC4/PWM_1.c ****     }
 632:.\Generated_Source\PSoC4/PWM_1.c **** 
 633:.\Generated_Source\PSoC4/PWM_1.c **** 
 634:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:.\Generated_Source\PSoC4/PWM_1.c ****     *
 638:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:.\Generated_Source\PSoC4/PWM_1.c ****     *
 641:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:.\Generated_Source\PSoC4/PWM_1.c ****     *
 644:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:.\Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:.\Generated_Source\PSoC4/PWM_1.c ****     *
 647:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:.\Generated_Source\PSoC4/PWM_1.c ****     {
 650:.\Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:.\Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 654:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 16


 655:.\Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:.\Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:.\Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:.\Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:.\Generated_Source\PSoC4/PWM_1.c ****             #else
 660:.\Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:.\Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:.\Generated_Source\PSoC4/PWM_1.c ****     }
 664:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:.\Generated_Source\PSoC4/PWM_1.c **** 
 666:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:.\Generated_Source\PSoC4/PWM_1.c **** 
 668:.\Generated_Source\PSoC4/PWM_1.c **** 
 669:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:.\Generated_Source\PSoC4/PWM_1.c ****     *
 673:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:.\Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:.\Generated_Source\PSoC4/PWM_1.c ****     *
 677:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 678:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:.\Generated_Source\PSoC4/PWM_1.c ****     *
 680:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:.\Generated_Source\PSoC4/PWM_1.c ****     *
 683:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:.\Generated_Source\PSoC4/PWM_1.c ****     {
 202              		.loc 1 685 0
 203              		.cfi_startproc
 204              	.LVL4:
 686:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 205              		.loc 1 686 0
 206 0000 014B     		ldr	r3, .L23
 207 0002 1870     		strb	r0, [r3]
 687:.\Generated_Source\PSoC4/PWM_1.c ****     }
 208              		.loc 1 687 0
 209              		@ sp needed
 210 0004 7047     		bx	lr
 211              	.L24:
 212 0006 C046     		.align	2
 213              	.L23:
 214 0008 83000F40 		.word	1074724995
 215              		.cfi_endproc
 216              	.LFE12:
 217              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 218              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 219              		.align	2
 220              		.global	PWM_1_ReadStatusRegister
 221              		.code	16
 222              		.thumb_func
 223              		.type	PWM_1_ReadStatusRegister, %function
 224              	PWM_1_ReadStatusRegister:
 225              	.LFB13:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 17


 688:.\Generated_Source\PSoC4/PWM_1.c **** 
 689:.\Generated_Source\PSoC4/PWM_1.c **** 
 690:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:.\Generated_Source\PSoC4/PWM_1.c ****     *
 694:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:.\Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:.\Generated_Source\PSoC4/PWM_1.c ****     *
 697:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:.\Generated_Source\PSoC4/PWM_1.c ****     *
 700:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:.\Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:.\Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:.\Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:.\Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:.\Generated_Source\PSoC4/PWM_1.c ****     *
 710:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:.\Generated_Source\PSoC4/PWM_1.c ****     {
 226              		.loc 1 712 0
 227              		.cfi_startproc
 713:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 228              		.loc 1 713 0
 229 0000 014B     		ldr	r3, .L26
 230 0002 1878     		ldrb	r0, [r3]
 231 0004 C0B2     		uxtb	r0, r0
 714:.\Generated_Source\PSoC4/PWM_1.c ****     }
 232              		.loc 1 714 0
 233              		@ sp needed
 234 0006 7047     		bx	lr
 235              	.L27:
 236              		.align	2
 237              	.L26:
 238 0008 63000F40 		.word	1074724963
 239              		.cfi_endproc
 240              	.LFE13:
 241              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 242              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 243              		.align	2
 244              		.global	PWM_1_ReadControlRegister
 245              		.code	16
 246              		.thumb_func
 247              		.type	PWM_1_ReadControlRegister, %function
 248              	PWM_1_ReadControlRegister:
 249              	.LFB14:
 715:.\Generated_Source\PSoC4/PWM_1.c **** 
 716:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:.\Generated_Source\PSoC4/PWM_1.c **** 
 718:.\Generated_Source\PSoC4/PWM_1.c **** 
 719:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 18


 721:.\Generated_Source\PSoC4/PWM_1.c **** 
 722:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:.\Generated_Source\PSoC4/PWM_1.c ****     *
 726:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:.\Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:.\Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:.\Generated_Source\PSoC4/PWM_1.c ****     *
 730:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:.\Generated_Source\PSoC4/PWM_1.c ****     *
 733:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:.\Generated_Source\PSoC4/PWM_1.c ****     *
 736:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:.\Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:.\Generated_Source\PSoC4/PWM_1.c ****     {
 250              		.loc 1 738 0
 251              		.cfi_startproc
 739:.\Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:.\Generated_Source\PSoC4/PWM_1.c **** 
 741:.\Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 252              		.loc 1 741 0
 253 0000 014B     		ldr	r3, .L29
 254 0002 1878     		ldrb	r0, [r3]
 255 0004 C0B2     		uxtb	r0, r0
 256              	.LVL5:
 742:.\Generated_Source\PSoC4/PWM_1.c ****         return (result);
 743:.\Generated_Source\PSoC4/PWM_1.c ****     }
 257              		.loc 1 743 0
 258              		@ sp needed
 259 0006 7047     		bx	lr
 260              	.L30:
 261              		.align	2
 262              	.L29:
 263 0008 72000F40 		.word	1074724978
 264              		.cfi_endproc
 265              	.LFE14:
 266              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 267              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 268              		.align	2
 269              		.global	PWM_1_WriteControlRegister
 270              		.code	16
 271              		.thumb_func
 272              		.type	PWM_1_WriteControlRegister, %function
 273              	PWM_1_WriteControlRegister:
 274              	.LFB15:
 744:.\Generated_Source\PSoC4/PWM_1.c **** 
 745:.\Generated_Source\PSoC4/PWM_1.c **** 
 746:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:.\Generated_Source\PSoC4/PWM_1.c ****     *
 750:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:.\Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:.\Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 19


 753:.\Generated_Source\PSoC4/PWM_1.c ****     *
 754:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:.\Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:.\Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:.\Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:.\Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:.\Generated_Source\PSoC4/PWM_1.c ****     *
 761:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:.\Generated_Source\PSoC4/PWM_1.c ****     *
 764:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:.\Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:.\Generated_Source\PSoC4/PWM_1.c ****     {
 275              		.loc 1 766 0
 276              		.cfi_startproc
 277              	.LVL6:
 767:.\Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 278              		.loc 1 767 0
 279 0000 014B     		ldr	r3, .L32
 280 0002 1870     		strb	r0, [r3]
 768:.\Generated_Source\PSoC4/PWM_1.c ****     }
 281              		.loc 1 768 0
 282              		@ sp needed
 283 0004 7047     		bx	lr
 284              	.L33:
 285 0006 C046     		.align	2
 286              	.L32:
 287 0008 72000F40 		.word	1074724978
 288              		.cfi_endproc
 289              	.LFE15:
 290              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 291              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 292              		.align	2
 293              		.global	PWM_1_ReadCapture
 294              		.code	16
 295              		.thumb_func
 296              		.type	PWM_1_ReadCapture, %function
 297              	PWM_1_ReadCapture:
 298              	.LFB16:
 769:.\Generated_Source\PSoC4/PWM_1.c **** 
 770:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:.\Generated_Source\PSoC4/PWM_1.c **** 
 772:.\Generated_Source\PSoC4/PWM_1.c **** 
 773:.\Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:.\Generated_Source\PSoC4/PWM_1.c **** 
 775:.\Generated_Source\PSoC4/PWM_1.c **** 
 776:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:.\Generated_Source\PSoC4/PWM_1.c ****     *
 780:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:.\Generated_Source\PSoC4/PWM_1.c ****     *
 783:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:.\Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 20


 786:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:.\Generated_Source\PSoC4/PWM_1.c ****     *
 789:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCapture(void) 
 791:.\Generated_Source\PSoC4/PWM_1.c ****     {
 299              		.loc 1 791 0
 300              		.cfi_startproc
 792:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_CAPTURE_LSB_PTR));
 301              		.loc 1 792 0
 302 0000 014B     		ldr	r3, .L35
 303 0002 1888     		ldrh	r0, [r3]
 304 0004 80B2     		uxth	r0, r0
 793:.\Generated_Source\PSoC4/PWM_1.c ****     }
 305              		.loc 1 793 0
 306              		@ sp needed
 307 0006 7047     		bx	lr
 308              	.L36:
 309              		.align	2
 310              	.L35:
 311 0008 A4100F40 		.word	1074729124
 312              		.cfi_endproc
 313              	.LFE16:
 314              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 315              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 316              		.align	2
 317              		.global	PWM_1_ClearFIFO
 318              		.code	16
 319              		.thumb_func
 320              		.type	PWM_1_ClearFIFO, %function
 321              	PWM_1_ClearFIFO:
 322              	.LFB8:
 454:.\Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 323              		.loc 1 454 0
 324              		.cfi_startproc
 325 0000 08B5     		push	{r3, lr}
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 455:.\Generated_Source\PSoC4/PWM_1.c ****             {
 329              		.loc 1 455 0
 330 0002 01E0     		b	.L38
 331              	.L39:
 457:.\Generated_Source\PSoC4/PWM_1.c ****             }
 332              		.loc 1 457 0
 333 0004 FFF7FEFF 		bl	PWM_1_ReadCapture
 334              	.LVL7:
 335              	.L38:
 455:.\Generated_Source\PSoC4/PWM_1.c ****             {
 336              		.loc 1 455 0
 337 0008 FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 338              	.LVL8:
 339 000c C306     		lsl	r3, r0, #27
 340 000e F9D4     		bmi	.L39
 459:.\Generated_Source\PSoC4/PWM_1.c **** 
 341              		.loc 1 459 0
 342              		@ sp needed
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 21


 343 0010 08BD     		pop	{r3, pc}
 344              		.cfi_endproc
 345              	.LFE8:
 346              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 347 0012 C046     		.section	.text.PWM_1_Init,"ax",%progbits
 348              		.align	2
 349              		.global	PWM_1_Init
 350              		.code	16
 351              		.thumb_func
 352              		.type	PWM_1_Init, %function
 353              	PWM_1_Init:
 354              	.LFB3:
  85:.\Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
 355              		.loc 1 85 0
 356              		.cfi_startproc
 357 0000 38B5     		push	{r3, r4, r5, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 3, -16
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 5, -8
 362              		.cfi_offset 14, -4
 117:.\Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 363              		.loc 1 117 0
 364 0002 1649     		ldr	r1, .L41
 365 0004 0B78     		ldrb	r3, [r1]
 366 0006 3F22     		mov	r2, #63
 367 0008 9343     		bic	r3, r2
 368              	.LVL9:
 119:.\Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 369              		.loc 1 119 0
 370 000a 363A     		sub	r2, r2, #54
 371 000c 1343     		orr	r3, r2
 372              	.LVL10:
 373 000e 0B70     		strb	r3, [r1]
 129:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 374              		.loc 1 129 0
 375 0010 1349     		ldr	r1, .L41+4
 376 0012 0A78     		ldrb	r2, [r1]
 377 0014 0123     		mov	r3, #1
 378 0016 1A43     		orr	r2, r3
 379 0018 D2B2     		uxtb	r2, r2
 380 001a 0A70     		strb	r2, [r1]
 130:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 381              		.loc 1 130 0
 382 001c 114C     		ldr	r4, .L41+8
 383 001e 2278     		ldrb	r2, [r4]
 384 0020 1343     		orr	r3, r2
 385 0022 DBB2     		uxtb	r3, r3
 386 0024 2370     		strb	r3, [r4]
 133:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 387              		.loc 1 133 0
 388 0026 104D     		ldr	r5, .L41+12
 389 0028 281C     		mov	r0, r5
 390 002a FFF7FEFF 		bl	PWM_1_WriteCounter
 391              	.LVL11:
 136:.\Generated_Source\PSoC4/PWM_1.c **** 
 392              		.loc 1 136 0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 22


 393 002e 281C     		mov	r0, r5
 394 0030 FFF7FEFF 		bl	PWM_1_WritePeriod
 395              	.LVL12:
 141:.\Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 396              		.loc 1 141 0
 397 0034 0D48     		ldr	r0, .L41+16
 398 0036 FFF7FEFF 		bl	PWM_1_WriteCompare1
 399              	.LVL13:
 142:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 400              		.loc 1 142 0
 401 003a 3F20     		mov	r0, #63
 402 003c FFF7FEFF 		bl	PWM_1_WriteCompare2
 403              	.LVL14:
 154:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 404              		.loc 1 154 0
 405 0040 0020     		mov	r0, #0
 406 0042 FFF7FEFF 		bl	PWM_1_SetInterruptMode
 407              	.LVL15:
 167:.\Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 408              		.loc 1 167 0
 409 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 410              	.LVL16:
 169:.\Generated_Source\PSoC4/PWM_1.c **** 
 411              		.loc 1 169 0
 412 004a 2278     		ldrb	r2, [r4]
 413 004c 1023     		mov	r3, #16
 414 004e 1343     		orr	r3, r2
 415 0050 2370     		strb	r3, [r4]
 172:.\Generated_Source\PSoC4/PWM_1.c **** 
 416              		.loc 1 172 0
 417 0052 FFF7FEFF 		bl	CyExitCriticalSection
 418              	.LVL17:
 176:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 419              		.loc 1 176 0
 420 0056 FFF7FEFF 		bl	PWM_1_ClearFIFO
 421              	.LVL18:
 179:.\Generated_Source\PSoC4/PWM_1.c **** 
 422              		.loc 1 179 0
 423              		@ sp needed
 424 005a 38BD     		pop	{r3, r4, r5, pc}
 425              	.L42:
 426              		.align	2
 427              	.L41:
 428 005c 72000F40 		.word	1074724978
 429 0060 92000F40 		.word	1074725010
 430 0064 93000F40 		.word	1074725011
 431 0068 0F270000 		.word	9999
 432 006c DC050000 		.word	1500
 433              		.cfi_endproc
 434              	.LFE3:
 435              		.size	PWM_1_Init, .-PWM_1_Init
 436              		.section	.text.PWM_1_Start,"ax",%progbits
 437              		.align	2
 438              		.global	PWM_1_Start
 439              		.code	16
 440              		.thumb_func
 441              		.type	PWM_1_Start, %function
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 23


 442              	PWM_1_Start:
 443              	.LFB2:
  56:.\Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
 444              		.loc 1 56 0
 445              		.cfi_startproc
 446 0000 08B5     		push	{r3, lr}
 447              		.cfi_def_cfa_offset 8
 448              		.cfi_offset 3, -8
 449              		.cfi_offset 14, -4
  58:.\Generated_Source\PSoC4/PWM_1.c ****     {
 450              		.loc 1 58 0
 451 0002 064B     		ldr	r3, .L45
 452 0004 1B78     		ldrb	r3, [r3]
 453 0006 002B     		cmp	r3, #0
 454 0008 04D1     		bne	.L44
  60:.\Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
 455              		.loc 1 60 0
 456 000a FFF7FEFF 		bl	PWM_1_Init
 457              	.LVL19:
  61:.\Generated_Source\PSoC4/PWM_1.c ****     }
 458              		.loc 1 61 0
 459 000e 0122     		mov	r2, #1
 460 0010 024B     		ldr	r3, .L45
 461 0012 1A70     		strb	r2, [r3]
 462              	.L44:
  63:.\Generated_Source\PSoC4/PWM_1.c **** 
 463              		.loc 1 63 0
 464 0014 FFF7FEFF 		bl	PWM_1_Enable
 465              	.LVL20:
  65:.\Generated_Source\PSoC4/PWM_1.c **** 
 466              		.loc 1 65 0
 467              		@ sp needed
 468 0018 08BD     		pop	{r3, pc}
 469              	.L46:
 470 001a C046     		.align	2
 471              	.L45:
 472 001c 00000000 		.word	.LANCHOR0
 473              		.cfi_endproc
 474              	.LFE2:
 475              		.size	PWM_1_Start, .-PWM_1_Start
 476              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 477              		.align	2
 478              		.global	PWM_1_ReadCompare1
 479              		.code	16
 480              		.thumb_func
 481              		.type	PWM_1_ReadCompare1, %function
 482              	PWM_1_ReadCompare1:
 483              	.LFB17:
 794:.\Generated_Source\PSoC4/PWM_1.c **** 
 795:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:.\Generated_Source\PSoC4/PWM_1.c **** 
 797:.\Generated_Source\PSoC4/PWM_1.c **** 
 798:.\Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:.\Generated_Source\PSoC4/PWM_1.c **** 
 800:.\Generated_Source\PSoC4/PWM_1.c **** 
 801:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 24


 803:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:.\Generated_Source\PSoC4/PWM_1.c ****     *
 805:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:.\Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:.\Generated_Source\PSoC4/PWM_1.c ****     *
 809:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:.\Generated_Source\PSoC4/PWM_1.c ****     *
 812:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:.\Generated_Source\PSoC4/PWM_1.c ****     *
 815:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare(void) 
 817:.\Generated_Source\PSoC4/PWM_1.c ****     {
 818:.\Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:.\Generated_Source\PSoC4/PWM_1.c ****             return ((uint16)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:.\Generated_Source\PSoC4/PWM_1.c ****         #else
 821:.\Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 822:.\Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:.\Generated_Source\PSoC4/PWM_1.c ****     }
 824:.\Generated_Source\PSoC4/PWM_1.c **** 
 825:.\Generated_Source\PSoC4/PWM_1.c **** #else
 826:.\Generated_Source\PSoC4/PWM_1.c **** 
 827:.\Generated_Source\PSoC4/PWM_1.c **** 
 828:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:.\Generated_Source\PSoC4/PWM_1.c ****     *
 832:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:.\Generated_Source\PSoC4/PWM_1.c ****     *
 835:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:.\Generated_Source\PSoC4/PWM_1.c ****     *
 838:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:.\Generated_Source\PSoC4/PWM_1.c ****     *
 841:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare1(void) 
 843:.\Generated_Source\PSoC4/PWM_1.c ****     {
 484              		.loc 1 843 0
 485              		.cfi_startproc
 844:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 486              		.loc 1 844 0
 487 0000 014B     		ldr	r3, .L48
 488 0002 1888     		ldrh	r0, [r3]
 489 0004 80B2     		uxth	r0, r0
 845:.\Generated_Source\PSoC4/PWM_1.c ****     }
 490              		.loc 1 845 0
 491              		@ sp needed
 492 0006 7047     		bx	lr
 493              	.L49:
 494              		.align	2
 495              	.L48:
 496 0008 44100F40 		.word	1074729028
 497              		.cfi_endproc
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 25


 498              	.LFE17:
 499              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 500              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 501              		.align	2
 502              		.global	PWM_1_ReadCompare2
 503              		.code	16
 504              		.thumb_func
 505              		.type	PWM_1_ReadCompare2, %function
 506              	PWM_1_ReadCompare2:
 507              	.LFB18:
 846:.\Generated_Source\PSoC4/PWM_1.c **** 
 847:.\Generated_Source\PSoC4/PWM_1.c **** 
 848:.\Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:.\Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:.\Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:.\Generated_Source\PSoC4/PWM_1.c ****     *
 852:.\Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:.\Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:.\Generated_Source\PSoC4/PWM_1.c ****     *
 855:.\Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:.\Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:.\Generated_Source\PSoC4/PWM_1.c ****     *
 858:.\Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:.\Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:.\Generated_Source\PSoC4/PWM_1.c ****     *
 861:.\Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:.\Generated_Source\PSoC4/PWM_1.c ****     uint16 PWM_1_ReadCompare2(void) 
 863:.\Generated_Source\PSoC4/PWM_1.c ****     {
 508              		.loc 1 863 0
 509              		.cfi_startproc
 864:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_COMPARE2_LSB_PTR));
 510              		.loc 1 864 0
 511 0000 014B     		ldr	r3, .L51
 512 0002 1888     		ldrh	r0, [r3]
 513 0004 80B2     		uxth	r0, r0
 865:.\Generated_Source\PSoC4/PWM_1.c ****     }
 514              		.loc 1 865 0
 515              		@ sp needed
 516 0006 7047     		bx	lr
 517              	.L52:
 518              		.align	2
 519              	.L51:
 520 0008 64100F40 		.word	1074729060
 521              		.cfi_endproc
 522              	.LFE18:
 523              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 524              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 525              		.align	2
 526              		.global	PWM_1_ReadPeriod
 527              		.code	16
 528              		.thumb_func
 529              		.type	PWM_1_ReadPeriod, %function
 530              	PWM_1_ReadPeriod:
 531              	.LFB19:
 866:.\Generated_Source\PSoC4/PWM_1.c **** 
 867:.\Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:.\Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 26


 869:.\Generated_Source\PSoC4/PWM_1.c **** 
 870:.\Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:.\Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:.\Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:.\Generated_Source\PSoC4/PWM_1.c **** *
 874:.\Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:.\Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:.\Generated_Source\PSoC4/PWM_1.c **** *
 877:.\Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:.\Generated_Source\PSoC4/PWM_1.c **** *  None
 879:.\Generated_Source\PSoC4/PWM_1.c **** *
 880:.\Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:.\Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:.\Generated_Source\PSoC4/PWM_1.c **** *
 883:.\Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:.\Generated_Source\PSoC4/PWM_1.c **** uint16 PWM_1_ReadPeriod(void) 
 885:.\Generated_Source\PSoC4/PWM_1.c **** {
 532              		.loc 1 885 0
 533              		.cfi_startproc
 886:.\Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:.\Generated_Source\PSoC4/PWM_1.c ****         return ((uint16)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:.\Generated_Source\PSoC4/PWM_1.c ****     #else
 889:.\Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 534              		.loc 1 889 0
 535 0000 014B     		ldr	r3, .L54
 536 0002 1888     		ldrh	r0, [r3]
 537 0004 80B2     		uxth	r0, r0
 890:.\Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:.\Generated_Source\PSoC4/PWM_1.c **** }
 538              		.loc 1 891 0
 539              		@ sp needed
 540 0006 7047     		bx	lr
 541              	.L55:
 542              		.align	2
 543              	.L54:
 544 0008 84100F40 		.word	1074729092
 545              		.cfi_endproc
 546              	.LFE19:
 547              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 548              		.global	PWM_1_initVar
 549              		.bss
 550              		.set	.LANCHOR0,. + 0
 551              		.type	PWM_1_initVar, %object
 552              		.size	PWM_1_initVar, 1
 553              	PWM_1_initVar:
 554 0000 00       		.space	1
 555              		.text
 556              	.Letext0:
 557              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 558              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 559              		.section	.debug_info,"",%progbits
 560              	.Ldebug_info0:
 561 0000 96030000 		.4byte	0x396
 562 0004 0400     		.2byte	0x4
 563 0006 00000000 		.4byte	.Ldebug_abbrev0
 564 000a 04       		.byte	0x4
 565 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 27


 566 000c 38020000 		.4byte	.LASF42
 567 0010 01       		.byte	0x1
 568 0011 0E030000 		.4byte	.LASF43
 569 0015 E4010000 		.4byte	.LASF44
 570 0019 00000000 		.4byte	.Ldebug_ranges0+0
 571 001d 00000000 		.4byte	0
 572 0021 00000000 		.4byte	.Ldebug_line0
 573 0025 02       		.uleb128 0x2
 574 0026 01       		.byte	0x1
 575 0027 06       		.byte	0x6
 576 0028 5A030000 		.4byte	.LASF0
 577 002c 02       		.uleb128 0x2
 578 002d 01       		.byte	0x1
 579 002e 08       		.byte	0x8
 580 002f DE000000 		.4byte	.LASF1
 581 0033 02       		.uleb128 0x2
 582 0034 02       		.byte	0x2
 583 0035 05       		.byte	0x5
 584 0036 7C010000 		.4byte	.LASF2
 585 003a 02       		.uleb128 0x2
 586 003b 02       		.byte	0x2
 587 003c 07       		.byte	0x7
 588 003d 7E000000 		.4byte	.LASF3
 589 0041 02       		.uleb128 0x2
 590 0042 04       		.byte	0x4
 591 0043 05       		.byte	0x5
 592 0044 4C030000 		.4byte	.LASF4
 593 0048 02       		.uleb128 0x2
 594 0049 04       		.byte	0x4
 595 004a 07       		.byte	0x7
 596 004b 02010000 		.4byte	.LASF5
 597 004f 02       		.uleb128 0x2
 598 0050 08       		.byte	0x8
 599 0051 05       		.byte	0x5
 600 0052 C6020000 		.4byte	.LASF6
 601 0056 02       		.uleb128 0x2
 602 0057 08       		.byte	0x8
 603 0058 07       		.byte	0x7
 604 0059 C7000000 		.4byte	.LASF7
 605 005d 03       		.uleb128 0x3
 606 005e 04       		.byte	0x4
 607 005f 05       		.byte	0x5
 608 0060 696E7400 		.ascii	"int\000"
 609 0064 02       		.uleb128 0x2
 610 0065 04       		.byte	0x4
 611 0066 07       		.byte	0x7
 612 0067 C1010000 		.4byte	.LASF8
 613 006b 04       		.uleb128 0x4
 614 006c 14010000 		.4byte	.LASF9
 615 0070 02       		.byte	0x2
 616 0071 C2       		.byte	0xc2
 617 0072 2C000000 		.4byte	0x2c
 618 0076 04       		.uleb128 0x4
 619 0077 98010000 		.4byte	.LASF10
 620 007b 02       		.byte	0x2
 621 007c C3       		.byte	0xc3
 622 007d 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 28


 623 0081 02       		.uleb128 0x2
 624 0082 04       		.byte	0x4
 625 0083 04       		.byte	0x4
 626 0084 B9000000 		.4byte	.LASF11
 627 0088 02       		.uleb128 0x2
 628 0089 08       		.byte	0x8
 629 008a 04       		.byte	0x4
 630 008b 52010000 		.4byte	.LASF12
 631 008f 02       		.uleb128 0x2
 632 0090 01       		.byte	0x1
 633 0091 08       		.byte	0x8
 634 0092 55030000 		.4byte	.LASF13
 635 0096 05       		.uleb128 0x5
 636 0097 EC000000 		.4byte	.LASF14
 637 009b 02       		.byte	0x2
 638 009c 6C01     		.2byte	0x16c
 639 009e A2000000 		.4byte	0xa2
 640 00a2 06       		.uleb128 0x6
 641 00a3 6B000000 		.4byte	0x6b
 642 00a7 05       		.uleb128 0x5
 643 00a8 00000000 		.4byte	.LASF15
 644 00ac 02       		.byte	0x2
 645 00ad 6D01     		.2byte	0x16d
 646 00af B3000000 		.4byte	0xb3
 647 00b3 06       		.uleb128 0x6
 648 00b4 76000000 		.4byte	0x76
 649 00b8 02       		.uleb128 0x2
 650 00b9 04       		.byte	0x4
 651 00ba 07       		.byte	0x7
 652 00bb 2F020000 		.4byte	.LASF16
 653 00bf 07       		.uleb128 0x7
 654 00c0 06000000 		.4byte	.LASF17
 655 00c4 01       		.byte	0x1
 656 00c5 C7       		.byte	0xc7
 657 00c6 00000000 		.4byte	.LFB4
 658 00ca 10000000 		.4byte	.LFE4-.LFB4
 659 00ce 01       		.uleb128 0x1
 660 00cf 9C       		.byte	0x9c
 661 00d0 07       		.uleb128 0x7
 662 00d1 41030000 		.4byte	.LASF18
 663 00d5 01       		.byte	0x1
 664 00d6 E9       		.byte	0xe9
 665 00d7 00000000 		.4byte	.LFB5
 666 00db 10000000 		.4byte	.LFE5-.LFB5
 667 00df 01       		.uleb128 0x1
 668 00e0 9C       		.byte	0x9c
 669 00e1 08       		.uleb128 0x8
 670 00e2 2E000000 		.4byte	.LASF19
 671 00e6 01       		.byte	0x1
 672 00e7 9301     		.2byte	0x193
 673 00e9 00000000 		.4byte	.LFB6
 674 00ed 0C000000 		.4byte	.LFE6-.LFB6
 675 00f1 01       		.uleb128 0x1
 676 00f2 9C       		.byte	0x9c
 677 00f3 06010000 		.4byte	0x106
 678 00f7 09       		.uleb128 0x9
 679 00f8 BF000000 		.4byte	.LASF21
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 29


 680 00fc 01       		.byte	0x1
 681 00fd 9301     		.2byte	0x193
 682 00ff 76000000 		.4byte	0x76
 683 0103 01       		.uleb128 0x1
 684 0104 50       		.byte	0x50
 685 0105 00       		.byte	0
 686 0106 0A       		.uleb128 0xa
 687 0107 2F030000 		.4byte	.LASF28
 688 010b 01       		.byte	0x1
 689 010c A901     		.2byte	0x1a9
 690 010e 76000000 		.4byte	0x76
 691 0112 00000000 		.4byte	.LFB7
 692 0116 14000000 		.4byte	.LFE7-.LFB7
 693 011a 01       		.uleb128 0x1
 694 011b 9C       		.byte	0x9c
 695 011c 08       		.uleb128 0x8
 696 011d FC020000 		.4byte	.LASF20
 697 0121 01       		.byte	0x1
 698 0122 E201     		.2byte	0x1e2
 699 0124 00000000 		.4byte	.LFB9
 700 0128 0C000000 		.4byte	.LFE9-.LFB9
 701 012c 01       		.uleb128 0x1
 702 012d 9C       		.byte	0x9c
 703 012e 41010000 		.4byte	0x141
 704 0132 09       		.uleb128 0x9
 705 0133 51000000 		.4byte	.LASF22
 706 0137 01       		.byte	0x1
 707 0138 E201     		.2byte	0x1e2
 708 013a 76000000 		.4byte	0x76
 709 013e 01       		.uleb128 0x1
 710 013f 50       		.byte	0x50
 711 0140 00       		.byte	0
 712 0141 08       		.uleb128 0x8
 713 0142 91000000 		.4byte	.LASF23
 714 0146 01       		.byte	0x1
 715 0147 2B02     		.2byte	0x22b
 716 0149 00000000 		.4byte	.LFB10
 717 014d 0C000000 		.4byte	.LFE10-.LFB10
 718 0151 01       		.uleb128 0x1
 719 0152 9C       		.byte	0x9c
 720 0153 66010000 		.4byte	0x166
 721 0157 09       		.uleb128 0x9
 722 0158 66030000 		.4byte	.LASF24
 723 015c 01       		.byte	0x1
 724 015d 2B02     		.2byte	0x22b
 725 015f 76000000 		.4byte	0x76
 726 0163 01       		.uleb128 0x1
 727 0164 50       		.byte	0x50
 728 0165 00       		.byte	0
 729 0166 08       		.uleb128 0x8
 730 0167 A5000000 		.4byte	.LASF25
 731 016b 01       		.byte	0x1
 732 016c 4802     		.2byte	0x248
 733 016e 00000000 		.4byte	.LFB11
 734 0172 0C000000 		.4byte	.LFE11-.LFB11
 735 0176 01       		.uleb128 0x1
 736 0177 9C       		.byte	0x9c
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 30


 737 0178 8B010000 		.4byte	0x18b
 738 017c 09       		.uleb128 0x9
 739 017d 66030000 		.4byte	.LASF24
 740 0181 01       		.byte	0x1
 741 0182 4802     		.2byte	0x248
 742 0184 76000000 		.4byte	0x76
 743 0188 01       		.uleb128 0x1
 744 0189 50       		.byte	0x50
 745 018a 00       		.byte	0
 746 018b 08       		.uleb128 0x8
 747 018c 22010000 		.4byte	.LASF26
 748 0190 01       		.byte	0x1
 749 0191 AC02     		.2byte	0x2ac
 750 0193 00000000 		.4byte	.LFB12
 751 0197 0C000000 		.4byte	.LFE12-.LFB12
 752 019b 01       		.uleb128 0x1
 753 019c 9C       		.byte	0x9c
 754 019d B0010000 		.4byte	0x1b0
 755 01a1 09       		.uleb128 0x9
 756 01a2 EE020000 		.4byte	.LASF27
 757 01a6 01       		.byte	0x1
 758 01a7 AC02     		.2byte	0x2ac
 759 01a9 6B000000 		.4byte	0x6b
 760 01ad 01       		.uleb128 0x1
 761 01ae 50       		.byte	0x50
 762 01af 00       		.byte	0
 763 01b0 0A       		.uleb128 0xa
 764 01b1 39010000 		.4byte	.LASF29
 765 01b5 01       		.byte	0x1
 766 01b6 C702     		.2byte	0x2c7
 767 01b8 6B000000 		.4byte	0x6b
 768 01bc 00000000 		.4byte	.LFB13
 769 01c0 0C000000 		.4byte	.LFE13-.LFB13
 770 01c4 01       		.uleb128 0x1
 771 01c5 9C       		.byte	0x9c
 772 01c6 0B       		.uleb128 0xb
 773 01c7 D4020000 		.4byte	.LASF45
 774 01cb 01       		.byte	0x1
 775 01cc E102     		.2byte	0x2e1
 776 01ce 6B000000 		.4byte	0x6b
 777 01d2 00000000 		.4byte	.LFB14
 778 01d6 0C000000 		.4byte	.LFE14-.LFB14
 779 01da 01       		.uleb128 0x1
 780 01db 9C       		.byte	0x9c
 781 01dc EF010000 		.4byte	0x1ef
 782 01e0 0C       		.uleb128 0xc
 783 01e1 23020000 		.4byte	.LASF35
 784 01e5 01       		.byte	0x1
 785 01e6 E302     		.2byte	0x2e3
 786 01e8 6B000000 		.4byte	0x6b
 787 01ec 01       		.uleb128 0x1
 788 01ed 50       		.byte	0x50
 789 01ee 00       		.byte	0
 790 01ef 08       		.uleb128 0x8
 791 01f0 13000000 		.4byte	.LASF30
 792 01f4 01       		.byte	0x1
 793 01f5 FD02     		.2byte	0x2fd
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 31


 794 01f7 00000000 		.4byte	.LFB15
 795 01fb 0C000000 		.4byte	.LFE15-.LFB15
 796 01ff 01       		.uleb128 0x1
 797 0200 9C       		.byte	0x9c
 798 0201 14020000 		.4byte	0x214
 799 0205 09       		.uleb128 0x9
 800 0206 1A010000 		.4byte	.LASF31
 801 020a 01       		.byte	0x1
 802 020b FD02     		.2byte	0x2fd
 803 020d 6B000000 		.4byte	0x6b
 804 0211 01       		.uleb128 0x1
 805 0212 50       		.byte	0x50
 806 0213 00       		.byte	0
 807 0214 0A       		.uleb128 0xa
 808 0215 86010000 		.4byte	.LASF32
 809 0219 01       		.byte	0x1
 810 021a 1603     		.2byte	0x316
 811 021c 76000000 		.4byte	0x76
 812 0220 00000000 		.4byte	.LFB16
 813 0224 0C000000 		.4byte	.LFE16-.LFB16
 814 0228 01       		.uleb128 0x1
 815 0229 9C       		.byte	0x9c
 816 022a 08       		.uleb128 0x8
 817 022b 41000000 		.4byte	.LASF33
 818 022f 01       		.byte	0x1
 819 0230 C501     		.2byte	0x1c5
 820 0232 00000000 		.4byte	.LFB8
 821 0236 12000000 		.4byte	.LFE8-.LFB8
 822 023a 01       		.uleb128 0x1
 823 023b 9C       		.byte	0x9c
 824 023c 53020000 		.4byte	0x253
 825 0240 0D       		.uleb128 0xd
 826 0241 08000000 		.4byte	.LVL7
 827 0245 14020000 		.4byte	0x214
 828 0249 0D       		.uleb128 0xd
 829 024a 0C000000 		.4byte	.LVL8
 830 024e B0010000 		.4byte	0x1b0
 831 0252 00       		.byte	0
 832 0253 0E       		.uleb128 0xe
 833 0254 9F010000 		.4byte	.LASF34
 834 0258 01       		.byte	0x1
 835 0259 54       		.byte	0x54
 836 025a 00000000 		.4byte	.LFB3
 837 025e 70000000 		.4byte	.LFE3-.LFB3
 838 0262 01       		.uleb128 0x1
 839 0263 9C       		.byte	0x9c
 840 0264 06030000 		.4byte	0x306
 841 0268 0F       		.uleb128 0xf
 842 0269 2A020000 		.4byte	.LASF36
 843 026d 01       		.byte	0x1
 844 026e 57       		.byte	0x57
 845 026f 6B000000 		.4byte	0x6b
 846 0273 00000000 		.4byte	.LLST0
 847 0277 0F       		.uleb128 0xf
 848 0278 59010000 		.4byte	.LASF37
 849 027c 01       		.byte	0x1
 850 027d 5D       		.byte	0x5d
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 32


 851 027e 6B000000 		.4byte	0x6b
 852 0282 13000000 		.4byte	.LLST1
 853 0286 10       		.uleb128 0x10
 854 0287 2E000000 		.4byte	.LVL11
 855 028b E1000000 		.4byte	0xe1
 856 028f 9A020000 		.4byte	0x29a
 857 0293 11       		.uleb128 0x11
 858 0294 01       		.uleb128 0x1
 859 0295 50       		.byte	0x50
 860 0296 02       		.uleb128 0x2
 861 0297 75       		.byte	0x75
 862 0298 00       		.sleb128 0
 863 0299 00       		.byte	0
 864 029a 10       		.uleb128 0x10
 865 029b 34000000 		.4byte	.LVL12
 866 029f 1C010000 		.4byte	0x11c
 867 02a3 AE020000 		.4byte	0x2ae
 868 02a7 11       		.uleb128 0x11
 869 02a8 01       		.uleb128 0x1
 870 02a9 50       		.byte	0x50
 871 02aa 02       		.uleb128 0x2
 872 02ab 75       		.byte	0x75
 873 02ac 00       		.sleb128 0
 874 02ad 00       		.byte	0
 875 02ae 10       		.uleb128 0x10
 876 02af 3A000000 		.4byte	.LVL13
 877 02b3 41010000 		.4byte	0x141
 878 02b7 C3020000 		.4byte	0x2c3
 879 02bb 11       		.uleb128 0x11
 880 02bc 01       		.uleb128 0x1
 881 02bd 50       		.byte	0x50
 882 02be 03       		.uleb128 0x3
 883 02bf 0A       		.byte	0xa
 884 02c0 DC05     		.2byte	0x5dc
 885 02c2 00       		.byte	0
 886 02c3 10       		.uleb128 0x10
 887 02c4 40000000 		.4byte	.LVL14
 888 02c8 66010000 		.4byte	0x166
 889 02cc D7020000 		.4byte	0x2d7
 890 02d0 11       		.uleb128 0x11
 891 02d1 01       		.uleb128 0x1
 892 02d2 50       		.byte	0x50
 893 02d3 02       		.uleb128 0x2
 894 02d4 08       		.byte	0x8
 895 02d5 3F       		.byte	0x3f
 896 02d6 00       		.byte	0
 897 02d7 10       		.uleb128 0x10
 898 02d8 46000000 		.4byte	.LVL15
 899 02dc 8B010000 		.4byte	0x18b
 900 02e0 EA020000 		.4byte	0x2ea
 901 02e4 11       		.uleb128 0x11
 902 02e5 01       		.uleb128 0x1
 903 02e6 50       		.byte	0x50
 904 02e7 01       		.uleb128 0x1
 905 02e8 30       		.byte	0x30
 906 02e9 00       		.byte	0
 907 02ea 0D       		.uleb128 0xd
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 33


 908 02eb 4A000000 		.4byte	.LVL16
 909 02ef 81030000 		.4byte	0x381
 910 02f3 0D       		.uleb128 0xd
 911 02f4 56000000 		.4byte	.LVL17
 912 02f8 8C030000 		.4byte	0x38c
 913 02fc 0D       		.uleb128 0xd
 914 02fd 5A000000 		.4byte	.LVL18
 915 0301 2A020000 		.4byte	0x22a
 916 0305 00       		.byte	0
 917 0306 0E       		.uleb128 0xe
 918 0307 6E030000 		.4byte	.LASF38
 919 030b 01       		.byte	0x1
 920 030c 37       		.byte	0x37
 921 030d 00000000 		.4byte	.LFB2
 922 0311 20000000 		.4byte	.LFE2-.LFB2
 923 0315 01       		.uleb128 0x1
 924 0316 9C       		.byte	0x9c
 925 0317 2E030000 		.4byte	0x32e
 926 031b 0D       		.uleb128 0xd
 927 031c 0E000000 		.4byte	.LVL19
 928 0320 53020000 		.4byte	0x253
 929 0324 0D       		.uleb128 0xd
 930 0325 18000000 		.4byte	.LVL20
 931 0329 BF000000 		.4byte	0xbf
 932 032d 00       		.byte	0
 933 032e 0A       		.uleb128 0xa
 934 032f 58000000 		.4byte	.LASF39
 935 0333 01       		.byte	0x1
 936 0334 4A03     		.2byte	0x34a
 937 0336 76000000 		.4byte	0x76
 938 033a 00000000 		.4byte	.LFB17
 939 033e 0C000000 		.4byte	.LFE17-.LFB17
 940 0342 01       		.uleb128 0x1
 941 0343 9C       		.byte	0x9c
 942 0344 0A       		.uleb128 0xa
 943 0345 6B000000 		.4byte	.LASF40
 944 0349 01       		.byte	0x1
 945 034a 5E03     		.2byte	0x35e
 946 034c 76000000 		.4byte	0x76
 947 0350 00000000 		.4byte	.LFB18
 948 0354 0C000000 		.4byte	.LFE18-.LFB18
 949 0358 01       		.uleb128 0x1
 950 0359 9C       		.byte	0x9c
 951 035a 0A       		.uleb128 0xa
 952 035b F1000000 		.4byte	.LASF41
 953 035f 01       		.byte	0x1
 954 0360 7403     		.2byte	0x374
 955 0362 76000000 		.4byte	0x76
 956 0366 00000000 		.4byte	.LFB19
 957 036a 0C000000 		.4byte	.LFE19-.LFB19
 958 036e 01       		.uleb128 0x1
 959 036f 9C       		.byte	0x9c
 960 0370 12       		.uleb128 0x12
 961 0371 6E010000 		.4byte	.LASF46
 962 0375 01       		.byte	0x1
 963 0376 20       		.byte	0x20
 964 0377 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 34


 965 037b 05       		.uleb128 0x5
 966 037c 03       		.byte	0x3
 967 037d 00000000 		.4byte	PWM_1_initVar
 968 0381 13       		.uleb128 0x13
 969 0382 AA010000 		.4byte	.LASF47
 970 0386 03       		.byte	0x3
 971 0387 5E       		.byte	0x5e
 972 0388 6B000000 		.4byte	0x6b
 973 038c 14       		.uleb128 0x14
 974 038d CE010000 		.4byte	.LASF48
 975 0391 03       		.byte	0x3
 976 0392 5F       		.byte	0x5f
 977 0393 15       		.uleb128 0x15
 978 0394 6B000000 		.4byte	0x6b
 979 0398 00       		.byte	0
 980 0399 00       		.byte	0
 981              		.section	.debug_abbrev,"",%progbits
 982              	.Ldebug_abbrev0:
 983 0000 01       		.uleb128 0x1
 984 0001 11       		.uleb128 0x11
 985 0002 01       		.byte	0x1
 986 0003 25       		.uleb128 0x25
 987 0004 0E       		.uleb128 0xe
 988 0005 13       		.uleb128 0x13
 989 0006 0B       		.uleb128 0xb
 990 0007 03       		.uleb128 0x3
 991 0008 0E       		.uleb128 0xe
 992 0009 1B       		.uleb128 0x1b
 993 000a 0E       		.uleb128 0xe
 994 000b 55       		.uleb128 0x55
 995 000c 17       		.uleb128 0x17
 996 000d 11       		.uleb128 0x11
 997 000e 01       		.uleb128 0x1
 998 000f 10       		.uleb128 0x10
 999 0010 17       		.uleb128 0x17
 1000 0011 00       		.byte	0
 1001 0012 00       		.byte	0
 1002 0013 02       		.uleb128 0x2
 1003 0014 24       		.uleb128 0x24
 1004 0015 00       		.byte	0
 1005 0016 0B       		.uleb128 0xb
 1006 0017 0B       		.uleb128 0xb
 1007 0018 3E       		.uleb128 0x3e
 1008 0019 0B       		.uleb128 0xb
 1009 001a 03       		.uleb128 0x3
 1010 001b 0E       		.uleb128 0xe
 1011 001c 00       		.byte	0
 1012 001d 00       		.byte	0
 1013 001e 03       		.uleb128 0x3
 1014 001f 24       		.uleb128 0x24
 1015 0020 00       		.byte	0
 1016 0021 0B       		.uleb128 0xb
 1017 0022 0B       		.uleb128 0xb
 1018 0023 3E       		.uleb128 0x3e
 1019 0024 0B       		.uleb128 0xb
 1020 0025 03       		.uleb128 0x3
 1021 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 35


 1022 0027 00       		.byte	0
 1023 0028 00       		.byte	0
 1024 0029 04       		.uleb128 0x4
 1025 002a 16       		.uleb128 0x16
 1026 002b 00       		.byte	0
 1027 002c 03       		.uleb128 0x3
 1028 002d 0E       		.uleb128 0xe
 1029 002e 3A       		.uleb128 0x3a
 1030 002f 0B       		.uleb128 0xb
 1031 0030 3B       		.uleb128 0x3b
 1032 0031 0B       		.uleb128 0xb
 1033 0032 49       		.uleb128 0x49
 1034 0033 13       		.uleb128 0x13
 1035 0034 00       		.byte	0
 1036 0035 00       		.byte	0
 1037 0036 05       		.uleb128 0x5
 1038 0037 16       		.uleb128 0x16
 1039 0038 00       		.byte	0
 1040 0039 03       		.uleb128 0x3
 1041 003a 0E       		.uleb128 0xe
 1042 003b 3A       		.uleb128 0x3a
 1043 003c 0B       		.uleb128 0xb
 1044 003d 3B       		.uleb128 0x3b
 1045 003e 05       		.uleb128 0x5
 1046 003f 49       		.uleb128 0x49
 1047 0040 13       		.uleb128 0x13
 1048 0041 00       		.byte	0
 1049 0042 00       		.byte	0
 1050 0043 06       		.uleb128 0x6
 1051 0044 35       		.uleb128 0x35
 1052 0045 00       		.byte	0
 1053 0046 49       		.uleb128 0x49
 1054 0047 13       		.uleb128 0x13
 1055 0048 00       		.byte	0
 1056 0049 00       		.byte	0
 1057 004a 07       		.uleb128 0x7
 1058 004b 2E       		.uleb128 0x2e
 1059 004c 00       		.byte	0
 1060 004d 3F       		.uleb128 0x3f
 1061 004e 19       		.uleb128 0x19
 1062 004f 03       		.uleb128 0x3
 1063 0050 0E       		.uleb128 0xe
 1064 0051 3A       		.uleb128 0x3a
 1065 0052 0B       		.uleb128 0xb
 1066 0053 3B       		.uleb128 0x3b
 1067 0054 0B       		.uleb128 0xb
 1068 0055 27       		.uleb128 0x27
 1069 0056 19       		.uleb128 0x19
 1070 0057 11       		.uleb128 0x11
 1071 0058 01       		.uleb128 0x1
 1072 0059 12       		.uleb128 0x12
 1073 005a 06       		.uleb128 0x6
 1074 005b 40       		.uleb128 0x40
 1075 005c 18       		.uleb128 0x18
 1076 005d 9742     		.uleb128 0x2117
 1077 005f 19       		.uleb128 0x19
 1078 0060 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 36


 1079 0061 00       		.byte	0
 1080 0062 08       		.uleb128 0x8
 1081 0063 2E       		.uleb128 0x2e
 1082 0064 01       		.byte	0x1
 1083 0065 3F       		.uleb128 0x3f
 1084 0066 19       		.uleb128 0x19
 1085 0067 03       		.uleb128 0x3
 1086 0068 0E       		.uleb128 0xe
 1087 0069 3A       		.uleb128 0x3a
 1088 006a 0B       		.uleb128 0xb
 1089 006b 3B       		.uleb128 0x3b
 1090 006c 05       		.uleb128 0x5
 1091 006d 27       		.uleb128 0x27
 1092 006e 19       		.uleb128 0x19
 1093 006f 11       		.uleb128 0x11
 1094 0070 01       		.uleb128 0x1
 1095 0071 12       		.uleb128 0x12
 1096 0072 06       		.uleb128 0x6
 1097 0073 40       		.uleb128 0x40
 1098 0074 18       		.uleb128 0x18
 1099 0075 9742     		.uleb128 0x2117
 1100 0077 19       		.uleb128 0x19
 1101 0078 01       		.uleb128 0x1
 1102 0079 13       		.uleb128 0x13
 1103 007a 00       		.byte	0
 1104 007b 00       		.byte	0
 1105 007c 09       		.uleb128 0x9
 1106 007d 05       		.uleb128 0x5
 1107 007e 00       		.byte	0
 1108 007f 03       		.uleb128 0x3
 1109 0080 0E       		.uleb128 0xe
 1110 0081 3A       		.uleb128 0x3a
 1111 0082 0B       		.uleb128 0xb
 1112 0083 3B       		.uleb128 0x3b
 1113 0084 05       		.uleb128 0x5
 1114 0085 49       		.uleb128 0x49
 1115 0086 13       		.uleb128 0x13
 1116 0087 02       		.uleb128 0x2
 1117 0088 18       		.uleb128 0x18
 1118 0089 00       		.byte	0
 1119 008a 00       		.byte	0
 1120 008b 0A       		.uleb128 0xa
 1121 008c 2E       		.uleb128 0x2e
 1122 008d 00       		.byte	0
 1123 008e 3F       		.uleb128 0x3f
 1124 008f 19       		.uleb128 0x19
 1125 0090 03       		.uleb128 0x3
 1126 0091 0E       		.uleb128 0xe
 1127 0092 3A       		.uleb128 0x3a
 1128 0093 0B       		.uleb128 0xb
 1129 0094 3B       		.uleb128 0x3b
 1130 0095 05       		.uleb128 0x5
 1131 0096 27       		.uleb128 0x27
 1132 0097 19       		.uleb128 0x19
 1133 0098 49       		.uleb128 0x49
 1134 0099 13       		.uleb128 0x13
 1135 009a 11       		.uleb128 0x11
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 37


 1136 009b 01       		.uleb128 0x1
 1137 009c 12       		.uleb128 0x12
 1138 009d 06       		.uleb128 0x6
 1139 009e 40       		.uleb128 0x40
 1140 009f 18       		.uleb128 0x18
 1141 00a0 9742     		.uleb128 0x2117
 1142 00a2 19       		.uleb128 0x19
 1143 00a3 00       		.byte	0
 1144 00a4 00       		.byte	0
 1145 00a5 0B       		.uleb128 0xb
 1146 00a6 2E       		.uleb128 0x2e
 1147 00a7 01       		.byte	0x1
 1148 00a8 3F       		.uleb128 0x3f
 1149 00a9 19       		.uleb128 0x19
 1150 00aa 03       		.uleb128 0x3
 1151 00ab 0E       		.uleb128 0xe
 1152 00ac 3A       		.uleb128 0x3a
 1153 00ad 0B       		.uleb128 0xb
 1154 00ae 3B       		.uleb128 0x3b
 1155 00af 05       		.uleb128 0x5
 1156 00b0 27       		.uleb128 0x27
 1157 00b1 19       		.uleb128 0x19
 1158 00b2 49       		.uleb128 0x49
 1159 00b3 13       		.uleb128 0x13
 1160 00b4 11       		.uleb128 0x11
 1161 00b5 01       		.uleb128 0x1
 1162 00b6 12       		.uleb128 0x12
 1163 00b7 06       		.uleb128 0x6
 1164 00b8 40       		.uleb128 0x40
 1165 00b9 18       		.uleb128 0x18
 1166 00ba 9742     		.uleb128 0x2117
 1167 00bc 19       		.uleb128 0x19
 1168 00bd 01       		.uleb128 0x1
 1169 00be 13       		.uleb128 0x13
 1170 00bf 00       		.byte	0
 1171 00c0 00       		.byte	0
 1172 00c1 0C       		.uleb128 0xc
 1173 00c2 34       		.uleb128 0x34
 1174 00c3 00       		.byte	0
 1175 00c4 03       		.uleb128 0x3
 1176 00c5 0E       		.uleb128 0xe
 1177 00c6 3A       		.uleb128 0x3a
 1178 00c7 0B       		.uleb128 0xb
 1179 00c8 3B       		.uleb128 0x3b
 1180 00c9 05       		.uleb128 0x5
 1181 00ca 49       		.uleb128 0x49
 1182 00cb 13       		.uleb128 0x13
 1183 00cc 02       		.uleb128 0x2
 1184 00cd 18       		.uleb128 0x18
 1185 00ce 00       		.byte	0
 1186 00cf 00       		.byte	0
 1187 00d0 0D       		.uleb128 0xd
 1188 00d1 898201   		.uleb128 0x4109
 1189 00d4 00       		.byte	0
 1190 00d5 11       		.uleb128 0x11
 1191 00d6 01       		.uleb128 0x1
 1192 00d7 31       		.uleb128 0x31
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 38


 1193 00d8 13       		.uleb128 0x13
 1194 00d9 00       		.byte	0
 1195 00da 00       		.byte	0
 1196 00db 0E       		.uleb128 0xe
 1197 00dc 2E       		.uleb128 0x2e
 1198 00dd 01       		.byte	0x1
 1199 00de 3F       		.uleb128 0x3f
 1200 00df 19       		.uleb128 0x19
 1201 00e0 03       		.uleb128 0x3
 1202 00e1 0E       		.uleb128 0xe
 1203 00e2 3A       		.uleb128 0x3a
 1204 00e3 0B       		.uleb128 0xb
 1205 00e4 3B       		.uleb128 0x3b
 1206 00e5 0B       		.uleb128 0xb
 1207 00e6 27       		.uleb128 0x27
 1208 00e7 19       		.uleb128 0x19
 1209 00e8 11       		.uleb128 0x11
 1210 00e9 01       		.uleb128 0x1
 1211 00ea 12       		.uleb128 0x12
 1212 00eb 06       		.uleb128 0x6
 1213 00ec 40       		.uleb128 0x40
 1214 00ed 18       		.uleb128 0x18
 1215 00ee 9742     		.uleb128 0x2117
 1216 00f0 19       		.uleb128 0x19
 1217 00f1 01       		.uleb128 0x1
 1218 00f2 13       		.uleb128 0x13
 1219 00f3 00       		.byte	0
 1220 00f4 00       		.byte	0
 1221 00f5 0F       		.uleb128 0xf
 1222 00f6 34       		.uleb128 0x34
 1223 00f7 00       		.byte	0
 1224 00f8 03       		.uleb128 0x3
 1225 00f9 0E       		.uleb128 0xe
 1226 00fa 3A       		.uleb128 0x3a
 1227 00fb 0B       		.uleb128 0xb
 1228 00fc 3B       		.uleb128 0x3b
 1229 00fd 0B       		.uleb128 0xb
 1230 00fe 49       		.uleb128 0x49
 1231 00ff 13       		.uleb128 0x13
 1232 0100 02       		.uleb128 0x2
 1233 0101 17       		.uleb128 0x17
 1234 0102 00       		.byte	0
 1235 0103 00       		.byte	0
 1236 0104 10       		.uleb128 0x10
 1237 0105 898201   		.uleb128 0x4109
 1238 0108 01       		.byte	0x1
 1239 0109 11       		.uleb128 0x11
 1240 010a 01       		.uleb128 0x1
 1241 010b 31       		.uleb128 0x31
 1242 010c 13       		.uleb128 0x13
 1243 010d 01       		.uleb128 0x1
 1244 010e 13       		.uleb128 0x13
 1245 010f 00       		.byte	0
 1246 0110 00       		.byte	0
 1247 0111 11       		.uleb128 0x11
 1248 0112 8A8201   		.uleb128 0x410a
 1249 0115 00       		.byte	0
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 39


 1250 0116 02       		.uleb128 0x2
 1251 0117 18       		.uleb128 0x18
 1252 0118 9142     		.uleb128 0x2111
 1253 011a 18       		.uleb128 0x18
 1254 011b 00       		.byte	0
 1255 011c 00       		.byte	0
 1256 011d 12       		.uleb128 0x12
 1257 011e 34       		.uleb128 0x34
 1258 011f 00       		.byte	0
 1259 0120 03       		.uleb128 0x3
 1260 0121 0E       		.uleb128 0xe
 1261 0122 3A       		.uleb128 0x3a
 1262 0123 0B       		.uleb128 0xb
 1263 0124 3B       		.uleb128 0x3b
 1264 0125 0B       		.uleb128 0xb
 1265 0126 49       		.uleb128 0x49
 1266 0127 13       		.uleb128 0x13
 1267 0128 3F       		.uleb128 0x3f
 1268 0129 19       		.uleb128 0x19
 1269 012a 02       		.uleb128 0x2
 1270 012b 18       		.uleb128 0x18
 1271 012c 00       		.byte	0
 1272 012d 00       		.byte	0
 1273 012e 13       		.uleb128 0x13
 1274 012f 2E       		.uleb128 0x2e
 1275 0130 00       		.byte	0
 1276 0131 3F       		.uleb128 0x3f
 1277 0132 19       		.uleb128 0x19
 1278 0133 03       		.uleb128 0x3
 1279 0134 0E       		.uleb128 0xe
 1280 0135 3A       		.uleb128 0x3a
 1281 0136 0B       		.uleb128 0xb
 1282 0137 3B       		.uleb128 0x3b
 1283 0138 0B       		.uleb128 0xb
 1284 0139 27       		.uleb128 0x27
 1285 013a 19       		.uleb128 0x19
 1286 013b 49       		.uleb128 0x49
 1287 013c 13       		.uleb128 0x13
 1288 013d 3C       		.uleb128 0x3c
 1289 013e 19       		.uleb128 0x19
 1290 013f 00       		.byte	0
 1291 0140 00       		.byte	0
 1292 0141 14       		.uleb128 0x14
 1293 0142 2E       		.uleb128 0x2e
 1294 0143 01       		.byte	0x1
 1295 0144 3F       		.uleb128 0x3f
 1296 0145 19       		.uleb128 0x19
 1297 0146 03       		.uleb128 0x3
 1298 0147 0E       		.uleb128 0xe
 1299 0148 3A       		.uleb128 0x3a
 1300 0149 0B       		.uleb128 0xb
 1301 014a 3B       		.uleb128 0x3b
 1302 014b 0B       		.uleb128 0xb
 1303 014c 27       		.uleb128 0x27
 1304 014d 19       		.uleb128 0x19
 1305 014e 3C       		.uleb128 0x3c
 1306 014f 19       		.uleb128 0x19
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 40


 1307 0150 00       		.byte	0
 1308 0151 00       		.byte	0
 1309 0152 15       		.uleb128 0x15
 1310 0153 05       		.uleb128 0x5
 1311 0154 00       		.byte	0
 1312 0155 49       		.uleb128 0x49
 1313 0156 13       		.uleb128 0x13
 1314 0157 00       		.byte	0
 1315 0158 00       		.byte	0
 1316 0159 00       		.byte	0
 1317              		.section	.debug_loc,"",%progbits
 1318              	.Ldebug_loc0:
 1319              	.LLST0:
 1320 0000 0A000000 		.4byte	.LVL9
 1321 0004 0E000000 		.4byte	.LVL10
 1322 0008 0100     		.2byte	0x1
 1323 000a 53       		.byte	0x53
 1324 000b 00000000 		.4byte	0
 1325 000f 00000000 		.4byte	0
 1326              	.LLST1:
 1327 0013 4A000000 		.4byte	.LVL16
 1328 0017 55000000 		.4byte	.LVL17-1
 1329 001b 0100     		.2byte	0x1
 1330 001d 50       		.byte	0x50
 1331 001e 00000000 		.4byte	0
 1332 0022 00000000 		.4byte	0
 1333              		.section	.debug_aranges,"",%progbits
 1334 0000 A4000000 		.4byte	0xa4
 1335 0004 0200     		.2byte	0x2
 1336 0006 00000000 		.4byte	.Ldebug_info0
 1337 000a 04       		.byte	0x4
 1338 000b 00       		.byte	0
 1339 000c 0000     		.2byte	0
 1340 000e 0000     		.2byte	0
 1341 0010 00000000 		.4byte	.LFB4
 1342 0014 10000000 		.4byte	.LFE4-.LFB4
 1343 0018 00000000 		.4byte	.LFB5
 1344 001c 10000000 		.4byte	.LFE5-.LFB5
 1345 0020 00000000 		.4byte	.LFB6
 1346 0024 0C000000 		.4byte	.LFE6-.LFB6
 1347 0028 00000000 		.4byte	.LFB7
 1348 002c 14000000 		.4byte	.LFE7-.LFB7
 1349 0030 00000000 		.4byte	.LFB9
 1350 0034 0C000000 		.4byte	.LFE9-.LFB9
 1351 0038 00000000 		.4byte	.LFB10
 1352 003c 0C000000 		.4byte	.LFE10-.LFB10
 1353 0040 00000000 		.4byte	.LFB11
 1354 0044 0C000000 		.4byte	.LFE11-.LFB11
 1355 0048 00000000 		.4byte	.LFB12
 1356 004c 0C000000 		.4byte	.LFE12-.LFB12
 1357 0050 00000000 		.4byte	.LFB13
 1358 0054 0C000000 		.4byte	.LFE13-.LFB13
 1359 0058 00000000 		.4byte	.LFB14
 1360 005c 0C000000 		.4byte	.LFE14-.LFB14
 1361 0060 00000000 		.4byte	.LFB15
 1362 0064 0C000000 		.4byte	.LFE15-.LFB15
 1363 0068 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 41


 1364 006c 0C000000 		.4byte	.LFE16-.LFB16
 1365 0070 00000000 		.4byte	.LFB8
 1366 0074 12000000 		.4byte	.LFE8-.LFB8
 1367 0078 00000000 		.4byte	.LFB3
 1368 007c 70000000 		.4byte	.LFE3-.LFB3
 1369 0080 00000000 		.4byte	.LFB2
 1370 0084 20000000 		.4byte	.LFE2-.LFB2
 1371 0088 00000000 		.4byte	.LFB17
 1372 008c 0C000000 		.4byte	.LFE17-.LFB17
 1373 0090 00000000 		.4byte	.LFB18
 1374 0094 0C000000 		.4byte	.LFE18-.LFB18
 1375 0098 00000000 		.4byte	.LFB19
 1376 009c 0C000000 		.4byte	.LFE19-.LFB19
 1377 00a0 00000000 		.4byte	0
 1378 00a4 00000000 		.4byte	0
 1379              		.section	.debug_ranges,"",%progbits
 1380              	.Ldebug_ranges0:
 1381 0000 00000000 		.4byte	.LFB4
 1382 0004 10000000 		.4byte	.LFE4
 1383 0008 00000000 		.4byte	.LFB5
 1384 000c 10000000 		.4byte	.LFE5
 1385 0010 00000000 		.4byte	.LFB6
 1386 0014 0C000000 		.4byte	.LFE6
 1387 0018 00000000 		.4byte	.LFB7
 1388 001c 14000000 		.4byte	.LFE7
 1389 0020 00000000 		.4byte	.LFB9
 1390 0024 0C000000 		.4byte	.LFE9
 1391 0028 00000000 		.4byte	.LFB10
 1392 002c 0C000000 		.4byte	.LFE10
 1393 0030 00000000 		.4byte	.LFB11
 1394 0034 0C000000 		.4byte	.LFE11
 1395 0038 00000000 		.4byte	.LFB12
 1396 003c 0C000000 		.4byte	.LFE12
 1397 0040 00000000 		.4byte	.LFB13
 1398 0044 0C000000 		.4byte	.LFE13
 1399 0048 00000000 		.4byte	.LFB14
 1400 004c 0C000000 		.4byte	.LFE14
 1401 0050 00000000 		.4byte	.LFB15
 1402 0054 0C000000 		.4byte	.LFE15
 1403 0058 00000000 		.4byte	.LFB16
 1404 005c 0C000000 		.4byte	.LFE16
 1405 0060 00000000 		.4byte	.LFB8
 1406 0064 12000000 		.4byte	.LFE8
 1407 0068 00000000 		.4byte	.LFB3
 1408 006c 70000000 		.4byte	.LFE3
 1409 0070 00000000 		.4byte	.LFB2
 1410 0074 20000000 		.4byte	.LFE2
 1411 0078 00000000 		.4byte	.LFB17
 1412 007c 0C000000 		.4byte	.LFE17
 1413 0080 00000000 		.4byte	.LFB18
 1414 0084 0C000000 		.4byte	.LFE18
 1415 0088 00000000 		.4byte	.LFB19
 1416 008c 0C000000 		.4byte	.LFE19
 1417 0090 00000000 		.4byte	0
 1418 0094 00000000 		.4byte	0
 1419              		.section	.debug_line,"",%progbits
 1420              	.Ldebug_line0:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 42


 1421 0000 B4010000 		.section	.debug_str,"MS",%progbits,1
 1421      02004F00 
 1421      00000201 
 1421      FB0E0D00 
 1421      01010101 
 1422              	.LASF15:
 1423 0000 72656731 		.ascii	"reg16\000"
 1423      3600
 1424              	.LASF17:
 1425 0006 50574D5F 		.ascii	"PWM_1_Enable\000"
 1425      315F456E 
 1425      61626C65 
 1425      00
 1426              	.LASF30:
 1427 0013 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1427      315F5772 
 1427      69746543 
 1427      6F6E7472 
 1427      6F6C5265 
 1428              	.LASF19:
 1429 002e 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1429      315F5772 
 1429      69746543 
 1429      6F756E74 
 1429      657200
 1430              	.LASF33:
 1431 0041 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1431      315F436C 
 1431      65617246 
 1431      49464F00 
 1432              	.LASF22:
 1433 0051 70657269 		.ascii	"period\000"
 1433      6F6400
 1434              	.LASF39:
 1435 0058 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1435      315F5265 
 1435      6164436F 
 1435      6D706172 
 1435      653100
 1436              	.LASF40:
 1437 006b 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1437      315F5265 
 1437      6164436F 
 1437      6D706172 
 1437      653200
 1438              	.LASF3:
 1439 007e 73686F72 		.ascii	"short unsigned int\000"
 1439      7420756E 
 1439      7369676E 
 1439      65642069 
 1439      6E7400
 1440              	.LASF23:
 1441 0091 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1441      315F5772 
 1441      69746543 
 1441      6F6D7061 
 1441      72653100 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 43


 1442              	.LASF25:
 1443 00a5 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1443      315F5772 
 1443      69746543 
 1443      6F6D7061 
 1443      72653200 
 1444              	.LASF11:
 1445 00b9 666C6F61 		.ascii	"float\000"
 1445      7400
 1446              	.LASF21:
 1447 00bf 636F756E 		.ascii	"counter\000"
 1447      74657200 
 1448              	.LASF7:
 1449 00c7 6C6F6E67 		.ascii	"long long unsigned int\000"
 1449      206C6F6E 
 1449      6720756E 
 1449      7369676E 
 1449      65642069 
 1450              	.LASF1:
 1451 00de 756E7369 		.ascii	"unsigned char\000"
 1451      676E6564 
 1451      20636861 
 1451      7200
 1452              	.LASF14:
 1453 00ec 72656738 		.ascii	"reg8\000"
 1453      00
 1454              	.LASF41:
 1455 00f1 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1455      315F5265 
 1455      61645065 
 1455      72696F64 
 1455      00
 1456              	.LASF5:
 1457 0102 6C6F6E67 		.ascii	"long unsigned int\000"
 1457      20756E73 
 1457      69676E65 
 1457      6420696E 
 1457      7400
 1458              	.LASF9:
 1459 0114 75696E74 		.ascii	"uint8\000"
 1459      3800
 1460              	.LASF31:
 1461 011a 636F6E74 		.ascii	"control\000"
 1461      726F6C00 
 1462              	.LASF26:
 1463 0122 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1463      315F5365 
 1463      74496E74 
 1463      65727275 
 1463      70744D6F 
 1464              	.LASF29:
 1465 0139 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1465      315F5265 
 1465      61645374 
 1465      61747573 
 1465      52656769 
 1466              	.LASF12:
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 44


 1467 0152 646F7562 		.ascii	"double\000"
 1467      6C6500
 1468              	.LASF37:
 1469 0159 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1469      315F696E 
 1469      74657272 
 1469      75707453 
 1469      74617465 
 1470              	.LASF46:
 1471 016e 50574D5F 		.ascii	"PWM_1_initVar\000"
 1471      315F696E 
 1471      69745661 
 1471      7200
 1472              	.LASF2:
 1473 017c 73686F72 		.ascii	"short int\000"
 1473      7420696E 
 1473      7400
 1474              	.LASF32:
 1475 0186 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1475      315F5265 
 1475      61644361 
 1475      70747572 
 1475      6500
 1476              	.LASF10:
 1477 0198 75696E74 		.ascii	"uint16\000"
 1477      313600
 1478              	.LASF34:
 1479 019f 50574D5F 		.ascii	"PWM_1_Init\000"
 1479      315F496E 
 1479      697400
 1480              	.LASF47:
 1481 01aa 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1481      74657243 
 1481      72697469 
 1481      63616C53 
 1481      65637469 
 1482              	.LASF8:
 1483 01c1 756E7369 		.ascii	"unsigned int\000"
 1483      676E6564 
 1483      20696E74 
 1483      00
 1484              	.LASF48:
 1485 01ce 43794578 		.ascii	"CyExitCriticalSection\000"
 1485      69744372 
 1485      69746963 
 1485      616C5365 
 1485      6374696F 
 1486              	.LASF44:
 1487 01e4 433A5C55 		.ascii	"C:\\Users\\Kevin\\Documents\\GitHub\\EZtimer\\Firmw"
 1487      73657273 
 1487      5C4B6576 
 1487      696E5C44 
 1487      6F63756D 
 1488 0211 6172655C 		.ascii	"are\\EZtimer.cydsn\000"
 1488      455A7469 
 1488      6D65722E 
 1488      63796473 
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 45


 1488      6E00
 1489              	.LASF35:
 1490 0223 72657375 		.ascii	"result\000"
 1490      6C7400
 1491              	.LASF36:
 1492 022a 6374726C 		.ascii	"ctrl\000"
 1492      00
 1493              	.LASF16:
 1494 022f 73697A65 		.ascii	"sizetype\000"
 1494      74797065 
 1494      00
 1495              	.LASF42:
 1496 0238 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1496      4320342E 
 1496      392E3320 
 1496      32303135 
 1496      30333033 
 1497 026b 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1497      20726576 
 1497      6973696F 
 1497      6E203232 
 1497      31323230 
 1498 029e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1498      66756E63 
 1498      74696F6E 
 1498      2D736563 
 1498      74696F6E 
 1499              	.LASF6:
 1500 02c6 6C6F6E67 		.ascii	"long long int\000"
 1500      206C6F6E 
 1500      6720696E 
 1500      7400
 1501              	.LASF45:
 1502 02d4 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1502      315F5265 
 1502      6164436F 
 1502      6E74726F 
 1502      6C526567 
 1503              	.LASF27:
 1504 02ee 696E7465 		.ascii	"interruptMode\000"
 1504      72727570 
 1504      744D6F64 
 1504      6500
 1505              	.LASF20:
 1506 02fc 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1506      315F5772 
 1506      69746550 
 1506      6572696F 
 1506      6400
 1507              	.LASF43:
 1508 030e 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\PWM_1.c\000"
 1508      6E657261 
 1508      7465645F 
 1508      536F7572 
 1508      63655C50 
 1509              	.LASF28:
 1510 032f 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
ARM GAS  C:\Users\Kevin\AppData\Local\Temp\ccgKTtl9.s 			page 46


 1510      315F5265 
 1510      6164436F 
 1510      756E7465 
 1510      7200
 1511              	.LASF18:
 1512 0341 50574D5F 		.ascii	"PWM_1_Stop\000"
 1512      315F5374 
 1512      6F7000
 1513              	.LASF4:
 1514 034c 6C6F6E67 		.ascii	"long int\000"
 1514      20696E74 
 1514      00
 1515              	.LASF13:
 1516 0355 63686172 		.ascii	"char\000"
 1516      00
 1517              	.LASF0:
 1518 035a 7369676E 		.ascii	"signed char\000"
 1518      65642063 
 1518      68617200 
 1519              	.LASF24:
 1520 0366 636F6D70 		.ascii	"compare\000"
 1520      61726500 
 1521              	.LASF38:
 1522 036e 50574D5F 		.ascii	"PWM_1_Start\000"
 1522      315F5374 
 1522      61727400 
 1523              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
